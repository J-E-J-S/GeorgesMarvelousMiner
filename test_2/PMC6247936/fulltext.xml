<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.1 20151215//EN" "JATS-archivearticle1.dtd"> 
<article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="brief-report"><?properties open_access?><?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?><?DTDIdentifier.IdentifierType public?><?SourceDTD.DTDName JATS-journalpublishing1.dtd?><?SourceDTD.Version 1.1?><?ConverterInfo.XSLTName jp2nlmx2.xsl?><?ConverterInfo.Version 1?><front><journal-meta><journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id><journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id><journal-id journal-id-type="publisher-id">bioinformatics</journal-id><journal-title-group><journal-title>Bioinformatics</journal-title></journal-title-group><issn pub-type="ppub">1367-4803</issn><issn pub-type="epub">1367-4811</issn><publisher><publisher-name>Oxford University Press</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmcid">6247936</article-id><article-id pub-id-type="doi">10.1093/bioinformatics/bty447</article-id><article-id pub-id-type="publisher-id">bty447</article-id><article-categories><subj-group subj-group-type="heading"><subject>Applications Notes</subject><subj-group subj-group-type="category-toc-heading"><subject>Data and Text Mining</subject></subj-group></subj-group></article-categories><title-group><article-title>MetQy&#x02014;an R package to query metabolic functions of genes and genomes</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Martinez-Vernon</surname><given-names>Andrea S</given-names></name><xref ref-type="aff" rid="bty447-aff1">1</xref><xref ref-type="aff" rid="bty447-aff2">2</xref><xref ref-type="aff" rid="bty447-aff3">3</xref></contrib><contrib contrib-type="author"><name><surname>Farrell</surname><given-names>Frederick</given-names></name><xref ref-type="aff" rid="bty447-aff2">2</xref></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0002-9504-3796</contrib-id><name><surname>Soyer</surname><given-names>Orkun S</given-names></name><xref ref-type="aff" rid="bty447-aff1">1</xref><xref ref-type="aff" rid="bty447-aff2">2</xref><xref ref-type="aff" rid="bty447-aff3">3</xref><xref ref-type="corresp" rid="bty447-cor1"/><!--<email>O.Soyer@warwick.ac.uk</email>--></contrib></contrib-group><aff id="bty447-aff1"><label>1</label>Synthetic Biology Centre for Doctoral Training</aff><aff id="bty447-aff2"><label>2</label>School of Life Sciences</aff><aff id="bty447-aff3"><label>3</label>Warwick Integrative Synthetic Biology (WISB) Centre, Life Sciences Building, University of Warwick, Coventry CV4 7AL, UK</aff><contrib-group><contrib contrib-type="editor"><name><surname>Hancock</surname><given-names>John</given-names></name><role>Associate Editor</role></contrib></contrib-group><author-notes><corresp id="bty447-cor1">To whom correspondence should be addressed. E-mail: <email>O.Soyer@warwick.ac.uk</email></corresp></author-notes><pub-date pub-type="ppub"><day>01</day><month>12</month><year>2018</year></pub-date><pub-date pub-type="epub" iso-8601-date="2018-06-05"><day>05</day><month>6</month><year>2018</year></pub-date><pub-date pub-type="pmc-release"><day>05</day><month>6</month><year>2018</year></pub-date><!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. --><volume>34</volume><issue>23</issue><fpage>4134</fpage><lpage>4137</lpage><history><date date-type="received"><day>26</day><month>11</month><year>2017</year></date><date date-type="rev-recd"><day>14</day><month>3</month><year>2018</year></date><date date-type="accepted"><day>01</day><month>6</month><year>2018</year></date></history><permissions><copyright-statement>&#x000a9; The Author(s) 2018. Published by Oxford University Press.</copyright-statement><copyright-year>2018</copyright-year><license license-type="cc-by" xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p></license></permissions><self-uri xlink:href="bty447.pdf"/><abstract><title>Abstract</title><sec id="s1"><title>Summary</title><p>With the rapid accumulation of sequencing data from genomic and metagenomic studies, there is an acute need for better tools that facilitate their analyses against biological functions. To this end, we developed MetQy, an open&#x02013;source <bold>R</bold> package designed for query&#x02013;based analysis of functional units in [meta]genomes and/or sets of genes using the The Kyoto Encyclopedia of Genes and Genomes (KEGG). Furthermore, MetQy contains visualization and analysis tools and facilitates KEGG&#x02019;s flat file manipulation. Thus, MetQy enables better understanding of metabolic capabilities of known genomes or user&#x02013;specified [meta]genomes by using the available information and can help guide studies in microbial ecology, metabolic engineering and synthetic biology.</p></sec><sec id="s2"><title>Availability and implementation</title><p>The MetQy <bold>R</bold> package is freely available and can be downloaded from our group&#x02019;s website (<ext-link ext-link-type="uri" xlink:href="http://osslab.lifesci.warwick.ac.uk">http://osslab.lifesci.warwick.ac.uk</ext-link>) or GitHub (<ext-link ext-link-type="uri" xlink:href="https://github.com/OSS-Lab/MetQy">https://github.com/OSS-Lab/MetQy</ext-link>).</p></sec></abstract><funding-group><award-group award-type="grant"><funding-source><named-content content-type="funder-name">The University of Warwick</named-content></funding-source></award-group><award-group award-type="grant"><funding-source><named-content content-type="funder-name">Biotechnological and Biological</named-content></funding-source></award-group><award-group award-type="grant"><funding-source><named-content content-type="funder-name">Engineering and Physical Sciences Research Councils</named-content></funding-source></award-group><award-group award-type="grant"><funding-source><named-content content-type="funder-name">EPSRC</named-content><named-content content-type="funder-identifier">10.13039/501100000266</named-content></funding-source><award-id>EP/L016494/1</award-id></award-group><award-group award-type="grant"><funding-source><named-content content-type="funder-name">Centre for Doctoral Training in Synthetic Biology</named-content></funding-source></award-group><award-group award-type="grant"><funding-source><named-content content-type="funder-name">SynBioCDT</named-content></funding-source><award-id>BB/K003240/2</award-id><award-id>BB/M017982/1</award-id></award-group><award-group award-type="grant"><funding-source><named-content content-type="funder-name">Warwick Integrative Synthetic Biology Centre</named-content></funding-source></award-group><award-group award-type="grant"><funding-source><named-content content-type="funder-name">WISB</named-content></funding-source></award-group></funding-group><counts><page-count count="4"/></counts></article-meta></front><body><sec><title>1 Introduction</title><p>The advent of molecular biology has made the characterization and analysis of genomic sequences a key part of all areas of life sciences research. In the case of single&#x02013;cell organisms, identification of specific functions within the genome directly influences our ability to assess their fitness in a given environment and their potential roles in biotechnology. Particularly, we should theoretically be able to translate genomic data into physiological predictions. Genomic databases are a pre-requisite for making such predictions, but their full use also requires computational tools that allow easy access and systematic analyses of the data.</p><p>The Kyoto Encyclopedia of Genes and Genomes (KEGG) is one of the oldest and most comprehensive collections of databases. Its primary aim has been the digitising of current knowledge on genes and molecules and their interactions (<xref rid="bty447-B1" ref-type="bibr">Kanehisa, 1997</xref>; <xref rid="bty447-B2" ref-type="bibr">Kanehisa and Goto, 2000</xref>) and it includes 16 databases and 3 sequence data collections (<xref rid="bty447-B4" ref-type="bibr">Kanehisa <italic>et al.</italic>, 2017</xref>). While these data can be analysed via different tools on the KEGG website, the existing web interface allows only specific retrieval of information and analyses. Furthermore, although the whole of the data can be downloaded via (paid) FTP access, the systematic analysis of these data in a user&#x02013;defined manner remains difficult and developing computational analysis tools for this purpose remains a niche expertise that is still not available in many research labs.</p><p>There are several specific tools that make use of certain aspects of the KEGG data more available to a wider user-base. Examples include PICRUSt (<xref rid="bty447-B5" ref-type="bibr">Langille <italic>et al.</italic>, 2013</xref>), BlastKOALA and GhostKOALA (<xref rid="bty447-B3" ref-type="bibr">Kanehisa <italic>et al.</italic>, 2016</xref>), all of which focus on metagenomics data analysis. However, to our knowledge there are no tools that facilitate the analyses and information retrieval from KEGG with regards to studying the relationship between genomic data and physiological function. Therefore, we have developed MetQy, an open&#x02013;source, easy&#x02013;to&#x02013;use and readily expandable <bold>R</bold> package for such analyses. MetQy uses the <bold>R</bold>&#x02013;platform because it is commonly used among biologists, it is featured in undergraduate education, and it contains extensive statistical packages which are useful in subsequent data analyses.</p><p>MetQy was developed to readily interface between the KEGG orthology, module and genome databases and perform automated cross&#x02013;analyses on them. It consists of a set of functions that allow querying genes, enzymes and functional modules across genomes and vice versa, thereby enabling better understanding of genotype&#x02013;phenotype mapping in single&#x02013;celled organisms and providing guidance for cellular engineering in synthetic biology. MetQy can be used &#x02018;as-is&#x02019;, since the relevant components of the KEGG databases (downloaded on 20/02/2018) are included within the package. The included KEGG data constitutes only part of the entire encyclopedia and is &#x02018;hidden&#x02019; in the package so that direct access to the data is not possible, complying with KEGG licence. Users with a paid KEGG subscription can use MetQy parsing functions to update the data that the package uses. The MetQy package and GitHub wiki contain extensive documentation and usage examples for each function.</p></sec><sec><title>2 Software features</title><p>MetQy contains three main groups of software functions: data query, parsing and analysis and visualization. These are briefly described below. For more detailed information and usage examples, please see the package documentation and GitHub wiki.</p><sec><title>2.1 Metabolic query functions</title><p>The <italic>query</italic> family of functions allows the user to query the KEGG data structures in a systematic (and automated) way. Users without FTP access can analyse the KEGG genome, module and ortholog databases indirectly by using this family of functions on built&#x02013;in formatted KEGG data which is not directly accessible by the user. Additionally, these functions feature optional arguments that allow users to provide up&#x02013;to&#x02013;date data (by using the <italic>parsing</italic> functions on KEGG FTP data) or their own data structures, such as custom&#x02013;made KEGG&#x02013;style modules. Additional query functions can be readily developed by the users, allowing expansion of MetQy. MetQy features five query functions for key functional analyses.</p><p>
<italic>query_genomes_to_modules</italic> calculates the module completeness fraction (<italic>mcf</italic>) given a set of genes or genomes. It returns a matrix showing the <italic>mcf</italic> for each module. The <italic>mcf</italic> calculation is based on block&#x02013;based, logical KEGG module definition (see GitHub wiki). The function input is the modules to be queried (default is all KEGG modules) and the set of genes to be considered. The gene set can be provided either as a set of KEGG ortholog or Enzyme Commission (EC) numbers, or as genome identifier(s), with the latter case resulting in automatic retrieval of all genes for the genome(s).</p><p>While the implementation of <italic>query_genomes_to_modules</italic> function is similar to KEGG mapper [a web interface tool that performs a similar task (<ext-link ext-link-type="uri" xlink:href="http://www.genome.jp/kegg/mapper.html">http://www.genome.jp/kegg/mapper.html</ext-link>; <xref rid="bty447-B4" ref-type="bibr">Kanehisa <italic>et al.</italic>, 2017</xref>)], there are several key features that are different. The KEGG Mapper&#x02019;s web interface does not allow for module&#x02013;specific evaluation nor for automation of the analysis. Our implementation allows for specific KEGG modules to be evaluated, given their ID, name and/or class. It also provides the capacity to determine the <italic>mcf</italic> of a module, rather than only identifying modules that are complete or that have one block missing. Finally, as EC numbers are widely used in systems biology, we used the KEGG orthology to translate the K number&#x02013;based module definitions to EC number&#x02013;based module definitions. This allows for module evaluation based on both K and EC numbers.</p><p>
<italic>query_module_to_genomes</italic> determines the KEGG genome(s) that have user&#x02013;specified module(s) that are complete above a <italic>mcf</italic> threshold (defaults to 1, i.e. complete). <italic>query_gene_to_modules</italic> determines those KEGG modules that feature specific user&#x02013;specified gene(s). <italic>query_genes_to_genomes</italic> determines which KEGG genomes contain user-specified gene(s). <italic>query_missingGenes_from_module</italic> determines the missing gene(s) (K or EC numbers) that would be required to have a complete KEGG module within a genome (or gene set).</p></sec><sec><title>2.2 Parsing KEGG databases</title><p>MetQy comes with built&#x02013;in data components of KEGG. It is, however, possible for users with FTP KEGG access to update these data components to their latest version. The MetQy <italic>parsing</italic> functions allow the production of the updated data, by formatting the relevant KEGG data files into <bold>R</bold> structures. They can also be used as stand&#x02013;alone functions to introduce KEGG data into the <bold>R</bold> environment. All <italic>query</italic> functions have been designed to take in these updated data.</p><p>MetQy features two generic parsing functions that deal with the two main KEGG file types: files without extension (<italic>parseKEGG_file</italic>) and &#x02018;.list&#x02019; files (<italic>parseKEGG_file.list</italic>). <italic>parseKEGG_file.list</italic> formats KEGG files containing a mapping between two KEGG database entries into binary matrices. For example, the mapping between K numbers and EC numbers is contained in the &#x02018;ko_enzyme.list&#x02019; file and shows which K numbers correspond to which EC numbers. <italic>parseKEGG_file</italic> formats a KEGG database file into an <bold>R</bold> data frame by automatically detecting fields of the KEGG data and transforms these into variables. MetQy also contains file&#x02013;specific functions that use these generic functions.</p></sec><sec><title>2.3 Analysis and visualization</title><p>The analysis and visualization family of functions are designed to facilitate the analysis primarily of the output of the <italic>query_genomes_to_modules</italic> function, which generates a matrix of <italic>mcf</italic> values for the genomes and modules analysed. There are three <italic>analysis</italic> and five <italic>plot</italic> (visualization) functions.</p><p>
<italic>analysis_pca_mean_distance_calculation</italic> is designed to process the output of a principal component analysis (PCA) performed on the <italic>mcf</italic> matrix (this can be done for example by applying the <bold>R</bold> function <italic>stats:: prcomp</italic> function). It uses the resulting numeric matrix containing the principal components to calculate the mean Euclidean distance as a measure of spread or variation (of the data). This assumes that every row represents a multi-dimensional point (a genome in this case), with coordinates given in the corresponding columns. The mean Euclidean distance of <italic>p</italic> points is calculated by adding the computed pairwise Euclidean distance in <italic>n</italic> dimensions between all the points divided by the total number of distances.</p><p>
<italic>analysis_pca_mean_distance_grouping</italic> takes in the numeric matrix resulting from performing a PCA on the <italic>mcf</italic> matrix and a factor, such as genus, to group the rows (genomes) of the matrix and uses the previous function (<italic>analysis_pca_mean_distance_calculation</italic>) to calculate the mean Euclidean distance for each group.</p><p>
<italic>analysis_genomes_module_output</italic> takes in the <italic>mcf</italic> matrix (genomes and modules as rows and columns, respectively) and produces a series of analyses and generates a report automatically by default. These analyses comprise of: (i) reporting the number of genomes (data sets) and modules analysed, producing a (ii) heatmap of the <italic>mcf</italic> of all genomes and modules analysed, (iii) a boxplot of the <italic>mcf</italic> across all genomes for each module, (iv) a scatter plot of the SD of the <italic>mcf</italic> across all genomes for each module and (v) identifying any modules that have a constant (zero-variance) <italic>mcf</italic> across all genomes and producing a table. In addition, the function performs, for every factor group specified, the following analyses: (vi) group the genomes according to that factor and create a heatmap of the mean <italic>mcf</italic> for each module across the genomes that make up each group, (vii) carry out a PCA analysis on all the <italic>mcf</italic> data, showing the cumulative variance and generating a PC plot, (viii) visualize the PC plot with an overlay of the factor grouping and, finally, (ix) measure the within-group (per factor) variance, using the mean Euclidean distance as a proxy for spread.</p><p>
<italic>plot_heatmap</italic> can be used to visualize the <italic>mcf</italic> calculated by the <italic>query_genomes_to_modules</italic> function as a colour mapped matrix (with genomes against modules). <italic>plot_scatter_byFactors</italic> allows the automatic grouping of data as determined by a factor and produces a scatter plot with groups overlaid by colour. <italic>plot_scatter</italic> is useful to visualize numerical data associated to data groups generated by a factor. This category&#x02013;based visualization can be used to plot the SD for each module&#x02019;s <italic>mcf</italic> or the mean Euclidean distance (see the analysis description above for more details). <italic>plot_variance_boxplot</italic> takes the <italic>mcf</italic> matrix and produces a boxplot for each module. <italic>plot_sunburst</italic> makes a hierarchical arrangement of categorical data, such as KEGG module classes, and represents it in a dart&#x02013;style, where the inner ring contains the most general (highest level) information which can be divided into sub-categories (rings going outwards). The final ring represents the most specific level of information and can be coloured by either the counts of the data or an additional set of values provided by the user (refer to the GitHub wiki for more information).</p></sec></sec><sec><title>3 Uses and applications</title><p>MetQy facilitates the general usability of the KEGG database and allows users to gain qualitative information about the functional capacity of a given organism or gene set. Anticipated uses of the tool include synthetic biology, where it can facilitate the design and guiding of metabolic engineering studies by identifying missing genes needed for an organism to have a complete KEGG module, and identifying KEGG genomes with desired metabolic capabilities. For systems biology applications, it allows identification of key physiological features of organisms and development of stoichiometric metabolic models by analysing module completeness in specific genomes and identifying transporter modules and carbon utilization routes in genomes. Finally, in microbial ecology, MetQy can allow species&#x02013;function mappings in metagenomes and insights into functional capabilities of ecological groups by analysing the metabolic capacity of novel genomes from metagenomic studies. Organisms can be put into different functional groups, and the functional profiles of different environments compared.</p><sec><title>3.1 Example of usage</title><p>To demonstrate some possible uses of MetQy functions, we have included a coded example on the MetQy GitHub wiki pages. This example demonstrates how MetQy can be used to retrieve KEGG genome data and how the metabolic functions of the extracted/matched organisms can be queried/identified in terms of KEGG modules. In the presented example, we evaluate the module completeness fraction (<italic>mcf</italic>) in methanogen genomes, focusing on sample KEGG modules loosely relating to the anaerobic digestion process (note that any user specified modules, or all KEGG can be used in a real analysis). We then visualize the results of this analysis as a heatmap using MetQy function <italic>plot_heatmap</italic> (<xref ref-type="fig" rid="bty447-F1">Fig.&#x000a0;1A</xref>). In this example case, this analysis highlighted a specific module that is expected to be essential for methanogenesis (M00567: Methanogenesis, <inline-formula id="IE1"><mml:math id="IM1"><mml:mrow><mml:msub><mml:mrow><mml:mtext>CO</mml:mtext></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mo>&#x0003e;</mml:mo></mml:mrow></mml:math></inline-formula> methane) and that was almost fully complete in most genomes as expected (<inline-formula id="IE2"><mml:math id="IM2"><mml:mrow><mml:mi>m</mml:mi><mml:mi>c</mml:mi><mml:mi>f</mml:mi><mml:mo>&#x0003e;</mml:mo><mml:mo>=</mml:mo><mml:mn>0.75</mml:mn></mml:mrow></mml:math></inline-formula> in 96% of genomes), but incomplete in some genomes. This prompted us to analyse the genomes that had a lower <italic>mcf</italic> for this key module We thus identified the genome T04272 (Methanogenic archaeon ISO4-H5) as an interesting methanogen to focus on and used another MetQy function <italic>plot_sunburst</italic> to analyse all of its modules&#x02019; <italic>mcf</italic> through a sunburst plot (<xref ref-type="fig" rid="bty447-F1">Fig.&#x000a0;1B</xref>). Furthermore, we identified the genes that were missing for that module to be complete (for that organism).
</p><fig id="bty447-F1" orientation="portrait" position="float"><label>Fig. 1.</label><caption><p>Visualization of some of the results obtained from an example analysis (Section 3.1). <bold>(A)</bold> Heatmap representation of module fraction completeness (<italic>mcf</italic>) across selected genomes (<italic>y</italic>&#x02013;axis) and modules (<italic>x</italic>&#x02013;axis). The <italic>mcf</italic> value is colour&#x02013;coded as per the provided mapping scheme shown. <bold>(B)</bold> A sunburst diagram showing the mcf of different modules and their functional classes as obtained from the analysis of a specific genome (genome ID: T04272). The <italic>mcf</italic> value is colour&#x02013;coded as per the provided mapping scheme shown. The data for both plots was obtained using MetQy function &#x02018;query_genomes_to_modules&#x02019; </p></caption><graphic xlink:href="bty447f1"/></fig><p>While this example highlights how specific MetQy functions can be utilized on their own to develop a specific analysis pipeline, it is also possible to use MetQy functions to perform an automated analysis on a set of genomes grouped by genus (or another grouping factor provided by the user, e.g. species or sample origin) and generate a comprehensive report in an automated fashion (see description for <italic>analysis_genomes_module_output</italic> function, the PDF report file in the GitHub repository and the worked&#x02013;out example in the GitHub wiki).</p></sec></sec></body><back><ack><title>Acknowledgement</title><p>The authors acknowledge Sean Aller for helpful comments and David Selby for sharing his expertise in developing <bold>R</bold> packages.</p><sec><title>Funding</title><p>This work is funded by The University of Warwick and by the Biotechnological and Biological and Engineering and Physical Sciences Research Councils (BB&#x02013; and EPSRC), with grant IDs: EP/L016494/1 (to the Centre for Doctoral Training in Synthetic Biology, SynBioCDT), BB/K003240/2 (to OSS), BB/M017982/1 (to the Warwick Integrative Synthetic Biology Centre, WISB).</p><p>
<italic>Conflict of Interest</italic>: none declared.</p></sec></ack><ref-list><title>References</title><ref id="bty447-B1"><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Kanehisa</surname><given-names>M.</given-names></name></person-group> (<year>1997</year>) 
<article-title>A database for post-genome analysis</article-title>. <source>Trends Genet</source>., <volume>13</volume>, <fpage>375</fpage>&#x02013;<lpage>376</lpage>.<pub-id pub-id-type="pmid">9287494</pub-id></mixed-citation></ref><ref id="bty447-B2"><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Kanehisa</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Goto</surname><given-names>S.</given-names></name></person-group> (<year>2000</year>) 
<article-title>KEGG: kyoto encyclopedia of genes and genomes</article-title>. <source>Nucleic Acids Res</source>., <volume>28</volume>, <fpage>27</fpage>&#x02013;<lpage>30</lpage>.<pub-id pub-id-type="pmid">10592173</pub-id></mixed-citation></ref><ref id="bty447-B3"><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Kanehisa</surname><given-names>M.</given-names></name></person-group>
<etal>et al</etal> (<year>2016</year>) 
<article-title>BlastKOALA and GhostKOALA: KEGG tools for functional characterization of genome and metagenome sequences</article-title>. <source>J. Mol. Biol</source>., <volume>428</volume>, <fpage>726</fpage>&#x02013;<lpage>731</lpage>.<pub-id pub-id-type="pmid">26585406</pub-id></mixed-citation></ref><ref id="bty447-B4"><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Kanehisa</surname><given-names>M.</given-names></name></person-group>
<etal>et al</etal> (<year>2017</year>) 
<article-title>KEGG: new perspectives on genomes, pathways, diseases and drugs</article-title>. <source>Nucleic Acids Res</source>., <volume>45</volume>, <fpage>D353</fpage>&#x02013;<lpage>D361</lpage>.<pub-id pub-id-type="pmid">27899662</pub-id></mixed-citation></ref><ref id="bty447-B5"><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Langille</surname><given-names>M.G.I.</given-names></name></person-group>
<etal>et al</etal> (<year>2013</year>) 
<article-title>Predictive functional profiling of microbial communities using 16S rRNA marker gene sequences</article-title>. <source>Nat. Biotechnol</source>., <volume>31</volume>, <fpage>814</fpage>&#x02013;<lpage>821</lpage>.<pub-id pub-id-type="pmid">23975157</pub-id></mixed-citation></ref></ref-list></back></article>