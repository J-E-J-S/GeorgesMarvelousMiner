<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.1 20151215//EN" "JATS-archivearticle1.dtd"> 
<article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="research-article"><?properties open_access?><?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?><?DTDIdentifier.IdentifierType public?><?SourceDTD.DTDName JATS-journalpublishing1.dtd?><?SourceDTD.Version 1.1?><?ConverterInfo.XSLTName jp2nlmx2.xsl?><?ConverterInfo.Version 1?><front><journal-meta><journal-id journal-id-type="nlm-ta">Gigascience</journal-id><journal-id journal-id-type="iso-abbrev">Gigascience</journal-id><journal-id journal-id-type="publisher-id">gigascience</journal-id><journal-title-group><journal-title>GigaScience</journal-title></journal-title-group><issn pub-type="epub">2047-217X</issn><publisher><publisher-name>Oxford University Press</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmcid">6007556</article-id><article-id pub-id-type="doi">10.1093/gigascience/giy048</article-id><article-id pub-id-type="publisher-id">giy048</article-id><article-categories><subj-group subj-group-type="heading"><subject>Technical Note</subject></subj-group></article-categories><title-group><article-title>Fast-SG: an alignment-free algorithm for hybrid assembly</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Di&#x000a0;Genova</surname><given-names>Alex</given-names></name><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="aff" rid="aff2">2</xref><xref ref-type="aff" rid="aff3">3</xref><xref ref-type="aff" rid="aff4">4</xref><xref ref-type="aff" rid="aff5">5</xref></contrib><contrib contrib-type="author"><name><surname>Ruz</surname><given-names>Gonzalo A</given-names></name><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="aff" rid="aff6">6</xref></contrib><contrib contrib-type="author"><name><surname>Sagot</surname><given-names>Marie-France</given-names></name><!--<email>marie-france.sagot@inria.fr</email>--><xref ref-type="aff" rid="aff3">3</xref><xref ref-type="aff" rid="aff4">4</xref><xref ref-type="corresp" rid="cor1"/></contrib><contrib contrib-type="author"><name><surname>Maass</surname><given-names>Alejandro</given-names></name><!--<email>amaass@dim.uchile.cl</email>--><xref ref-type="aff" rid="aff2">2</xref><xref ref-type="aff" rid="aff5">5</xref><xref ref-type="aff" rid="aff7">7</xref><xref ref-type="corresp" rid="cor2"/></contrib></contrib-group><aff id="aff1"><label>1</label>Facultad de Ingenier&#x000ed;a y Ciencias, Universidad Adolfo Ib&#x000e1;&#x000f1;ez, Santiago, Chile</aff><aff id="aff2"><label>2</label>Mathomics Bioinformatics Laboratory, Center for Mathematical Modeling, University of Chile, Av. Beauchef 851., 7th floor, Santiago, Chile</aff><aff id="aff3"><label>3</label>Inria Grenoble Rho&#x0006e;&#x00302;e-Alpes, 655, Avenue de l&#x02019;Europe, 38334 Montbonnot, France</aff><aff id="aff4"><label>4</label>CNRS, UMR5558, Universit&#x000e9; Claude Bernard Lyon 1, 43, Boulevard du 11 Novembre 1918, 69622 Villeurbanne, France</aff><aff id="aff5"><label>5</label>Fondap Center for Genome Regulation, Av. Blanco Encalada 2085, 3rd floor, Santiago, Chile</aff><aff id="aff6"><label>6</label>Center of Applied Ecology and Sustainability (CAPES), Santiago, Chile</aff><aff id="aff7"><label>7</label>Department of Mathematical Engineering, University of Chile, Av. Beauchef 851., 5th floor, Santiago, Chile</aff><author-notes><corresp id="cor1"><bold>Correspondence address</bold>. Marie-France Sagot. INRIA Grenoble Rho&#x0006e;&#x00302;e-Alpes, 655, Avenue de l&#x02019;Europe, 38334 Montbonnot, France and Universit&#x000e9; Claude Bernard Lyon 1, CNRS, UMR 5558, F-69622 Villeurbanne, France. Phone: +33 (0) 4 72 44 82 38 , E-mail: <email>marie-france.sagot@inria.fr</email></corresp><corresp id="cor2"><bold>Correspondence address</bold>. Alejandro Maass. Department of Mathematical Engineering, Center for Mathematical Modeling and Fondap Center for Genome Regulation, University of Chile, Av. Beauchef 851., Santiago, Chile. Phone: +56 2 29 78 44 56, E-mail: <email>amaass@dim.uchile.cl</email></corresp></author-notes><pub-date pub-type="epub" iso-8601-date="2018-05-05"><day>05</day><month>5</month><year>2018</year></pub-date><pub-date pub-type="collection"><month>5</month><year>2018</year></pub-date><pub-date pub-type="pmc-release"><day>05</day><month>5</month><year>2018</year></pub-date><!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. --><volume>7</volume><issue>5</issue><elocation-id>giy048</elocation-id><history><date date-type="received"><day>08</day><month>12</month><year>2017</year></date><date date-type="accepted"><day>19</day><month>4</month><year>2018</year></date><date date-type="rev-recd"><day>01</day><month>3</month><year>2018</year></date></history><permissions><copyright-statement>&#x000a9; The Author(s) 2018. Published by Oxford University Press.</copyright-statement><copyright-year>2018</copyright-year><license license-type="cc-by" xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p></license></permissions><self-uri xlink:href="giy048.pdf"/><abstract><title>Abstract</title><sec id="abs1"><title>Background</title><p>Long-read sequencing technologies are the ultimate solution for genome repeats, allowing near reference-level reconstructions of large genomes. However, long-read <italic>de novo</italic> assembly pipelines are computationally intense and require a considerable amount of coverage, thereby hindering their broad application to the assembly of large genomes. Alternatively, hybrid assembly methods that combine short- and long-read sequencing technologies can reduce the time and cost required to produce <italic>de novo</italic> assemblies of large genomes.</p></sec><sec id="abs2"><title>Results</title><p>Here, we propose a new method, called <sc>Fast</sc>-SG, that uses a new ultrafast alignment-free algorithm specifically designed for constructing a scaffolding graph using light-weight data structures. <sc>Fast</sc>-SG can construct the graph from either short or long reads. This allows the reuse of efficient algorithms designed for short-read data and permits the definition of novel modular hybrid assembly pipelines. Using comprehensive standard datasets and benchmarks, we show how <sc>Fast</sc>-SG outperforms the state-of-the-art short-read aligners when building the scaffoldinggraph and can be used to extract linking information from either raw or error-corrected long reads. We also show how a hybrid assembly approach using <sc>Fast</sc>-SG with shallow long-read coverage (5X) and moderate computational resources can produce long-range and accurate reconstructions of the genomes of <italic>Arabidopsis thaliana</italic> (Ler-0) and human (NA12878).</p></sec><sec id="abs3"><title>Conclusions</title><p>
<sc>Fast</sc>-SG opens a door to achieve accurate hybrid long-range reconstructions of large genomes with low effort, high portability, and low cost.</p></sec></abstract><kwd-group kwd-group-type="keywords"><kwd>hybrid assembly</kwd><kwd>genome scaffolding</kwd><kwd>alignment-free</kwd></kwd-group><funding-group><award-group award-type="grant"><funding-source><named-content content-type="funder-name">Conicyt-PIA Concurso AFB</named-content></funding-source><award-id>170001</award-id></award-group><award-group award-type="grant"><funding-source><named-content content-type="funder-name">Fondap</named-content></funding-source><award-id>150900007</award-id></award-group><award-group award-type="grant"><funding-source><named-content content-type="funder-name">CONICYT PFCHA/BECA DOCTORADO NACIONAL</named-content></funding-source><award-id>2014/FOLIO 21140124</award-id></award-group></funding-group><counts><page-count count="15"/></counts></article-meta></front><body><sec id="sec1"><title>Findings</title><sec id="sec1-1"><title>Background</title><p>The major challenge of whole genome <italic>de novo</italic> assembly is to solve repeats&#x000a0;[<xref rid="bib1" ref-type="bibr">1</xref>, <xref rid="bib2" ref-type="bibr">2</xref>]. These correspond to nearly identical genomic sequences that occur at multiple locations in a genome. To address this challenge, two major types of approaches have been proposed, one using paired short reads&#x000a0;[<xref rid="bib3" ref-type="bibr">3</xref>] and the other long reads&#x000a0;[<xref rid="bib4" ref-type="bibr">4</xref>].</p><p>In the second case, the aim is to entirely capture the repeats within the long reads. The nonrepeated suffix and prefix sequences of such long reads are used to compute unique overlaps, which then make it possible to unambiguously expand the original reads into larger ones, called contigs, in a process that may sometimes (but not always) directly lead to inferring the entire genomic sequence.</p><p>The first type of approach needs to be associated to an operation called genome scaffolding. The short reads are still first assembled into contigs as above, either by computing overlaps&#x000a0;[<xref rid="bib5" ref-type="bibr">5</xref>] or by using de Bruijn graphs&#x000a0;[<xref rid="bib6" ref-type="bibr">6</xref>]. The contigs obtained in this case will, however, not span the whole genome. Indeed, most often they will be much shorter. They then need to be joined (i.e., linked together) in a second step. The linking information is in general provided by paired-end or mate-pair sequencing. Commonly, genomic fragments larger than 1 kb from which both ends are sequenced are denoted as mate-pair libraries, otherwise they are referred to in the literature as paired-end libraries. Genome scaffolding that uses paired short reads introduces gaps (i.e., unknown sequences) between the contigs, thereby once again not leading to the entire genomic sequence but to a set of so-called scaffold sequences, or scaffolds for short. A scaffold thus represents a set of ordered and oriented contigs.</p><p>The genome scaffolding problem was first formulated by Huson&#x000a0;et&#x000a0;al.&#x000a0;[<xref rid="bib7" ref-type="bibr">7</xref>]. The method proposed by the authors started by building what is called a scaffolding graph where the nodes represent the contigs and the edges encode the number of mate-pairs (weight), the orientation, and the distance between two different contigs. A greedy algorithm is then used to heuristically obtain optimal paths that will correspond to the scaffold sequences.</p><p>Most of the scaffolding methods that have been developed since Huson et al.'s formulation use the same type of graph, built with ultrafast short-read aligners&#x000a0;[<xref rid="bib8" ref-type="bibr">8-10</xref>] as a foundation for the scaffolding&#x000a0;[<xref rid="bib3" ref-type="bibr">3</xref>]. Algorithmic innovations in the area are mainly focused on how to select optimal paths (usually those of maximal weight) and thus obtain large and accurate scaffolds. Various approaches have been proposed based on dynamic programming&#x000a0;[<xref rid="bib11" ref-type="bibr">11</xref>], breadth-first search&#x000a0;[<xref rid="bib12" ref-type="bibr">12</xref>], maximum weight matching&#x000a0;[<xref rid="bib13" ref-type="bibr">13</xref>], or branch and bound&#x000a0;[<xref rid="bib14" ref-type="bibr">14</xref>], among others.</p><p>The new long-read sequencing technologies (Pacific Biosciences, Oxford Nanopore) suddenly changed the genome assembly scene by producing very long (&#x0003e;10 kb) reads that contain a high level of errors (on average 15% at the current time). These new technologies nevertheless extended the landscape of solvable repeat sequences&#x000a0;[<xref rid="bib15" ref-type="bibr">15</xref>]. Currently, <italic>de novo</italic> assemblers that use such long reads&#x000a0;[<xref rid="bib4" ref-type="bibr">4</xref>, <xref rid="bib16" ref-type="bibr">16</xref>] are thus able to finish bacterial genomes and to produce highly continuous reconstructions of human genomes&#x000a0;[<xref rid="bib4" ref-type="bibr">4</xref>, <xref rid="bib17" ref-type="bibr">17</xref>]. However, <italic>de novo</italic> assemblies of large genomes based on computing overlaps&#x000a0;[<xref rid="bib5" ref-type="bibr">5</xref>] are computationally intense&#x000a0;[<xref rid="bib4" ref-type="bibr">4</xref>] and require a considerable amount of coverage (50X) in order to error correct the inaccurate long-read sequences by self-correction methods, thereby hindering a broad application of these methods to the <italic>de novo</italic> assembly of large genomes&#x000a0;[<xref rid="bib17" ref-type="bibr">17</xref>].</p><p>
<italic>De novo</italic> assemblies using long reads have nevertheless proven to be scalable to chromosomes&#x000a0;[<xref rid="bib18" ref-type="bibr">18</xref>, <xref rid="bib19" ref-type="bibr">19</xref>] when associated with complementary long-range information from novel library preparation techniques&#x000a0;[<xref rid="bib20" ref-type="bibr">20</xref>, <xref rid="bib21" ref-type="bibr">21</xref>]. Such new experimental libraries are sequenced on Illumina machines, leading to conventional paired-end reads. DOVETAIL genomics&#x000a0;[<xref rid="bib20" ref-type="bibr">20</xref>] thus produces useful linking information in the range of 1&#x02013;200 kb, while 10X genomics&#x000a0;[<xref rid="bib22" ref-type="bibr">22</xref>], by using barcodes in a clever manner, produces linked-reads of up to 100 kb. Both technologies use long-range information within their assembly pipelines&#x000a0;[<xref rid="bib20" ref-type="bibr">20</xref>, <xref rid="bib22" ref-type="bibr">22</xref>] to build a scaffolding graph to which they apply their own algorithmic solutions to obtain the scaffold sequences. Both technologies were conceived with the aim of replacing the expensive and time-consuming experimental protocols required to produce long-range mate-pair libraries&#x000a0;[<xref rid="bib23" ref-type="bibr">23</xref>, <xref rid="bib24" ref-type="bibr">24</xref>] with short-read sequencing.</p><p>In principle, long-range information can be extracted directly from long reads in ranges restricted to the latter&#x02019;s actual sizes. Such information can then be used to devise a hybrid assembly method, where high-quality contigs from short-read assemblies are used as nodes of the scaffolding graph, edges are created using linking information from the long reads, and the scaffolds are generated by a short-read scaffolder. However, there is currently a lack of algorithms for building a scaffolding graph from the long reads. Such an algorithm would allow the reuse of efficient existing short-read algorithms to compose novel hybrid assembly pipelines.</p><p>Being able to build such a graph from either short or long reads in an ultrafast way with moderate computational resources while keeping the structure standard enough to be compatible with the existing efficient short-read scaffolders are the main challenges that we address here. The method that we propose, <sc>Fast</sc>-SG, uses an alignment-free algorithm&#x000a0;[<xref rid="bib25" ref-type="bibr">25</xref>] strategy as well as information from varied sequence sources (Illumina, Pacific Biosciences, and Oxford Nanopore) and was conceived to maximize scalability, speed, and modularity. The latter characteristic, in particular, allows one to define novel hybrid assembly pipelines, which permits the efficient assembly of large genomes.</p><p>
<sc>Fast</sc>-SG was extensively tested using a comprehensive set of standard datasets&#x000a0;[<xref rid="bib3" ref-type="bibr">3</xref>, <xref rid="bib26" ref-type="bibr">26</xref>] and benchmarks. We show that <sc>Fast</sc>-SG enables the hybrid assembly of large genomes and is especially effective with shallow long-read coverage data (5X&#x02013;10X). Our hybrid strategy consists of the construction of several synthetic mate-pair libraries that could have an insert size up to Bacterial Artificial Chromosome (BACs,180 kb) and can be combined with a short-read scaffolder to generate long-range scaffolds. Such strategy scales to human-size genomes with moderate computational resources. Moreover, we show that <sc>Fast</sc>-SG is faster (7X&#x02013;15X) than classic short-read aligners and is a powerful alternative for scaffolding with short mate-pair data.</p><p>We conclude by providing a procedure for an effective hybrid assembly with <sc>Fast</sc>-SG and we discuss how the strategy that we propose can be extended to use long reads to fill the gaps and error correct the scaffold sequences.</p></sec><sec id="sec1-2"><title>Algorithm</title><sec id="sec1-2-1"><title>
<sc>Fast</sc>-SG index</title><p>The <sc>Fast</sc>-SG index consists of all the unique <italic>k</italic>-mers present in the set of target contigs at a given <italic>k</italic>-mer length. For each of them, we store the position, the strand and the contig of origin, using lightweight data structures such as Minimal Perfect Hashing&#x000a0;[<xref rid="bib27" ref-type="bibr">27</xref>] and Probabilistic Dictionary&#x000a0;[<xref rid="bib28" ref-type="bibr">28</xref>]. In the first step, we define the unique <italic>k</italic>-mers as being those with a frequency equal to 1 from the total set of distinct <italic>k</italic>-mers present in the target contig/genome sequences. To identify unique <italic>k</italic>-mers, we use <sc>Kmc3</sc>&#x000a0;[<xref rid="bib29" ref-type="bibr">29</xref>], an ultrafast, parallel, and memory-frugal <italic>k</italic>-mer counter.</p><p>In the second step, each unique <italic>k</italic>-mer is hashed to the space of [2<sup>0</sup>, 2<sup>64</sup>] using a rolling hash function&#x000a0;[<xref rid="bib30" ref-type="bibr">30</xref>] and with hash values written on the fly to a binary file. Rolling hashing has the helpful property of computing hash values for consecutive <italic>k</italic>-mers in a sequence in <inline-formula><tex-math id="M1">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {O}(k+l)$\end{document}</tex-math></inline-formula> time, where <italic>k</italic> is the <italic>k</italic>-mer length, <italic>l</italic> is the sequence length, and <italic>k</italic>&#x000a0;&#x0003c;&#x000a0;<italic>l</italic>. We use an efficient library implementation of rolling hash algorithms called&#x000a0;<sc>Nthash</sc>&#x000a0;[<xref rid="bib31" ref-type="bibr">31</xref>], which implements a barrel shift function and a seed table of integers to compute hash values in both DNA strands faster.</p><p>In the third step, the static hash values stored in the binary file are used as input to create a minimal perfect hash function (henceforth denoted by<sc>Mphf</sc>). <sc>Mphf</sc> provides a collision-free and space-saving way to store and look up hash values in constant worst-case access time for static sets. We use the library implementation provided by&#x000a0;Limasset&#x000a0;et&#x000a0;al.&#x000a0;[<xref rid="bib27" ref-type="bibr">27</xref>], called&#x000a0;<sc>Bbhash</sc>, which is simple, parallel, fast, and memory frugal. Moreover, it can store 10<sup>10</sup> hash values using moderate computational resources (5Gb). The major feature of<sc>Mphf</sc> is its ability to map each key of <italic>S</italic> (in our case, the unique <italic>k</italic>-mer hashed values) to an integer in the interval [1, <italic>N</italic>] (injective function), with <italic>N</italic>&#x000a0;=&#x000a0;|<italic>S</italic>|, while avoiding the implicit storage of hash values by using cascade hash functions in conjunction with bit vectors. A significant parameter of <sc>Bbhash</sc> is the &#x003b3; (gamma) factor. We use a &#x003b3; factor equal to 4, which is an optimal value for fast query time, fast construction, and low memory usage&#x000a0;[<xref rid="bib27" ref-type="bibr">27</xref>]. When performing a query in the <sc>Mphf</sc> structure, it returns an index in the interval of [1, <italic>N</italic>], which has the same size as the static set <italic>S</italic>, allowing storage of related data for each <italic>s</italic> &#x02208; <italic>S</italic> using simple arrays. If we query a key not present in the initial static set <italic>S</italic>, <sc>Mphf</sc> could return a value in the interval [1, <italic>N</italic>] that is a false positive&#x000a0;[<xref rid="bib28" ref-type="bibr">28</xref>].</p><p>In the fourth step, to control the false-positive rate (<italic>p</italic>) of <sc>Mphf</sc>, we use a probabilistic set&#x000a0;[<xref rid="bib28" ref-type="bibr">28</xref>]. For each indexed element <italic>s</italic> &#x02208; <italic>S</italic> (unique <italic>k</italic>-mers), we store a fingerprint value using 16 bits in an array of size <italic>N</italic>&#x000a0;=&#x000a0;|<italic>S</italic>| at the corresponding <sc>Mphf</sc> index of <italic>s</italic>. The fingerprint is built by rehashing the hash value of <italic>s</italic> using the xor-shift hash function in the range [2<sup>0</sup>, 2<sup>16</sup>] and storing it in a bit-set array structure. We selected a fingerprint of size 16 bits because it has a low false-positive rate <italic>p</italic>&#x000a0;=&#x000a0;1/2<sup>16</sup>&#x000a0;=&#x000a0;0.0000152.</p><p>Finally, we added the associated contig_id, strand and coordinate values of each unique <italic>k</italic>-mer stored in the <sc>Mphf</sc> and the probabilistic dictionary (<sc>Mphf</sc>-PD) by performing a single pass through the set of contigs/genome sequences using the same <italic>k</italic>-mer size. For each <italic>k</italic>-mer hit, we store the values (contig_id, coordinate and strand) in the index returned by the <sc>Mphf-PD</sc> structure using three vectors with the same size as the set <italic>S</italic>. After storing all the associated values, we end our index construction and return a reference to the new object. This object is the <sc>Fast</sc>-SG index. The memory required per <italic>k</italic>-mer is composed of 6 bits for the <sc>Mphf</sc>, 16 bits for the probabilistic dictionary, 32 bits for the contig_id, 32 bits for the coordinate, and 1 bit for the strand, adding to a total memory of 87 bits.</p></sec><sec id="sec1-2-2"><title>
<sc>Fast</sc>-SG alignment-free method</title><p>The core of <sc>Fast</sc>-SG is an alignment-free algorithm specifically designed to construct the scaffolding graph from either short or long reads using lightweight data structures. Such graphs are built using as information the read pairs that map uniquely to different contigs. If the mappings are within an expected distance from one another given the respective orientation of the reads, an edge is added to the graph between the contigs&#x000a0;[<xref rid="bib3" ref-type="bibr">3</xref>]. The uniqueness property of the mapping is ensured by its high-quality score, which represents the confidence that the read indeed belongs to the reported genomic location&#x000a0;[<xref rid="bib9" ref-type="bibr">9</xref>, <xref rid="bib10" ref-type="bibr">10</xref>]. When a read belongs to two possible genomic locations, a score of 0 is commonly assigned.</p><p>Current short-read aligners identify the high-quality score mappings by indexing all the <italic>k</italic>-mers present in the set of contigs and using a seed-and-extend&#x000a0;[<xref rid="bib9" ref-type="bibr">9</xref>, <xref rid="bib10" ref-type="bibr">10</xref>] alignment approach. Instead, in <sc>Fast</sc>-SG, only the <italic>k</italic>-mers with a frequency equal to 1 are considered, and no alignment is performed. After building the <sc>Fast</sc>-SG index, the contig location for a pair of reads is determined following a number of steps as illustrated in Fig.&#x000a0;<xref ref-type="fig" rid="fig1">1A</xref>.</p><fig id="fig1" orientation="portrait" position="float"><label>Figure 1:</label><caption><p>
<bold>(A)</bold> Overview of the <sc>Fast</sc>-SG algorithm. <bold>(B)</bold> Number of unique <italic>k</italic>-mers (<italic>y</italic>-axis) in the human genome GRCh38.p10 as a function of the <italic>k</italic>-mer size (<italic>x</italic>-axis). <bold>(C)</bold> Memory required for indexing the unique <italic>k</italic>-mers of the human genome by <sc>Fast</sc>-SG and using an exact implementation. The blue dotted-line shows the memory required by <sc>Fast</sc>-SG as a function of the <italic>k</italic>-mer size. Green shows the memory required by an exact implementation that uses 2 bits per base. The amount of memory used by such implementation increases as a function of the <italic>k</italic>-mer size (<italic>x</italic>-axis). The memory of the index used in <sc>Fast</sc>-SG only increases with the number of <italic>k</italic>-mers to store.</p></caption><graphic xlink:href="giy048fig1"/></fig><p>The first step performs look-ups of the <italic>k</italic>-mers of the forward (resp. reverse) read sequence (on both strands by using a rolling hash function) in the <sc>Fast</sc>-SG index and fills a vector of hits of a predefined size. The size of the vector depends on the error rate of the sequencing technology. The default chosen in <sc>Fast</sc>-SG is of 10 for Illumina and 20 for the long-read technologies. In the second step, the forward (resp. reverse) vector of the <italic>k</italic>-mer hits is sorted by contig and, inside each contig, by coordinate. In the third step, a score is computed for the forward (resp. reverse) read that corresponds to the maximum number of hits falling inside a window of size equal to the length of the read. If the score of both reads in a pair reaches a predefined minimum, in the fourth step the genomic location of the pair is reported. Otherwise, a pair rescue is attempted (fifth step) by fixing the location of the best scored read and looking for a <italic>k</italic>-mer hit in the mate-pair that satisfies the expected distance and orientation (Fig.&#x000a0;<xref ref-type="fig" rid="fig1">1A</xref>).</p><p>A major parameter of the algorithm is the <italic>k</italic>-mer size as this governs the number of unique <italic>k</italic>-mers to be indexed in a given genome or, in our case, a set of contigs. In Fig. <xref ref-type="fig" rid="fig1">1B</xref>, we show how the number of unique <italic>k</italic>-mers increases as a function of the <italic>k</italic>-mer size in the human genome (GRCh38.p10). However, large <italic>k</italic>-mers need reads with low error rates for a successful match. To define an appropriate <italic>k</italic>-mer size, it is necessary to take into account both the error rate and the length of the query sequence. Almost all short-read aligners use as seeds short <italic>k</italic>-mers (15&#x02013;32 base pairs) because they have a low probability of containing errors and provide enough specificity&#x000a0;[<xref rid="bib9" ref-type="bibr">9</xref>, <xref rid="bib10" ref-type="bibr">10</xref>, <xref rid="bib32" ref-type="bibr">32</xref>]. Additionally, the available long-read algorithms such as <sc>Canu</sc>&#x000a0;[<xref rid="bib4" ref-type="bibr">4</xref>], <sc>Lordec</sc>&#x000a0;[<xref rid="bib33" ref-type="bibr">33</xref>], and <sc>MaSuRCA</sc>&#x000a0;[<xref rid="bib34" ref-type="bibr">34</xref>], among others, use short <italic>k</italic>-mers (15&#x02013;19 base pairs) at some stages to deal with the large error rates (15%) present in the current long-read technologies. In practice, <sc>Fast</sc>-SG supports a <italic>k</italic>-mer size of up to 256 base pairs. However, for the Illumina reads, values of <italic>k</italic> between 15 and 80 were tested, while for long reads, these ranged from 15 to 22 base pairs, which according to our benchmarks provide enough specificity, even for large genomes (Fig. <xref ref-type="fig" rid="fig1">1B</xref>). There are, for instance, 1.83 billion unique 19-mers (Fig. <xref ref-type="fig" rid="fig1">1B</xref>) in the human genome, which is a good approximation of the nonrepetitive regions for this genome&#x000a0;[<xref rid="bib2" ref-type="bibr">2</xref>].</p><p>Another issue of working with <italic>k</italic>-mers is the memory required for storing them for fast look-ups. This was addressed by implementing a novel probabilistic data structure (<sc>Fast</sc>-SG index) that only requires 87 bits per <italic>k</italic>-mer, while memory increases as a function of the number of unique <italic>k</italic>-mers to store (Fig.&#x000a0;<xref ref-type="fig" rid="fig1">1C</xref>). In order to index in memory all the unique <italic>k</italic>-mers of the human genome at a given <italic>k</italic>-mer size (&#x0003c;256 bp), less than 30 Gb of memory is required (Fig. <xref ref-type="fig" rid="fig1">1C</xref>).</p><p>Finally, the genomic location of the read pairs is reported using a single representative unique <italic>k</italic>-mer for each read in Sequence Alignment/Map (SAM) format&#x000a0;[<xref rid="bib35" ref-type="bibr">35</xref>], thus allowing for an easy integration with scaffolders that support this standard format. The steps of scoring and pair rescuing follow some of the ideas used in the <sc>Ssaha</sc>&#x000a0;[<xref rid="bib32" ref-type="bibr">32</xref>] and <sc>Bwa-mem</sc>&#x000a0;[<xref rid="bib36" ref-type="bibr">36</xref>] aligners.</p></sec><sec id="sec1-2-3"><title>Illumina mate-pair reads alignment</title><p>Illumina mate-pair reads are aligned using the algorithm described previously (<sc>Fast</sc>-SG alignment-free strategy). The forward read (QF) is iterated <italic>k</italic>-mer by <italic>k</italic>-mer where, for each <italic>k</italic>-mer, we ask if it is present in the <sc>Fast</sc>-SG index until 10 hits are stored in the vector <italic>vectorFUH</italic>. If the score of QF is larger than 3, we attempt to fill the vector <italic>vectorRUH</italic> (QR) of the reverse read. Then, if the score of each read is larger than 5, the positions are reported. Otherwise, we attempt pair rescue by fixing the position of the best-scored read and requiring a minimum score of 4 for the rescued read. These parameters of minimum and pair-rescue scores were set from empirically derived defaults. Such default short-read parameters can be modified by theuser.</p></sec><sec id="sec1-2-4"><title>Extraction of synthetic pairs from long reads</title><p>Synthetic pairs of reads (QF and QR) are extracted from the long-read sequences that have a default read length of 200 base pairs in forward-reverse orientation and separated by a distance <italic>D</italic> (insert size). Multiple values of <italic>D</italic> can be specified to comprehensively extract linking information from the long reads. After extracting a synthetic pair, each query sequence (QF and QR) is aligned using the algorithm described previously (<sc>Fast</sc>-SG alignment-free strategy). A minimum score of 15 and a minimum rescue score of 4 are used as default parameters. Then, as default, a moving window of 100 bp is adopted to extract another pair, until the complete long-read sequence is scanned. The default long-read parameters can be modified by theuser.</p></sec><sec id="sec1-2-5"><title>Estimation of the genomic library parameters</title><p>The genomic library parameters for insert size, standard deviation, and orientation are estimated using a subset of the mate-pair sequences in order to use them in the rescue step of <sc>Fast</sc>-SG. These subsets of mate-pair reads are aligned to the target contigs/genomes, and the read pairs located within contigs are used to estimate the library parameters. For Illumina, we use &#x02009;100 000 pairs, which are aligned to the target sequences using a minimum score of 8 and without pair rescue. Then, for each aligned pair within contigs, we save the pair orientation and distance. To infer the average insert size and standard deviation, we remove 10% outliers from both tails of the values stored by sorting the observed insert sizes by increasing order. The orientation is computed using a majority rule on the four possible orientations for a pair of reads (FR, RR, FF, RF). For long reads, we use 1 000 long-read sequences and we extract the specified insert sizes to infer the average insert size and standard deviation as for the Illumina reads. The orientation for the synthetic libraries is not estimated because all pairs are created in forward-reverse orientation.</p></sec><sec id="sec1-2-6"><title>Concurrent steps of <sc>Fast</sc>-SG
</title><p>The index construction and alignment steps in <sc>Fast</sc>-SG are concurrent. The <sc>Fast</sc>-SG index can use multiple threads to construct the <sc>Mphf</sc>&#x000a0;[<xref rid="bib27" ref-type="bibr">27</xref>] and store the associated <italic>k</italic>-mer information (contig_id, coordinate, strand). Chunks of 5 Mb of contig sequences are used to populate in parallel the <sc>Fast</sc>-SG index. The <sc>Fast</sc>-SG alignment step is concurrent by taking chunks of &#x02009;500 000 and 1 000 for the short and long reads, respectively. The concurrent steps are implemented using the <sc>Pthread</sc> library. The user specifies the number of central processing units (CPUs) to be used.</p></sec></sec><sec id="sec1-3"><title>Data description</title><sec id="sec1-3-1"><title>Datasets and software</title><p>We collected a comprehensive collection of standard datasets (Table&#x000a0;<xref ref-type="table" rid="tbl1">1</xref>) that are frequently used to benchmark the new sequencing technologies, scaffolding tools, or genome assembly pipelines.</p><table-wrap id="tbl1" orientation="portrait" position="float"><label>Table 1:</label><caption><p>Sequencing datasets and Illumina assemblies used to evaluate the performance of <sc>Fast</sc>-SG</p></caption><table frame="below" rules="groups"><thead><tr><th colspan="7" align="left" rowspan="1">Long-read datasets</th></tr><tr><th align="left" rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1">Number of reads</th><th align="left" rowspan="1" colspan="1">Average read length (bp)</th><th align="left" rowspan="1" colspan="1">Technology</th><th align="left" rowspan="1" colspan="1">Machine</th><th colspan="2" align="center" valign="middle" rowspan="1">Illumina assemblies</th></tr><tr><th align="left" rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1">Number of contigs</th><th align="left" rowspan="1" colspan="1">N50</th></tr></thead><tbody><tr><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">164&#x02009;472</td><td rowspan="1" colspan="1">9 009</td><td rowspan="1" colspan="1">ONT</td><td rowspan="1" colspan="1">R9.2</td><td rowspan="1" colspan="1">140</td><td rowspan="1" colspan="1">106&#x02009;241</td></tr><tr><td rowspan="1" colspan="1">&#x000a0;E.coli K12&#x000a0;</td><td rowspan="1" colspan="1">1&#x02009;192&#x02009;955</td><td rowspan="1" colspan="1">4 412</td><td rowspan="1" colspan="1">PacBIO</td><td rowspan="1" colspan="1">Sequel System</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/></tr><tr><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">22&#x02009;391&#x02009;084</td><td rowspan="1" colspan="1">298</td><td rowspan="1" colspan="1">Illumina</td><td rowspan="1" colspan="1">MiSeq</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/></tr><tr><td rowspan="1" colspan="1">
<italic>S.cerevisiae</italic> W303</td><td rowspan="1" colspan="1">594&#x02009;243</td><td rowspan="1" colspan="1">4 795</td><td rowspan="1" colspan="1">PacBio</td><td rowspan="1" colspan="1">PacBio</td><td rowspan="1" colspan="1">890</td><td rowspan="1" colspan="1">52&#x02009;324</td></tr><tr><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">561&#x02009;176</td><td rowspan="1" colspan="1">9 633</td><td rowspan="1" colspan="1">PacBio</td><td rowspan="1" colspan="1">Sequel System</td><td rowspan="1" colspan="1">2 384</td><td rowspan="1" colspan="1">320&#x02009;571</td></tr><tr><td rowspan="1" colspan="1">
<italic>A. thaliana</italic> (Ler-0)</td><td rowspan="1" colspan="1">46&#x02009;129&#x02009;480</td><td rowspan="1" colspan="1">300</td><td rowspan="1" colspan="1">Illumina</td><td rowspan="1" colspan="1">MiSeq</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/></tr><tr><td rowspan="1" colspan="1">Human (NA12878)</td><td rowspan="1" colspan="1">1&#x02009;415&#x02009;868</td><td rowspan="1" colspan="1">16 &#x02009;324</td><td rowspan="1" colspan="1">ONT</td><td rowspan="1" colspan="1">R9.4</td><td rowspan="1" colspan="1">37&#x02009;393</td><td rowspan="1" colspan="1">202&#x02009;174</td></tr><tr><td colspan="7" align="left" rowspan="1">
<bold>Short-read datasets</bold>
</td></tr><tr><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">
<bold>Number of reads</bold>
</td><td rowspan="1" colspan="1">
<bold>Read length</bold>
</td><td rowspan="1" colspan="1">
<bold>Insert size</bold>
</td><td rowspan="1" colspan="1">
<bold>SRA/ENA</bold>
</td><td colspan="2" align="center" rowspan="1">
<bold>Illumina assemblies</bold>
</td></tr><tr><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">
<bold>Number of contigs</bold>
</td><td rowspan="1" colspan="1">
<bold>N50</bold>
</td></tr><tr><td rowspan="1" colspan="1">
<italic>S.aureus</italic>
</td><td rowspan="1" colspan="1">3&#x02009;494&#x02009;070</td><td rowspan="1" colspan="1">37</td><td rowspan="1" colspan="1">3 500</td><td rowspan="1" colspan="1">SRR022865</td><td rowspan="1" colspan="1">170</td><td rowspan="1" colspan="1">47 &#x02009;016</td></tr><tr><td rowspan="1" colspan="1">
<italic>R.sphaeroides</italic>
</td><td rowspan="1" colspan="1">2&#x02009;050&#x02009;868</td><td rowspan="1" colspan="1">101</td><td rowspan="1" colspan="1">3 500</td><td rowspan="1" colspan="1">SRR034528</td><td rowspan="1" colspan="1">577</td><td rowspan="1" colspan="1">15&#x02009; 351</td></tr><tr><td rowspan="1" colspan="1">
<italic>P.falciparum</italic> (short)</td><td rowspan="1" colspan="1">52&#x02009;542&#x02009;302</td><td rowspan="1" colspan="1">76</td><td rowspan="1" colspan="1">550</td><td rowspan="1" colspan="1">ERR034295</td><td rowspan="1" colspan="1">9 318</td><td rowspan="1" colspan="1">2 995</td></tr><tr><td rowspan="1" colspan="1">
<italic>P.falciparum</italic> (long)</td><td rowspan="1" colspan="1">1&#x02009;562&#x02009;080</td><td rowspan="1" colspan="1">75</td><td rowspan="1" colspan="1">3 000</td><td rowspan="1" colspan="1">ERR163027</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/></tr><tr><td rowspan="1" colspan="1">
<italic>H.sapiens</italic> chr14</td><td rowspan="1" colspan="1">22&#x02009;669&#x02009;408</td><td rowspan="1" colspan="1">101</td><td rowspan="1" colspan="1">2 600</td><td rowspan="1" colspan="1">SRR067771</td><td rowspan="1" colspan="1">19&#x02009; 936</td><td rowspan="1" colspan="1">12 &#x02009;963</td></tr></tbody></table><table-wrap-foot><fn id="tblf1"><p>Further details are provided in the Data Description subsection and in the <xref ref-type="supplementary-material" rid="sup9">Supplementary Material 1</xref>.</p></fn></table-wrap-foot></table-wrap><p>Long-read datasets were used to investigate the capacity of <sc>Fast</sc>-SG to extract linking information from long reads and then the performance of short-read scaffolders fed with <sc>Fast</sc>-SG when compared to a dedicated long-read scaffolder. In the first case, the genome of <italic>Escherichia coli</italic>K12 was adopted as it has been sequenced by multiple long-read technologies and is commonly used to validate the long-read algorithms&#x000a0;[<xref rid="bib4" ref-type="bibr">4</xref>]. In the second case, both <italic>E. coli K12</italic> and <italic>Saccharomices cerevisiae</italic> W303 (Table&#x000a0;<xref ref-type="table" rid="tbl1">1</xref>) were used to prove that short-read scaffolders can use synthetic mate-pair libraries extracted from long reads.</p><p>To explore the amount of long-read coverage required by the hybrid solutions, we compared the performance of the latter to the results obtained by <sc>Canu</sc>&#x000a0;[<xref rid="bib4" ref-type="bibr">4</xref>], a state-of-the-art long-read assembler. In the first step, we used the genome of <italic>Arabidopsis thaliana</italic> and then in the second step we used a complete human genome (NA12878, Table <xref ref-type="table" rid="tbl1">1</xref>). NA12878 was selected because it was sequenced on a variety of platforms&#x000a0;[<xref rid="bib17" ref-type="bibr">17</xref>, <xref rid="bib20" ref-type="bibr">20</xref>, <xref rid="bib22" ref-type="bibr">22</xref>, <xref rid="bib37" ref-type="bibr">37</xref>] and assembled by a variety of algorithms&#x000a0;[<xref rid="bib4" ref-type="bibr">4</xref>, <xref rid="bib20" ref-type="bibr">20</xref>, <xref rid="bib22" ref-type="bibr">22</xref>, <xref rid="bib34" ref-type="bibr">34</xref>]. It thus allows comparison of the complete landscape of currently available long-range technologies and assembly pipelines.</p><p>To assess the performance of <sc>Fast</sc>-SG for constructing the scaffolding graph from short reads, we used all the short-read datasets and Illumina assemblies defined in Hunt et&#x000a0;al.&#x000a0;[<xref rid="bib3" ref-type="bibr">3</xref>]. These short-read datasets include the genomes of <italic>Staphylococcus aureus</italic>, <italic>Rhodobacter sphaeroides</italic>, and <italic>Plasmodium falciparum</italic> and the human chromosome 14 (Table&#x000a0;<xref ref-type="table" rid="tbl1">1</xref>) and are commonly used as the gold standard for validation of the scaffolding tools&#x000a0;[<xref rid="bib11" ref-type="bibr">11-14</xref>].</p><p>We coupled <sc>Fast</sc>-SG with two well-established scaffolders, <sc>Opera</sc>-LG&#x000a0;[<xref rid="bib11" ref-type="bibr">11</xref>] and <sc>Besst2</sc>&#x000a0;[<xref rid="bib12" ref-type="bibr">12</xref>], and two more recently published scaffolders, <sc>ScaffMatch</sc>&#x000a0;[<xref rid="bib13" ref-type="bibr">13</xref>] and <sc>Boss</sc>&#x000a0;[<xref rid="bib14" ref-type="bibr">14</xref>], to produce scaffold sequences from short- or long-read data. All the chosen scaffolders have different algorithms to select optimal paths from the scaffolding graph and use the <sc>Sam/Bam</sc> format as input. <sc>Besst2</sc> was excluded from the hybrid scaffolding experiments due to an exception produced while <sc>Besst2</sc> computes the average contig coverage from synthetic mate-pair libraries. All the software and reference genomes used are described in <xref ref-type="supplementary-material" rid="sup9">Supplementary Material 1</xref>.</p></sec><sec id="sec1-3-2"><title>Short- and long-read benchmarks</title><p>All scaffold sequences generated from alignments produced by <sc>Fast</sc>-SG, by the short-read aligners, and by <sc>Links</sc> were evaluated following the standard defined by Hunt et&#x000a0;al.&#x000a0;[<xref rid="bib3" ref-type="bibr">3</xref>]. For each dataset, the true contig layout is known and the scaffold sequences were compared against it in order to determine the following scaffolding errors (represented as a bit-wise flag): <list list-type="simple"><list-item><p><bold>0</bold> = Correct pair of contigs.</p></list-item><list-item><p><bold>1</bold> = Contigs originated from same reference sequence, but their orientation in the scaffolds is incorrect.</p></list-item><list-item><p><bold>2</bold> = Contigs originated from different reference sequences.</p></list-item><list-item><p><bold>4</bold> = Contigs originated from the same reference sequence but are the wrong distance apart.</p></list-item><list-item><p><bold>5</bold> = <bold>4+1</bold>, Contigs originated from same reference sequence, but their orientation and distance in the scaffold are incorrect.</p></list-item><list-item><p><bold>8</bold> = Contigs originated from the same reference sequence but are not in the correct order.</p></list-item><list-item><p><bold>12</bold> = <bold>8+4</bold> Contigs originated from the same reference sequence but are not in the correct order and distance.</p></list-item></list></p><p>From the previous values, we computed the F-score metric, which was first introduced by Mandric and Zelikovsky&#x000a0;[<xref rid="bib13" ref-type="bibr">13</xref>] and adopted in Luo et&#x000a0;al<italic>.&#x000a0;</italic>[<xref rid="bib14" ref-type="bibr">14</xref>], also with the purpose of improving and summarizing in a single metric the performance of a scaffolding tool. In brief, if we denote <italic>P</italic> as the number of potential joins that can be made, <italic>TP</italic> as the number of correct joins performed by a scaffolder (true positives), and <italic>FP</italic> as the number of wrong joins (false positives), we can calculate the following quality metrics:
<disp-formula><tex-math id="M2">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}
\begin{equation*}Recall=\frac{TP}{P}
\end{equation*}
\end{document}</tex-math></disp-formula><disp-formula><tex-math id="M3">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}
\begin{equation*}
Precision=\frac{TP}{(TP+FP)}
\end{equation*}
\end{document}</tex-math></disp-formula><disp-formula><tex-math id="M4">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}
\begin{equation*}
F-Score=2*\frac{(Recall*Precision)}{(Recall+Precision)}
\end{equation*}
\end{document}</tex-math></disp-formula></p><p>The structural quality of the hybrid and <italic>de novo</italic> assemblies was determined via direct comparison with the nearest reference genomes available using <sc>Nucmer</sc>&#x000a0;[<xref rid="bib38" ref-type="bibr">38</xref>] and reported using the <sc>Gage</sc> statistics&#x000a0;[<xref rid="bib26" ref-type="bibr">26</xref>], which from 1-to-1 alignments evaluates both the identity and the structural breakpoints (inversions, relocations, and translocations). All commands executed in each benchmark are specified in <xref ref-type="supplementary-material" rid="sup9">Supplementary Materials 2&#x02013;5</xref>.</p></sec></sec><sec id="sec1-4"><title>Results</title><sec id="sec1-4-1"><title>Extracting synthetic mate-pair libraries from long reads</title><p>Despite the high per-base error rate of the long-read technologies, the long-range information encoded in a long read has proven to be highly accurate. On the other hand, current experimental protocols to produce long-range mate-pair libraries using short-read technologies are time consuming and expensive&#x000a0;[<xref rid="bib23" ref-type="bibr">23</xref>, <xref rid="bib24" ref-type="bibr">24</xref>]. Moreover, library contamination occurs when the circularization step fails during construction, resulting in mate-pairs with short insert size and in the wrong orientation&#x000a0;[<xref rid="bib12" ref-type="bibr">12</xref>]. Extracting synthetic mate-pair libraries directly from long reads could improve the performance of the current short-read scaffolders and replace the need for sequencing multiple mate-pair libraries for scaffolding.</p><p>To demonstrate the utility of <sc>Fast</sc>-SG to create synthetic mate-pair libraries from long reads, we collected the latest chemistry data sequenced with the Oxford Nanopore (ONT; 1D reads sequenced on R9.2 flow cells) and Pacific Biosciences (PacBio; Sequel System) technologies for the genome of <italic>E. coli</italic> K12 (Table&#x000a0;<xref ref-type="table" rid="tbl1">1</xref>). The long reads were error-corrected using Illumina reads (<xref ref-type="supplementary-material" rid="sup9">Supplementary Material 2</xref>) with <sc>Lordec</sc>&#x000a0;[<xref rid="bib33" ref-type="bibr">33</xref>], a hybrid error-correction method.</p><p>
<sc>Fast</sc>-SG was used to generate synthetic mate-pair libraries in the range of 0.5&#x02013;8 kb from the corrected and uncorrected long reads using a <italic>k</italic>-mer size of 15, at which 98% of the <italic>k</italic>-mers are unique in the reference <italic>E. coli</italic> K12 genome. Synthetic mate-pair reads were aligned to an Illumina assembly of <italic>E. coli K12</italic> (Table&#x000a0;<xref ref-type="table" rid="tbl1">1</xref>). Near-perfect synthetic mate-pair libraries were obtained with a low percentage of outliers (&#x0003c;9.85%) for all insert sizes (Fig. <xref ref-type="fig" rid="fig2">2</xref>). Moreover, the hybrid error correction reduced the standard deviation and allowed the average insert size to get close to the specified size of each synthetic library. However, the hybrid error correction increased the number of outliers in both technologies (Fig. <xref ref-type="fig" rid="fig2">2</xref>). The observed average insert size (Fig.&#x000a0;<xref ref-type="fig" rid="fig2">2</xref>) in the synthetic libraries from ONT are slightly higher than the observed ones in PacBio, thus reflecting the nature of the error of each long-read technology, which are deletions for ONT&#x000a0;[<xref rid="bib4" ref-type="bibr">4</xref>] and substitutions for PacBio&#x000a0;[<xref rid="bib4" ref-type="bibr">4</xref>].</p><fig id="fig2" orientation="portrait" position="float"><label>Figure 2:</label><caption><p>Box plots of the insert size distribution observed for each synthetic library in the genome of <italic>Escherichia coli</italic> K12. The box plots were drawn extracting from the <sc>Fast</sc>-SG alignments a minimum of 5 000 insert sizes from the mate-pair reads mapped within contigs for each combination of synthetic library and long-read technology. The percentage of outliers detected in the raw ONT reads ranged from a minimum of 0.37% (0.5 kb) to a maximum of 4.24% (8 kb), while for raw PacBio it ranged from a minimum of 0.25% (0.5 kb) to a maximum of 9.85% (8 kb). The number of outliers increased with the error correction for both long-read technologies, reaching an average of 9.32% (std 1.73%) and 8.32% (std 3.74%) for the ONT and PacBio reads, respectively. The box plots were drawn excluding outliers.</p></caption><graphic xlink:href="giy048fig2"/></fig><p>We computed the recall achieved by <sc>Fast</sc>-SG at the levels of the <italic>k</italic>-mers and of the synthetic mate-pair reads (the length of the forward and reverse reads equals 200 base pairs) for each long-read technology from either raw or corrected reads (<xref ref-type="supplementary-material" rid="sup9">Supplementary Table S8</xref>). At the <italic>k</italic>-mer level, <sc>Fast</sc>-SG has a recall of 8.3% and 5.05% for the uncorrected reads of ONT and PacBio, respectively. The hybrid error correction increased the <italic>k</italic>-mer recall by 10% for both long-read technologies. At the synthetic mate-pair read level, we observed a recall of 49.42% and 31.65% for the raw ONT and raw PacBio reads, respectively. The hybrid error correction increases the synthetic mate-pair read recall for ONT to 75.12% and for PacBio to 65.02%. We observed that <sc>Fast</sc>-SG is more effective aligning synthetic mate-pair reads from raw ONT than from raw PacBio reads. We expect that this is due to the nature of the ONT errors (major deletions) as <sc>Fast</sc>-SG is designed to deal with short indels. Despite the low <italic>k</italic>-mer recall, <sc>Fast</sc>-SG achieved a decent synthetic mate-pair read recall on this dataset from both long-read technologies and extracted near-perfect synthetic mate-pair libraries. The synthetic mate-pair libraries can be used as input to a short-read scaffolder to generate scaffold sequences through a combination of short- and long-read technologies.</p></sec><sec id="sec1-4-2"><title>Comparison of <sc>Fast</sc>-SG coupled with short-read scaffolders against <sc>Links</sc></title><p>We compared the results obtained by <sc>Fast</sc>-SG coupled with <sc>Opera</sc>-LG&#x000a0;[<xref rid="bib11" ref-type="bibr">11</xref>], <sc>ScaffMatch</sc>&#x000a0;[<xref rid="bib13" ref-type="bibr">13</xref>], and <sc>Boss</sc>&#x000a0;[<xref rid="bib14" ref-type="bibr">14</xref>] against <sc>Links</sc>&#x000a0;[<xref rid="bib39" ref-type="bibr">39</xref>], which is a scaffolder specifically designed to extract paired <italic>k</italic>-mers from long reads and use them to join contigs.</p><p>
<sc>Fast</sc>-SG and <sc>Links</sc> were applied with default parameters (<italic>k</italic>-mer of size 15) to create the synthetic mate-pair libraries in the range of 0.5&#x02013;8 kb using as input the uncorrected long reads and Illumina assemblies available for both species (Table <xref ref-type="table" rid="tbl1">1</xref>). Since <sc>Links</sc> performs better with high long-read coverage&#x000a0;[<xref rid="bib39" ref-type="bibr">39</xref>], we subsampled 50X and 30X of coverage from <italic>E. coli</italic> K12 and <italic>S. cerevisiae</italic> W303, respectively.</p><p>
<sc>Fast</sc>-SG is two times faster than <sc>Links</sc> and requires two orders of magnitude less memory to extract linking information from the long reads (<xref ref-type="supplementary-material" rid="sup9">Supplementary Table S9</xref>). The percentages of linked pairs extracted by both methods is comparable (with <sc>Fast</sc>-SG being slightly superior). As expected, the percentage of linked pairs increases as a function of the insert size length for both long-read technologies (<xref ref-type="supplementary-material" rid="sup9">Supplementary Table S10</xref>).</p><p>A more informative comparison involved assessing the quality of the scaffolds&#x000a0;[<xref rid="bib3" ref-type="bibr">3</xref>] produced by <sc>Links</sc> on one hand, and on the other, by the short-read scaffolders coupled with <sc>Fast</sc>-SG. To evaluate the scaffolding results, the number of correct and erroneous joins were computed in each test case using the scripts provided in Hunt et&#x000a0;al.&#x000a0;[<xref rid="bib3" ref-type="bibr">3</xref>]. Moreover, the F-score metric (Short- and long-reads benchmarks subsection) was used to summarize in a single statistic the performance of each scaffolder. Based on the F-score values, the short-read scaffolders using <sc>Fast</sc>-SG reached better or comparable results than <sc>Links</sc> (Fig.&#x000a0;<xref ref-type="fig" rid="fig3">3</xref>). Moreover, <sc>Links</sc> produced more scaffolding errors in two out of the three datasets tested (<xref ref-type="supplementary-material" rid="sup9">Supplementary Table S11</xref>). With respect to the <italic>E. coli</italic> dataset, the scaffolding errors made by the short-read scaffolders using <sc>Fast</sc>-SG (Fig.&#x000a0;<xref ref-type="fig" rid="fig3">3</xref>) were related to the gap size estimation (type error 4), orientation (type errors 1 and 5), and relocation (type errors 8 and 12). The major source of errors in the scaffolds produced by <sc>Links</sc> was of type 5. This measures the correct orientation and distance between pairs of contigs (Fig.&#x000a0;<xref ref-type="fig" rid="fig3">3</xref>). On the <italic>S. cerevisiae</italic> W303 dataset, the major source of scaffolding errors was translocation (type error 2) for both methods. However, <sc>Links</sc> has almost double the number of scaffolding errors compared to <sc>Fast</sc>-SG coupled with <sc>Opera</sc>-LG or <sc>Boss</sc> on this dataset (Fig.&#x000a0;<xref ref-type="fig" rid="fig3">3</xref>, <xref ref-type="supplementary-material" rid="sup9">Supplementary Table S11</xref>).</p><fig id="fig3" orientation="portrait" position="float"><label>Figure 3:</label><caption><p>Synthetic libraries scaffolding benchmark. The F-score (Methods section) was computed with the scripts provided by Hunt et&#x000a0;al.&#x000a0;[<xref rid="bib3" ref-type="bibr">3</xref>] on the scaffold sequences produced by each scaffolding tool. The pie charts show the number of scaffolding errors for <sc>Links</sc> and for the short-read scaffolders fed with the <sc>Fast</sc>-SG alignments for both <italic>E. coli</italic> K12 and <italic>S. cerevisiae</italic> W303. The definition of the scaffolding errors (colors in pie chart) are provided in the Short- and long-reads benchmarks subsection</p></caption><graphic xlink:href="giy048fig3"/></fig><p>Concerning the short-read scaffolders, <sc>Boss</sc> and <sc>ScaffMatch</sc> reached higher F-score values than <sc>Opera</sc>-LG (Fig.&#x000a0;<xref ref-type="fig" rid="fig3">3</xref>). However, they tended to produce more scaffolding errors (<xref ref-type="supplementary-material" rid="sup9">Supplementary Table S11</xref>). It is important to notice also that the scaffolding errors observed here can be further reduced because fragmented Illumina assemblies (Table&#x000a0;<xref ref-type="table" rid="tbl1">1</xref>) were used in order to maximize the possibility of the scaffolders to make joins.</p><p>Overall, the performance of the short-read scaffolders coupled with <sc>Fast</sc>-SG was superior or comparable to <sc>Links</sc>, a scaffolder specifically designed for long reads. <sc>Fast</sc>-SG thus allows the conversion of tools designed for short-read scaffolding into a long-read scaffolder in a fast and modular way.</p></sec><sec id="sec1-4-3"><title>Using <sc>Fast</sc>-SG to perform the hybrid assembly of Arabidopsis thaliana (Ler-0)</title><p>An important goal of hybrid assembly methods is to reduce the long-read coverage required to produce long-range genome assemblies. Here, we examine the long-read coverage required by our hybrid assembly method to produce long-range hybrid assemblies comparable to <sc>Canu</sc>&#x000a0;[<xref rid="bib4" ref-type="bibr">4</xref>], which is a state-of-the-art <italic>de novo</italic> long-read assembler.</p><p>Briefly, the hybrid assembly using <sc>Fast</sc>-SG proceeded as follows. In the first step, a single Illumina library (Table <xref ref-type="table" rid="tbl1">1</xref>) covering 100X the <italic>A. thaliana</italic> (Ler-0) genome was assembled using <sc>DiscovarDeNovo</sc>&#x000a0;[<xref rid="bib37" ref-type="bibr">37</xref>], which is one of the best tools for assembling a single Illumina fragment (paired-end) library. The resulting assembly contained 2 384 scaffolds with a N50 of 320 kb and a total size of 119 Mb (Table <xref ref-type="table" rid="tbl2">2</xref>). The <sc>DiscovarDeNovo</sc> assembly took 6.6&#x000a0;hours on 20 CPUs. In a second step, 50X PacBio reads (P5-C3) were error-corrected (Table <xref ref-type="table" rid="tbl1">1</xref>), with the same Illumina reads used for the <italic>de novo</italic> assembly, using <sc>Lordec</sc>. <sc>Lordec</sc> took 14.2&#x000a0;hours on 20 CPUs. In a third step, the error-corrected long reads were randomly subsampled with a coverage between 5X and 50X, and <sc>Fast</sc>-SG (using 21-mers) was used to create 12 synthetic mate-pair libraries in the range of 1&#x02013;20 kb for each subsample. The total number of mate-pair reads aligned at each coverage value ranged from 11.85 to 104.99 million for 5X to 50X, respectively (<xref ref-type="supplementary-material" rid="sup9">Supplementary Table&#x000a0;S12</xref>). On average, 7.2% of the synthetic mate-pair reads aligned by <sc>Fast</sc>-SG were linking (i.e., connecting two different contigs) in each subsample. Moreover, a near perfect insert size distribution and a low percentage of outliers were observed for each synthetic library (<xref ref-type="supplementary-material" rid="sup9">Supplementary Fig. S1</xref>). <sc>Fast</sc>-SG took 2.15&#x000a0;hours on 20 CPUs to process the whole dataset. Finally, <sc>Opera</sc>-LG, <sc>Boss</sc>, and <sc>ScaffMatch</sc> were fed with the <sc>Fast</sc>-SG alignments to produce the scaffold sequences (Table&#x000a0;<xref ref-type="table" rid="tbl2">2</xref>). All short-read scaffolders generated scaffold sequences in at most half an hour (<sc>Opera</sc>-LG 22 min, <sc>Boss</sc> 24 min,and <sc>ScaffMatch</sc> 30 min) using a single CPU.</p><table-wrap id="tbl2" orientation="portrait" position="float"><label>Table 2:</label><caption><p>Hybrid and long-read assemblies of <italic>Arabidopsis thaliana</italic> (Ler-0)</p></caption><table frame="above" rules="groups"><thead><tr><th align="left" rowspan="1" colspan="1">Number of scaffolds</th><th align="left" rowspan="1" colspan="1">MAX</th><th align="left" rowspan="1" colspan="1">N50</th><th align="left" rowspan="1" colspan="1">Size (Mb)</th><th align="left" rowspan="1" colspan="1">Fold</th><th align="left" rowspan="1" colspan="1">Long Read Coverage</th><th align="left" rowspan="1" colspan="1">Scaffolder /Assembler</th><th colspan="3" align="center" rowspan="1">Breakpoints</th><th align="left" rowspan="1" colspan="1">1-to-1 identity</th><th align="left" rowspan="1" colspan="1">% Ref covered</th></tr><tr><th align="left" rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1">Number</th><th align="left" rowspan="1" colspan="1">Bases (Mb)</th><th align="left" rowspan="1" colspan="1">% Error</th><th align="left" rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1"/></tr></thead><tbody><tr><td rowspan="1" colspan="1">2 384</td><td rowspan="1" colspan="1">1&#x02009;551&#x02009;485</td><td rowspan="1" colspan="1">320&#x02009;571</td><td rowspan="1" colspan="1">119.45</td><td rowspan="1" colspan="1">1.00</td><td rowspan="1" colspan="1">-</td><td rowspan="1" colspan="1">
<sc>Discovar</sc>
</td><td rowspan="1" colspan="1">91</td><td rowspan="1" colspan="1">0.48</td><td rowspan="1" colspan="1">0.49</td><td rowspan="1" colspan="1">99.07</td><td rowspan="1" colspan="1">82.044</td></tr><tr><td rowspan="1" colspan="1">1 577</td><td rowspan="1" colspan="1">5 305 497</td><td rowspan="1" colspan="1">1 076 408</td><td rowspan="1" colspan="1">120.05</td><td rowspan="1" colspan="1">3.36</td><td rowspan="1" colspan="1">5X</td><td rowspan="1" colspan="1">
<sc>Opera</sc>-LG</td><td rowspan="1" colspan="1">174</td><td rowspan="1" colspan="1">0.978</td><td rowspan="1" colspan="1">1.00</td><td rowspan="1" colspan="1">99.07</td><td rowspan="1" colspan="1">82.054</td></tr><tr><td rowspan="1" colspan="1">1 368</td><td rowspan="1" colspan="1">9 953 317</td><td rowspan="1" colspan="1">2 475 756</td><td rowspan="1" colspan="1">120.26</td><td rowspan="1" colspan="1">7.72</td><td rowspan="1" colspan="1">10X</td><td rowspan="1" colspan="1">
<sc>Opera</sc>-LG</td><td rowspan="1" colspan="1">202</td><td rowspan="1" colspan="1">1.197</td><td rowspan="1" colspan="1">1.22</td><td rowspan="1" colspan="1">99.07</td><td rowspan="1" colspan="1">82.047</td></tr><tr><td rowspan="1" colspan="1">1 249</td><td rowspan="1" colspan="1">16 906 870</td><td rowspan="1" colspan="1">4 165 132</td><td rowspan="1" colspan="1">120.32</td><td rowspan="1" colspan="1">12.99</td><td rowspan="1" colspan="1">15X</td><td rowspan="1" colspan="1">
<sc>Opera</sc>-LG</td><td rowspan="1" colspan="1">206</td><td rowspan="1" colspan="1">1.237</td><td rowspan="1" colspan="1">1.26</td><td rowspan="1" colspan="1">99.07</td><td rowspan="1" colspan="1">82.052</td></tr><tr><td rowspan="1" colspan="1">1 179</td><td rowspan="1" colspan="1">18 032 662</td><td rowspan="1" colspan="1">4 941 257</td><td rowspan="1" colspan="1">120.41</td><td rowspan="1" colspan="1">15.41</td><td rowspan="1" colspan="1">20X</td><td rowspan="1" colspan="1">
<sc>Opera</sc>-LG</td><td rowspan="1" colspan="1">218</td><td rowspan="1" colspan="1">1.588</td><td rowspan="1" colspan="1">1.62</td><td rowspan="1" colspan="1">99.07</td><td rowspan="1" colspan="1">82.060</td></tr><tr><td rowspan="1" colspan="1">1 103</td><td rowspan="1" colspan="1">14 710 653</td><td rowspan="1" colspan="1">4 756 724</td><td rowspan="1" colspan="1">120.43</td><td rowspan="1" colspan="1">14.84</td><td rowspan="1" colspan="1">30X</td><td rowspan="1" colspan="1">
<sc>Opera</sc>-LG</td><td rowspan="1" colspan="1">227</td><td rowspan="1" colspan="1">1.728</td><td rowspan="1" colspan="1">1.76</td><td rowspan="1" colspan="1">99.07</td><td rowspan="1" colspan="1">82.055</td></tr><tr><td rowspan="1" colspan="1">1 049</td><td rowspan="1" colspan="1">10 003 725</td><td rowspan="1" colspan="1">4 667 601</td><td rowspan="1" colspan="1">120.41</td><td rowspan="1" colspan="1">14.56</td><td rowspan="1" colspan="1">50X</td><td rowspan="1" colspan="1">
<sc>Opera</sc>-LG</td><td rowspan="1" colspan="1">230</td><td rowspan="1" colspan="1">1.732</td><td rowspan="1" colspan="1">1.76</td><td rowspan="1" colspan="1">99.07</td><td rowspan="1" colspan="1">82.060</td></tr><tr><td rowspan="1" colspan="1">1 345</td><td rowspan="1" colspan="1">8 867 374</td><td rowspan="1" colspan="1">1 632 787</td><td rowspan="1" colspan="1">120.40</td><td rowspan="1" colspan="1">5.09</td><td rowspan="1" colspan="1">5X</td><td rowspan="1" colspan="1">
<sc>ScaffM</sc>
</td><td rowspan="1" colspan="1">195</td><td rowspan="1" colspan="1">1.620</td><td rowspan="1" colspan="1">1.65</td><td rowspan="1" colspan="1">99.07</td><td rowspan="1" colspan="1">82.058</td></tr><tr><td rowspan="1" colspan="1">1 143</td><td rowspan="1" colspan="1">8 867 059</td><td rowspan="1" colspan="1">5 142 417</td><td rowspan="1" colspan="1">120.65</td><td rowspan="1" colspan="1">16.04</td><td rowspan="1" colspan="1">10X</td><td rowspan="1" colspan="1">
<sc>ScaffM</sc>
</td><td rowspan="1" colspan="1">203</td><td rowspan="1" colspan="1">1.319</td><td rowspan="1" colspan="1">1.34</td><td rowspan="1" colspan="1">99.07</td><td rowspan="1" colspan="1">82.045</td></tr><tr><td rowspan="1" colspan="1">1 072</td><td rowspan="1" colspan="1">11 814 750</td><td rowspan="1" colspan="1">6 165 459</td><td rowspan="1" colspan="1">120.73</td><td rowspan="1" colspan="1">19.23</td><td rowspan="1" colspan="1">15X</td><td rowspan="1" colspan="1">
<sc>ScaffM</sc>
</td><td rowspan="1" colspan="1">205</td><td rowspan="1" colspan="1">1.330</td><td rowspan="1" colspan="1">1.36</td><td rowspan="1" colspan="1">99.07</td><td rowspan="1" colspan="1">82.045</td></tr><tr><td rowspan="1" colspan="1">1 020</td><td rowspan="1" colspan="1">11 873 221</td><td rowspan="1" colspan="1">6 221 109</td><td rowspan="1" colspan="1">120.80</td><td rowspan="1" colspan="1">19.41</td><td rowspan="1" colspan="1">20X</td><td rowspan="1" colspan="1">
<sc>ScaffM</sc>
</td><td rowspan="1" colspan="1">207</td><td rowspan="1" colspan="1">1.477</td><td rowspan="1" colspan="1">1.50</td><td rowspan="1" colspan="1">99.07</td><td rowspan="1" colspan="1">82.039</td></tr><tr><td rowspan="1" colspan="1">958</td><td rowspan="1" colspan="1">13 946 812</td><td rowspan="1" colspan="1">7 073 179</td><td rowspan="1" colspan="1">120.90</td><td rowspan="1" colspan="1">22.06</td><td rowspan="1" colspan="1">30X</td><td rowspan="1" colspan="1">
<sc>ScaffM</sc>
</td><td rowspan="1" colspan="1">209</td><td rowspan="1" colspan="1">1.651</td><td rowspan="1" colspan="1">1.68</td><td rowspan="1" colspan="1">99.07</td><td rowspan="1" colspan="1">82.042</td></tr><tr><td rowspan="1" colspan="1">923</td><td rowspan="1" colspan="1">13 957 620</td><td rowspan="1" colspan="1">6 292 557</td><td rowspan="1" colspan="1">120.85</td><td rowspan="1" colspan="1">19.63</td><td rowspan="1" colspan="1">50X</td><td rowspan="1" colspan="1">
<sc>ScaffM</sc>
</td><td rowspan="1" colspan="1">210</td><td rowspan="1" colspan="1">1.712</td><td rowspan="1" colspan="1">1.74</td><td rowspan="1" colspan="1">99.07</td><td rowspan="1" colspan="1">82.041</td></tr><tr><td rowspan="1" colspan="1">1 593</td><td rowspan="1" colspan="1">5 296 335</td><td rowspan="1" colspan="1">1 037 785</td><td rowspan="1" colspan="1">119.96</td><td rowspan="1" colspan="1">3.24</td><td rowspan="1" colspan="1">5X</td><td rowspan="1" colspan="1">
<sc>Boss</sc>
</td><td rowspan="1" colspan="1">179</td><td rowspan="1" colspan="1">1.171</td><td rowspan="1" colspan="1">1.19</td><td rowspan="1" colspan="1">99.07</td><td rowspan="1" colspan="1">82.061</td></tr><tr><td rowspan="1" colspan="1">1 371</td><td rowspan="1" colspan="1">13 608 688</td><td rowspan="1" colspan="1">2 554 739</td><td rowspan="1" colspan="1">120.17</td><td rowspan="1" colspan="1">7.97</td><td rowspan="1" colspan="1">10X</td><td rowspan="1" colspan="1">
<sc>Boss</sc>
</td><td rowspan="1" colspan="1">200</td><td rowspan="1" colspan="1">1.335</td><td rowspan="1" colspan="1">1.36</td><td rowspan="1" colspan="1">99.07</td><td rowspan="1" colspan="1">82.054</td></tr><tr><td rowspan="1" colspan="1">1 239</td><td rowspan="1" colspan="1">13 643 115</td><td rowspan="1" colspan="1">2 829 628</td><td rowspan="1" colspan="1">120.22</td><td rowspan="1" colspan="1">8.83</td><td rowspan="1" colspan="1">15X</td><td rowspan="1" colspan="1">
<sc>Boss</sc>
</td><td rowspan="1" colspan="1">207</td><td rowspan="1" colspan="1">1.189</td><td rowspan="1" colspan="1">1.21</td><td rowspan="1" colspan="1">99.07</td><td rowspan="1" colspan="1">82.061</td></tr><tr><td rowspan="1" colspan="1">1 173</td><td rowspan="1" colspan="1">7 977 908</td><td rowspan="1" colspan="1">3 005 451</td><td rowspan="1" colspan="1">120.23</td><td rowspan="1" colspan="1">9.38</td><td rowspan="1" colspan="1">20X</td><td rowspan="1" colspan="1">
<sc>Boss</sc>
</td><td rowspan="1" colspan="1">212</td><td rowspan="1" colspan="1">1.564</td><td rowspan="1" colspan="1">1.59</td><td rowspan="1" colspan="1">99.07</td><td rowspan="1" colspan="1">82.060</td></tr><tr><td rowspan="1" colspan="1">1 093</td><td rowspan="1" colspan="1">9 004 636</td><td rowspan="1" colspan="1">2 974 378</td><td rowspan="1" colspan="1">120.28</td><td rowspan="1" colspan="1">9.28</td><td rowspan="1" colspan="1">30X</td><td rowspan="1" colspan="1">
<sc>Boss</sc>
</td><td rowspan="1" colspan="1">219</td><td rowspan="1" colspan="1">1.575</td><td rowspan="1" colspan="1">1.60</td><td rowspan="1" colspan="1">99.07</td><td rowspan="1" colspan="1">82.057</td></tr><tr><td rowspan="1" colspan="1">1 031</td><td rowspan="1" colspan="1">11 011 921</td><td rowspan="1" colspan="1">3 179 270</td><td rowspan="1" colspan="1">120.29</td><td rowspan="1" colspan="1">9.92</td><td rowspan="1" colspan="1">50X</td><td rowspan="1" colspan="1">
<sc>Boss</sc>
</td><td rowspan="1" colspan="1">229</td><td rowspan="1" colspan="1">2.162</td><td rowspan="1" colspan="1">2.20</td><td rowspan="1" colspan="1">99.07</td><td rowspan="1" colspan="1">82.050</td></tr><tr><td rowspan="1" colspan="1">1 439</td><td rowspan="1" colspan="1">447 211</td><td rowspan="1" colspan="1">80 063</td><td rowspan="1" colspan="1">89.84</td><td rowspan="1" colspan="1">-</td><td rowspan="1" colspan="1">10X</td><td rowspan="1" colspan="1">
<sc>Canu</sc>
</td><td rowspan="1" colspan="1">107</td><td rowspan="1" colspan="1">0.675</td><td rowspan="1" colspan="1">1.10</td><td rowspan="1" colspan="1">98.19</td><td rowspan="1" colspan="1">51.188</td></tr><tr><td rowspan="1" colspan="1">259</td><td rowspan="1" colspan="1">4 542 617</td><td rowspan="1" colspan="1">1 170 676</td><td rowspan="1" colspan="1">118.25</td><td rowspan="1" colspan="1">-</td><td rowspan="1" colspan="1">20X</td><td rowspan="1" colspan="1">
<sc>Canu-p</sc>
</td><td rowspan="1" colspan="1">201</td><td rowspan="1" colspan="1">0.969</td><td rowspan="1" colspan="1">0.99</td><td rowspan="1" colspan="1">99.06</td><td rowspan="1" colspan="1">81.907</td></tr><tr><td rowspan="1" colspan="1">258</td><td rowspan="1" colspan="1">4 543 625</td><td rowspan="1" colspan="1">1 170 942</td><td rowspan="1" colspan="1">118.31</td><td rowspan="1" colspan="1">-</td><td rowspan="1" colspan="1">20X</td><td rowspan="1" colspan="1">
<sc>Canu-q</sc>
</td><td rowspan="1" colspan="1">183</td><td rowspan="1" colspan="1">0.831</td><td rowspan="1" colspan="1">0.85</td><td rowspan="1" colspan="1">99.02</td><td rowspan="1" colspan="1">81.808</td></tr><tr><td rowspan="1" colspan="1">259</td><td rowspan="1" colspan="1">4 535 400</td><td rowspan="1" colspan="1">1 168 180</td><td rowspan="1" colspan="1">118.05</td><td rowspan="1" colspan="1">-</td><td rowspan="1" colspan="1">20X</td><td rowspan="1" colspan="1">
<sc>Canu</sc>
</td><td rowspan="1" colspan="1">185</td><td rowspan="1" colspan="1">1.030</td><td rowspan="1" colspan="1">1.09</td><td rowspan="1" colspan="1">98.82</td><td rowspan="1" colspan="1">78.874</td></tr><tr><td rowspan="1" colspan="1">119</td><td rowspan="1" colspan="1">15 152 700</td><td rowspan="1" colspan="1">6 219 401</td><td rowspan="1" colspan="1">120.67</td><td rowspan="1" colspan="1">-</td><td rowspan="1" colspan="1">50X</td><td rowspan="1" colspan="1">
<sc>Canu</sc>
</td><td rowspan="1" colspan="1">219</td><td rowspan="1" colspan="1">1.766</td><td rowspan="1" colspan="1">1.79</td><td rowspan="1" colspan="1">99.02</td><td rowspan="1" colspan="1">82.565</td></tr><tr><td rowspan="1" colspan="1">88</td><td rowspan="1" colspan="1">15 945 651</td><td rowspan="1" colspan="1">8 307 845</td><td rowspan="1" colspan="1">121.45</td><td rowspan="1" colspan="1">-</td><td rowspan="1" colspan="1">150X</td><td rowspan="1" colspan="1">
<sc>Canu</sc>
</td><td rowspan="1" colspan="1">215</td><td rowspan="1" colspan="1">1.935</td><td rowspan="1" colspan="1">1.95</td><td rowspan="1" colspan="1">99.06</td><td rowspan="1" colspan="1">82.938</td></tr></tbody></table><table-wrap-foot><fn id="tblf2"><p>Continuity was measured using maximum and N50 contig/scaffold size, where N50 is the contig/scaffold length such that half of the assembly size is obtained by adding contigs/scaffolds sorted in descending order by length. The quality of the assembly was evaluated via a direct comparison against the <italic>A. thaliana</italic> TAIR10 reference genome using <sc>Nucmer</sc>&#x000a0;[<xref rid="bib38" ref-type="bibr">38</xref>] and reported using the <sc>Gage</sc>&#x000a0;[<xref rid="bib26" ref-type="bibr">26</xref>] statistics, which from 1-to-1 alignment evaluates both identity and structural breakpoints (inversions, relocations, and translocations). An optimal assembly has high continuity, low breakpoint errors, high identity, and high coverage of the reference genome. <sc>Canu-p</sc> and <sc>Canu-q</sc> are <sc>Canu</sc> assemblies polished with <sc>Pilon</sc>&#x000a0;[<xref rid="bib48" ref-type="bibr">48</xref>] and <sc>Quiver</sc>, respectively. <sc>Pilon</sc> and <sc>Quiver</sc> are tools used after a long-read assembly to improve the quality of the consensus sequence. All datasets and commands used for the hybrid assembly of <italic>A. thaliana</italic> (Ler-0) are detailed in Table&#x000a0;<xref ref-type="table" rid="tbl1">1</xref> and <xref ref-type="supplementary-material" rid="sup9">Supplementary Materials 2 and 3</xref>.</p></fn></table-wrap-foot></table-wrap><p>The hybrid and the <sc>Canu</sc> assemblies available were structurally validated by a whole genome alignment against the reference <italic>A. thaliana</italic> TAIR10 genome (Table&#x000a0;<xref ref-type="table" rid="tbl2">2</xref>, <xref ref-type="supplementary-material" rid="sup9">Supplementary Material 2</xref>).</p><p>As can be seen in Table <xref ref-type="table" rid="tbl2">2</xref>, all hybrid assembly pipelines were able to produce long-range scaffolds (N50&#x000a0;&#x0003e;1 Mb) with a high coverage of the reference genome, low number of errors (&#x0003c;2.2%), low amount of sequence gaps (1.46 Mb as maximum), and with an identity higher than any <sc>Canu</sc> assembly. All hybrid assemblies at 5X coverage reached a N50 scaffold size comparable to the contig N50 obtained by a polished <sc>Canu</sc> assembly requiring 20X of coverage and 100X of Illumina reads (Table&#x000a0;<xref ref-type="table" rid="tbl2">2</xref>). Additionally, all hybrid assembly pipelines seemed to plateau after 30X of long-read coverage as was previously observed for this dataset&#x000a0;[<xref rid="bib4" ref-type="bibr">4</xref>]. However, <sc>ScaffMatch</sc>, the most aggressive scaffolder tested, at 10X&#x02013;30X of coverage produced accurate scaffolds having an N50 comparable to the <sc>Canu</sc> assemblies requiring 50X or 150X of coverage (Table&#x000a0;<xref ref-type="table" rid="tbl2">2</xref>).</p><p>All assemblies of <italic>A. thaliana</italic> (Ler-0) were comparable in terms of the number and amount of sequences involved in structural errors (Table&#x000a0;<xref ref-type="table" rid="tbl2">2</xref>). Moreover, the major source of structural errors observed in both assembly strategies were mainly relocations, which explains more than 50% of the amount of sequences involved in miss-assemblies (<xref ref-type="supplementary-material" rid="sup9">Supplementary Fig. S3</xref>).</p><p>Overall, we demonstrated that the hybrid assemblies were comparable in terms of continuity, completeness, and accuracy to the assemblies obtained by <sc>Canu</sc>, which is considered a state-of-the-art <italic>de novo</italic> long-read assembly pipeline. Furthermore, the proposed hybrid assembly strategy allowed faster and cheaper reconstructions of the <italic>A. thaliana</italic> (Ler-0) genome and was remarkably efficient at shallow long-read coverage (5X&#x02013;10X).</p></sec><sec id="sec1-4-4"><title>Using <sc>Fast</sc>-SG to perform the hybrid assembly of a diploid human genome (NA12878)</title><p>An ultimate benchmark for any assembly method or sequencing technology is to assemble a complete human genome&#x000a0;[<xref rid="bib4" ref-type="bibr">4</xref>, <xref rid="bib20" ref-type="bibr">20</xref>, <xref rid="bib22" ref-type="bibr">22</xref>, <xref rid="bib34" ref-type="bibr">34</xref>, <xref rid="bib40" ref-type="bibr">40</xref>]. We performed a hybrid assembly of the Utah/Ceph NA12878 human diploid genome using a low coverage (5X) of ultra-long Nanopore reads (Table&#x000a0;<xref ref-type="table" rid="tbl1">1</xref>, [<xref rid="bib17" ref-type="bibr">17</xref>]), a <sc>DiscovarDeNovo</sc> assembly built from 50X of 250 bp Illumina reads (Table <xref ref-type="table" rid="tbl1">1</xref>, [<xref rid="bib37" ref-type="bibr">37</xref>]), <sc>Fast</sc>-SG, and <sc>ScaffMatch</sc>&#x000a0;[<xref rid="bib13" ref-type="bibr">13</xref>].</p><p>
<sc>Fast</sc>-SG (using 22-mers) was run to create 20 synthetic mate-pair libraries in the range of 2&#x02013;180 kb using as input a total of 1.4 million uncorrected Nanopore reads (N50 64.75 kb, Table <xref ref-type="table" rid="tbl1">1</xref>), which have a total size of 23.11 Gb and cover about 7X that of the human genome. A total of 455.9 million synthetic mate-pair reads (11.15% linking contigs, <xref ref-type="supplementary-material" rid="sup9">Supplementary Table&#x000a0;S13</xref>) were aligned to the <sc>DiscovarDeNovo</sc> assembly, with a near-perfect distribution of insert sizes and a low percentage of outliers observed (<xref ref-type="supplementary-material" rid="sup9">Supplementary Fig. S2</xref>). <sc>Fast</sc>-SG required 8&#x000a0;hours using 20 CPUs to complete the task and used a maximum of 25 Gb of memory. <sc>ScaffMatch</sc> was then fed with the alignments of <sc>Fast</sc>-SG and took 5.18&#x000a0;hours using a single CPU with a peak memory of 30.87 Gb to generate the scaffold sequences. The resulting hybrid assembly is referred to here as the DFS (<sc>DiscovarDeNovo</sc>+<sc>Fast</sc>-SG+<sc>ScaffMatch</sc>) assembly.</p><p>We evaluated the accuracy of the DFS assembly together with the public assemblies of NA12878 that were built using <sc>Canu</sc>&#x000a0;[<xref rid="bib17" ref-type="bibr">17</xref>], <sc>MaSuRCA</sc>&#x000a0;[<xref rid="bib34" ref-type="bibr">34</xref>], 10X genomics&#x000a0;[<xref rid="bib22" ref-type="bibr">22</xref>], and DOVETAIL genomics&#x000a0;[<xref rid="bib20" ref-type="bibr">20</xref>] by means of whole genome alignments against the complete human reference genome (Table&#x000a0;<xref ref-type="table" rid="tbl3">3</xref>).</p><table-wrap id="tbl3" orientation="portrait" position="float"><label>Table 3:</label><caption><p>Hybrid and long-read assemblies of NA12878</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1">
<sc>Discovar</sc>
</th><th align="left" rowspan="1" colspan="1">
<sc>Dfs</sc>
</th><th align="left" rowspan="1" colspan="1">
<sc>10X</sc>
</th><th align="left" rowspan="1" colspan="1">
<sc>Dovetail</sc>
</th><th align="left" rowspan="1" colspan="1">
<sc>Canu-p</sc>
</th><th align="left" rowspan="1" colspan="1">
<sc>MaSuRCA</sc>
</th></tr></thead><tbody><tr><td rowspan="1" colspan="1">
<bold>Assembly statistics</bold>
</td><td rowspan="1" colspan="1">Number</td><td rowspan="1" colspan="1">37 393</td><td rowspan="1" colspan="1">7 323</td><td rowspan="1" colspan="1">9 926</td><td rowspan="1" colspan="1">9 463</td><td rowspan="1" colspan="1">2 337</td><td rowspan="1" colspan="1">4 885</td></tr><tr><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">Min.</td><td rowspan="1" colspan="1">2 000</td><td rowspan="1" colspan="1">2 000</td><td rowspan="1" colspan="1">2 000</td><td rowspan="1" colspan="1">2 000</td><td rowspan="1" colspan="1">2 981</td><td rowspan="1" colspan="1">4 103</td></tr><tr><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">Max.</td><td rowspan="1" colspan="1">1 380 479</td><td rowspan="1" colspan="1">30 548 185</td><td rowspan="1" colspan="1">69 726 354</td><td rowspan="1" colspan="1">95 295 052</td><td rowspan="1" colspan="1">50 410 306</td><td rowspan="1" colspan="1">9 066 374</td></tr><tr><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">N50</td><td rowspan="1" colspan="1">202 174</td><td rowspan="1" colspan="1">6 445 123</td><td rowspan="1" colspan="1">16 305 019</td><td rowspan="1" colspan="1">24 472 662</td><td rowspan="1" colspan="1">7 667 013</td><td rowspan="1" colspan="1">1 695 766</td></tr><tr><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">Size</td><td rowspan="1" colspan="1">2 794 627 041</td><td rowspan="1" colspan="1">2 884 349 664</td><td rowspan="1" colspan="1">2 835 096 130</td><td rowspan="1" colspan="1">2 800 321 128</td><td rowspan="1" colspan="1">2 866 880 913</td><td rowspan="1" colspan="1">2 849 443 591</td></tr><tr><td rowspan="1" colspan="1">
<bold>Long-read coverage</bold>
</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">-</td><td rowspan="1" colspan="1">7X</td><td rowspan="1" colspan="1">-</td><td rowspan="1" colspan="1">-</td><td rowspan="1" colspan="1">35X</td><td rowspan="1" colspan="1">7X</td></tr><tr><td colspan="8" align="left" rowspan="1">
<bold>1-to-1 alignments</bold>
</td></tr><tr><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">Length</td><td rowspan="1" colspan="1">2 793 980 166</td><td rowspan="1" colspan="1">2 797 898 328</td><td rowspan="1" colspan="1">2 778 947 064</td><td rowspan="1" colspan="1">2 799 630 879</td><td rowspan="1" colspan="1">2 811 439 829</td><td rowspan="1" colspan="1">2 845 550 340</td></tr><tr><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">Identity</td><td rowspan="1" colspan="1">99.8</td><td rowspan="1" colspan="1">99.8</td><td rowspan="1" colspan="1">99.79</td><td rowspan="1" colspan="1">99.8</td><td rowspan="1" colspan="1">99.28</td><td rowspan="1" colspan="1">99.67</td></tr><tr><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">% Ref covered</td><td rowspan="1" colspan="1">90.16</td><td rowspan="1" colspan="1">90.29</td><td rowspan="1" colspan="1">89.68</td><td rowspan="1" colspan="1">90.35</td><td rowspan="1" colspan="1">90.73</td><td rowspan="1" colspan="1">91.83</td></tr><tr><td colspan="8" align="left" rowspan="1">
<bold>Breakpoints</bold>
</td></tr><tr><td rowspan="1" colspan="1">Relocations</td><td rowspan="1" colspan="1">Number</td><td rowspan="1" colspan="1">120</td><td rowspan="1" colspan="1">1 151</td><td rowspan="1" colspan="1">688</td><td rowspan="1" colspan="1">997</td><td rowspan="1" colspan="1">501</td><td rowspan="1" colspan="1">374</td></tr><tr><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">Bases (Mb)</td><td rowspan="1" colspan="1">0.361</td><td rowspan="1" colspan="1">5.604</td><td rowspan="1" colspan="1">4.810</td><td rowspan="1" colspan="1">0.582</td><td rowspan="1" colspan="1">2.281</td><td rowspan="1" colspan="1">2.071</td></tr><tr><td rowspan="1" colspan="1">Translocations</td><td rowspan="1" colspan="1">Number</td><td rowspan="1" colspan="1">373</td><td rowspan="1" colspan="1">1 856</td><td rowspan="1" colspan="1">883</td><td rowspan="1" colspan="1">976</td><td rowspan="1" colspan="1">1 082</td><td rowspan="1" colspan="1">941</td></tr><tr><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">Bases (Mb)</td><td rowspan="1" colspan="1">4.840</td><td rowspan="1" colspan="1">11.279</td><td rowspan="1" colspan="1">7.838</td><td rowspan="1" colspan="1">6.576</td><td rowspan="1" colspan="1">13.781</td><td rowspan="1" colspan="1">13.933</td></tr><tr><td rowspan="1" colspan="1">Inversions</td><td rowspan="1" colspan="1">Number</td><td rowspan="1" colspan="1">53</td><td rowspan="1" colspan="1">768</td><td rowspan="1" colspan="1">871</td><td rowspan="1" colspan="1">2,813</td><td rowspan="1" colspan="1">299</td><td rowspan="1" colspan="1">240</td></tr><tr><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">Bases (Mb)</td><td rowspan="1" colspan="1">0.151</td><td rowspan="1" colspan="1">3.886</td><td rowspan="1" colspan="1">7.273</td><td rowspan="1" colspan="1">0.736</td><td rowspan="1" colspan="1">2.903</td><td rowspan="1" colspan="1">3.008</td></tr><tr><td rowspan="1" colspan="1">Total</td><td rowspan="1" colspan="1">Number</td><td rowspan="1" colspan="1">546</td><td rowspan="1" colspan="1">3 775</td><td rowspan="1" colspan="1">2 442</td><td rowspan="1" colspan="1">4 786</td><td rowspan="1" colspan="1">1 882</td><td rowspan="1" colspan="1">1 555</td></tr><tr><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">Bases (Mb)</td><td rowspan="1" colspan="1">5.353</td><td rowspan="1" colspan="1">20.769</td><td rowspan="1" colspan="1">19.921</td><td rowspan="1" colspan="1">7.894</td><td rowspan="1" colspan="1">18.964</td><td rowspan="1" colspan="1">19.012</td></tr><tr><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">%1-to-1</td><td rowspan="1" colspan="1">0.192</td><td rowspan="1" colspan="1">0.742</td><td rowspan="1" colspan="1">0.717</td><td rowspan="1" colspan="1">0.282</td><td rowspan="1" colspan="1">0.675</td><td rowspan="1" colspan="1">0.668</td></tr></tbody></table><table-wrap-foot><fn id="tblf3"><p>Assembly statistics: <italic>Number</italic> - number of contigs/scaffolds assembled; <italic>Max/Min</italic> - the maximum/minimum contig/scaffold size in base pairs; <italic>N50</italic> - contig/scaffold length such that half of the assembly size is obtained by adding contigs/scaffolds sorted in descending order by length; <italic>size</italic> - total size of the assembly in base pairs; 1-to-1 alignments: <italic>length</italic> - total length of nonrepetitive alignments between the assembly and GRCh38.p10 detected by <sc>Nucmer</sc>; <italic>identity</italic> - average identity between the assembly and GRCh38.p10 computed from the 1-to-1 alignments; <italic>%Ref covered</italic> - percentage of the GRCh38.p10 that is covered by 1-to-1 alignments where the length of the reference was set to 3.1 Gb; <italic>Breakpoints -</italic> structural errors were obtained from 1-to-1 alignments and reported using the <sc>Gage</sc> metrics (relocations, translocations, and inversions); <italic>number</italic> - counts the number of breakpoints by sort; <italic>bases (Mb)</italic> - adds the number of bases involved in breakpoints extracted from the <sc>Dnadiff</sc> report (qdiff file) in mega bases; <italic>%1-to-1</italic> - percentage of structural errors with respect to the total 1-to-1 alignment length. Public NA12878 assemblies were downloaded and used for validation and comparisons against the DFS hybrid assembly pipeline.</p></fn></table-wrap-foot></table-wrap><p>In terms of continuity (N50, Table&#x000a0;<xref ref-type="table" rid="tbl3">3</xref>), the DFS assembly is more than 4X larger than a <sc>MaSuRCA</sc> hybrid assembly built with the same long-read dataset and 100X of Illumina reads [<xref rid="bib49_752_1527067309568" ref-type="bibr">49</xref>]. Moreover, it is comparable to a polished <sc>Canu</sc> assembly built with 35X of long-read coverage&#x000a0;[<xref rid="bib17" ref-type="bibr">17</xref>]. DOVETAIL genomics and 10X genomics reached larger N50 scaffolds (Table&#x000a0;<xref ref-type="table" rid="tbl3">3</xref>), which are 2.5X and 3.7X larger than the DFS assembly, respectively. All assemblies are comparable in terms of size, 1-to-1 alignment length, and coverage of the reference genome (Table <xref ref-type="table" rid="tbl3">3</xref>).</p><p>In terms of identity (Table&#x000a0;<xref ref-type="table" rid="tbl3">3</xref>), DOVETAIL genomics and DFS are the leading pipelines. DOVETAIL genomics and DFS both use the <sc>DiscovarDeNovo</sc> assembly as input for scaffolding. Both software programs maintain the high identity of the <sc>DiscovarDeNovo</sc> assembly because contig bases are not changed in the scaffolding process.</p><p>Regarding the structural errors, all assembly pipelines are highly accurate with less than 1% of the total 1-to-1 alignment length involved in such errors (Table <xref ref-type="table" rid="tbl3">3</xref>, <xref ref-type="supplementary-material" rid="sup9">Supplementary Fig. S4</xref>). Moreover, translocation is the structural error that accumulates the greatest amount of miss-assembled bases on all assembly pipelines (Table&#x000a0;<xref ref-type="table" rid="tbl3">3</xref>). A more detailed inspection of the 1-to-1 alignments revealed that DFS, 10X genomics, and DOVETAIL genomics tend to skip the short contigs (<xref ref-type="supplementary-material" rid="sup9">Supplementary Table S14</xref>), which is a known problem of scaffolding tools&#x000a0;[<xref rid="bib3" ref-type="bibr">3</xref>]. However, more complex miss-assemblies involving several structural errors were observed in the chimeric contigs assembled by <sc>Canu</sc> and <sc>MaSuRCA</sc> (<xref ref-type="supplementary-material" rid="sup9">Supplementary Table S15</xref>).</p><p>In terms of speed, the whole DFS pipeline (933 CPU hours) was 22X times faster than <sc>MaSuRCA</sc> (21 000 CPU hours; personal communication), 162X times faster than <sc>Canu</sc> (151 000 CPU hours&#x000a0;[<xref rid="bib17" ref-type="bibr">17</xref>]), and comparable to 10X genomics and DOVETAIL genomics.</p><p>Finally, we call attention to the fact that the hybrid assembly solution that we propose (using 14 ONT flow cells and 50X of 250 bp paired-end reads sequenced on Hiseq2500) is approximately 3&#x000a0;times cheaper than the <sc>Canu</sc> solution (using 53 flow cells and 50X of Illumina).</p><p>In summary, we demonstrated in this experiment that the DFS hybrid assembly pipeline produced an accurate and long-range reconstruction of a diploid human genome that was faster and cheaper than the current state-of-the-art long-read assembly pipelines.</p></sec><sec id="sec1-4-5"><title>Compatibility of <sc>Fast</sc>-SG with Illumina mate-pair libraries</title><p>In this section, we explore the usefulness of <sc>Fast</sc>-SG as an alternative to commonly used short-read alignment software for scaffolding graph construction from short-read data. Indeed, Hunt et&#x000a0;al.&#x000a0;[<xref rid="bib3" ref-type="bibr">3</xref>] demonstrated that the quality of the scaffolding results is highly dependent on the short-read aligner being used and that precision is more important than maximizing the number of reads aligned to the contigs.</p><p>We assessed the performance of <sc>Fast</sc>-SG for aligning short reads on simulated Illumina data from the complete human reference genome (GRCh38.p10, <xref ref-type="supplementary-material" rid="sup9">Supplementary Material 4</xref>) together with <sc>Bowtie</sc>&#x000a0;[<xref rid="bib8" ref-type="bibr">8</xref>], <sc>Bowtie2</sc>&#x000a0;[<xref rid="bib10" ref-type="bibr">10</xref>], <sc>Bwa-Mem</sc>&#x000a0;[<xref rid="bib36" ref-type="bibr">36</xref>], and <sc>Bwa</sc>&#x000a0;[<xref rid="bib9" ref-type="bibr">9</xref>], which are commonly used short-read aligners for constructing a scaffolding graph&#x000a0;[<xref rid="bib3" ref-type="bibr">3</xref>].</p><p>Our results show that the <sc>Fast</sc>-SG precision is high for any <italic>k</italic>-mer size (99.21% as minimum), is superior to <sc>Bowtie2-local</sc> (98.17%), and is comparable to <sc>Bowtie2-global</sc> (99.74%). However, <sc>Bwa-Mem</sc> (99.97%) is the leading tool (<xref ref-type="supplementary-material" rid="sup9">Supplementary Table S16</xref>). In terms of speed, <sc>Fast</sc>-SG performs the best. Indeed, it is between 7X and 14X times faster (depending on the <italic>k</italic>-mer size) than the next fastest program, which is <sc>Bowtie2-global</sc> (<xref ref-type="supplementary-material" rid="sup9">Supplementary Table S16</xref>). The recall of <sc>Fast</sc>-SG depends on the <italic>k</italic>-mer size used (<xref ref-type="supplementary-material" rid="sup9">Supplementary Table S16</xref>, Fig.&#x000a0;<xref ref-type="fig" rid="fig1">1B</xref>). The recall of <sc>Fast</sc>-SG (71.67%) is comparable to <sc>Bowtie</sc> (71.52%) for optimal <italic>k</italic>-mer values (<italic>k</italic> = 25-30). Larger <italic>k</italic>-mer values (<italic>k</italic>&#x0003e;50) decrease the recall of <sc>Fast</sc>-SG due to sequencing errors and read length. To map short reads of 101 base pairs in length, we therefore recommend use of<italic>k</italic>-mer values in the range of 25 to 30 base pairs.</p><p>A more informative evaluation consists of assessing the performance of <sc>Fast</sc>-SG on real Illumina data. Such evaluation was done on four real test cases (Table&#x000a0;<xref ref-type="table" rid="tbl1">1</xref>) and using four short-read scaffolders. The short reads were aligned using <sc>Fast</sc>-SG and the aforementioned short-read aligners. The scaffolders were fed with such alignments and run with identical commands overall (<xref ref-type="supplementary-material" rid="sup9">Supplementary Material 5</xref>).</p><p>In relation to the number of paired reads mapped (<xref ref-type="supplementary-material" rid="sup9">Supplementary Fig. S5</xref>), <sc>Fast</sc>-SG aligned on average more pairs than <sc>Bowtie</sc> or <sc>Bwa</sc> and was comparable to <sc>Bowtie2-global</sc>. However, it aligns fewer pairs than <sc>Bowtie2-local</sc> or <sc>Bwa-Mem</sc>. From the number of paired reads aligned across the four test cases, we noticed that the behavior of <sc>Fast</sc>-SG depends on the <italic>k</italic>-mer size chosen. With larger sizes, <sc>Fast</sc>-SG resembles global methods, while with shorter sizes, it is closer to local methods (<xref ref-type="supplementary-material" rid="sup9">Supplementary Fig. S5</xref>).</p><p>The average contig read-coverage statistic that is used to tag the repeated contigs before scaffolding&#x000a0;[<xref rid="bib2" ref-type="bibr">2</xref>] was extracted from the results of <sc>Opera</sc>-LG. Such statistics were used to compute a pairwise Pearson correlation to determine the linear relationship between the short-read aligners and <sc>Fast</sc>-SG (<xref ref-type="supplementary-material" rid="sup9">Supplementary Fig. S6</xref>). We observed that the average contig read-coverage computed from the <sc>Fast</sc>-SG alignments correlated more on average with <sc>Bowtie</sc> (<inline-formula><tex-math id="M5">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\overline{x}$\end{document}</tex-math></inline-formula>=0.933), <sc>Bwa</sc> (<inline-formula><tex-math id="M6">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\overline{x}$\end{document}</tex-math></inline-formula>=0.905), and <sc>Bowtie2-global</sc> (<inline-formula><tex-math id="M7">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\overline{x}$\end{document}</tex-math></inline-formula>=0.814) than with <sc>Bwa-Mem</sc> (<inline-formula><tex-math id="M8">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\overline{x}$\end{document}</tex-math></inline-formula>=0.772) or <sc>Bowtie2-local</sc> (<inline-formula><tex-math id="M9">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\overline{x}$\end{document}</tex-math></inline-formula>=0.725) on the datasets of <italic>S. aureus</italic>, <italic>R. sphaeroides</italic>, and <italic>P. falciparum</italic> (<xref ref-type="supplementary-material" rid="sup9">Supplementary Fig. S6</xref>).</p><p>The results of the four test cases in terms of F-score and error rate are illustrated in Fig.&#x000a0;<xref ref-type="fig" rid="fig4">4</xref> and detailed in <xref ref-type="supplementary-material" rid="sup9">Supplementary Tables S17 to S20</xref>. For almost all the test cases and scaffolding tools, <sc>Fast</sc>-SG reached the largest F-score (Fig.&#x000a0;<xref ref-type="fig" rid="fig4">4</xref>) for some <italic>k</italic>-mer values. Moreover, <sc>Fast</sc>-SG had a superior average performance in terms of F-score in relation to the four scaffolders tested in two of the five datasets (Fig. <xref ref-type="fig" rid="fig4">4</xref>, vertical lines) and allowed the scaffolding tools to obtain more accurate scaffolding results in four of the five datasets (Fig. <xref ref-type="fig" rid="fig4">4</xref>, vertical lines).</p><fig id="fig4" orientation="portrait" position="float"><label>Figure 4:</label><caption><p>Illumina scaffolding benchmark. Four real datasets (Table&#x000a0;<xref ref-type="table" rid="tbl1">1</xref>), five Illumina libraries, and four scaffolding tools were used to assess the performance of <sc>Fast</sc>-SG and the short-read aligners for building the scaffolding graph by means of an F-score metric and percentage of wrong joins (Algorithms section, and <xref ref-type="supplementary-material" rid="sup9">Supplementary Material 4</xref>). <sc>Fast</sc>-SG was run with various <italic>k</italic>-mer sizes in the range of <italic>k</italic> = 12&#x02013;28, <italic>k</italic> = 12&#x02013;70, <italic>k</italic>= 15&#x02013;66, and <italic>k</italic> = 15&#x02013;80 for <italic>Staphylococcus aureus</italic>, <italic>Rhodobacter sphaeroides</italic>, <italic>Plasmodium falciparum</italic>, and the human chromosome 14, respectively. Short-read aligners were run with the wrapper or instructions provided by the scaffolding tools when possible or using the default parameters. Single data points provide the F-score and error rate for each combination of scaffolding tool and aligner in each dataset. The vertical lines show for each dataset the average F-score or error rate values obtained by each of the short-read aligners or <sc>Fast</sc>-SG together with the four scaffolding tools. Vertical lines for <sc>Bowtie</sc> were not plotted since it cannot be used with <sc>Besst2</sc>. For the <italic>P. falciparum</italic> (short) dataset, the average F-scores (vertical lines) were omitted for <sc>Bwa</sc>, <sc>Bwa-mem</sc>, and <sc>Bowtie2-Local</sc> due to poor performance (high error rate). The commands used for the aligners and scaffolding tools are detailed in <xref ref-type="supplementary-material" rid="sup9">Supplementary Material 5</xref>.</p></caption><graphic xlink:href="giy048fig4"/></fig><p>The low GC content genome of&#x000a0;<italic>P. falciparum</italic> proved to be particularly challenging to the scaffolders using local alignment methods (namely, <sc>Bwa-Mem</sc> or <sc>Bowtie2-local</sc>). These indeed tended to produce several wrong joins (Fig.&#x000a0;<xref ref-type="fig" rid="fig4">4</xref>), indicating that the local alignment methods are not an appropriate choice for scaffolding this genome. A possible explanation for the poor performance observed in this particular case is that the local alignment methods mapped 10% more reads than the global ones and more than <sc>Fast</sc>-SG (<xref ref-type="supplementary-material" rid="sup9">Supplementary Fig. S5</xref>). However, there is a low correlation in the average contig read-coverage between the local alignment methods and <sc>Fast</sc>-SG (<xref ref-type="supplementary-material" rid="sup9">Supplementary Fig. S6</xref>), suggesting many wrong mappings in the extra 10% aligned reads.</p><p>In conclusion, over the four test cases and four scaffolders benchmarked, <sc>Fast</sc>-SG consistently reached better scaffolding results than the short-read aligners evaluated and may be considered as an effective tool for constructing a scaffolding graph from short reads.</p></sec><sec id="sec1-4-6"><title>Procedure for effective hybrid assembly with <sc>Fast</sc>-SG
</title><p>The <italic>de novo</italic> assembly of a large genome is a difficult task. Genome complexity (size, repetitiveness, heterozygosity, polyploidy), as well as the algorithm and the sequencing platform adopted, are all factors that may affect the quality of the resulting assembly. Here, we provide a procedure for an effective hybrid assembly using <sc>Fast</sc>-SG that is based on our experience and benchmark results.</p><p>The first step is to produce the best possible Illumina contig assembly (Fig.&#x000a0;<xref ref-type="fig" rid="fig5">5</xref>, N50&#x000a0;&#x0003e;100 kb). To achieve this, we recommend the use of a single Illumina fragment library (paired-end) prepared using a Polymerase Chain Reaction (PCR)-free protocol (550&#x000a0;bp insert size). The Illumina library should be sequenced using either the MiSeq or the HiSeq2500 platform to generate paired reads of 250 bases at about 60X of genome coverage&#x000a0;[<xref rid="bib37" ref-type="bibr">37</xref>]. The Illumina library must be assembled with a de Bruijn graph assembler supporting a large <italic>k</italic>-mer size (<italic>k</italic> &#x000a0;=&#x000a0;200) or a multi <italic>k</italic>-mer approach&#x000a0;[<xref rid="bib41" ref-type="bibr">41</xref>]. We tested <sc>DiscovarDenovo</sc> (<italic>k</italic> = 200) and obtained good-quality contigs (N50&#x000a0;&#x0003e;100 kb), but either <sc>Abyss</sc>&#x000a0;[<xref rid="bib42" ref-type="bibr">42</xref>] or <sc>Spades</sc>&#x000a0;[<xref rid="bib41" ref-type="bibr">41</xref>] can be used to create the contigs.</p><fig id="fig5" orientation="portrait" position="float"><label>Figure 5:</label><caption><p>
<sc>Fast</sc>-SG hybrid assembly workflow. Thick black lines represent the common path for hybrid assembly with <sc>Fast</sc>-SG. Thin black lines show alternative paths when long reads were error-corrected or Illumina mate-pair libraries were sequenced.</p></caption><graphic xlink:href="giy048fig5"/></fig><p>The second step is to sequence at shallow coverage (5X&#x02013;10X) the longest possible reads by using the ONT or PacBio technologies (Fig. <xref ref-type="fig" rid="fig5">5</xref>). At the moment, we recommend the use of 1D ONT reads because the latest ONT machines produce longer reads than PacBio machines and <sc>Fast</sc>-SG is more adapted to the error profile of ONT than of PacBio. In cases where ONT reads are not available, we recommend hybrid error-correcting of the PacBio reads using <sc>Lordec</sc> (<italic>k</italic>&#x000a0;=&#x000a0;19&#x000a0;&#x02212;&#x000a0;21) before applying <sc>Fast</sc>-SG (Fig.&#x000a0;<xref ref-type="fig" rid="fig5">5</xref>).</p><p>The third step is to use <sc>Fast</sc>-SG to comprehensively extract linking information from the long reads by creating multiple-insert-size synthetic mate-pair libraries that lead to an improved scaffolding&#x000a0;[<xref rid="bib43" ref-type="bibr">43</xref>, <xref rid="bib44" ref-type="bibr">44</xref>]. In practice, we were able to create synthetic mate-pair libraries in the size ranges of 2&#x02013;20 kb and 2&#x02013;180 kb from PacBio and ONT (ultralong reads), respectively. The <italic>k</italic>-mer size parameter of <sc>Fast</sc>-SG depends on the quality of the long reads. With raw long reads, we recommend using short <italic>k</italic>-mer sizes (<italic>k</italic>=&#x000a0;17&#x02212;22) to overcome the high error rate. Larger <italic>k</italic>-mer sizes (<italic>k</italic>=&#x000a0;17&#x02212;40) can be used with error-corrected long reads or with Illumina mate-pair libraries (Fig. <xref ref-type="fig" rid="fig5">5</xref>). After running <sc>Fast</sc>-SG, we recommend verifying the quality of each synthetic mate-pair library generated. To check the synthetic libraries, it is possible to plot the distribution of the observed insert size statistics that are computed from the read pairs aligned within contigs. Figure <xref ref-type="fig" rid="fig2">2</xref> and the <xref ref-type="supplementary-material" rid="sup9">Supplementary Figs. S1 and S2</xref> provide examples of such distribution. Additionally, statistics of the percentage of outliers and standard deviation can be computed from the observed insert sizes. For instance, a high percentage of outliers (&#x0003e;30%) and a larger-than-expected standard deviation (&#x0003e;30% of average) are both indicative of a low-quality synthetic library. The latter must be discarded from the scaffolding step. <sc>Fast</sc>-SG computes and reports (log file) the observed average insert size for each synthetic library, which allows for an easy identification of low-quality synthetic libraries.</p><p>The fourth step is to select a short-read scaffolder. We showed that there are two classes of short-read scaffolding tools, one more conservative (this class includes <sc>Opera</sc>-LG and <sc>Besst2</sc>) and another more greedy (including <sc>Boss</sc> and <sc>ScaffMatch</sc>). The greedier scaffolders reach higher F-score values than the conservative ones. However, the greedy ones tend to produce more scaffolding errors (Fig.&#x000a0;4). According to our evaluations, we recommend a more greedy scaffolder (<sc>ScaffMatch</sc>) when the Illumina contig assembly is not highly fragmented (N50 &#x0003e;100 kb). Otherwise, a more conservative scaffolder (<sc>Opera</sc>-LG) should be used to avoid scaffolding errors.</p><p>Finally, a full hybrid assembly example is described step-by-step in the following wiki-page of <sc>Fast</sc>-SG [<xref rid="bib50_901_1527068360664" ref-type="bibr">50</xref>].</p></sec><sec id="sec1-4-7"><title>Discussion</title><p>The proposed hybrid assembly method could be improved by using the sequence between the synthetic mate pairs (inner sequence), either for assigning a new weight to the edges before scaffolding or for placing the skipped contigs after scaffolding. An edge of the scaffolding graph can be reweighted by computing the edit distance among the inner sequences and then eliminating the pairs that have a large edit distance. <sc>Edlib</sc>&#x000a0;[<xref rid="bib45" ref-type="bibr">45</xref>] is an efficient library that could be used to perform this task. The skipped contigs can be unambiguously placed by computing a consensus sequence of the scaffolding gaps from the inner sequences and then aligning the skipped contigs to the consensus gap sequence, taking into account the lengths of the gap and of the skipped contig. The consensus of the inner sequences can be computed more quickly using the <sc>Spoa</sc> library, which implements a partial order alignment algorithm&#x000a0;[<xref rid="bib46" ref-type="bibr">46</xref>]. These two improvements coupled with an appropriate ultra-long Nanopore read coverage (10X) could lead to a hybrid assembly pipeline that is superior to the current long-range mate-pair technologies where these improvements are not possible due to the fact that, in both technologies, the gap sequence between pairs is unknown.</p><p>Clearly, improvement in the base accuracy of long reads will increase the recall of <sc>Fast</sc>-SG and thus impact positively on the hybrid assembly process. Notice, however, that read recall is less important because not all of the sequenced reads are useful for scaffolding. Indeed, we showed with the Illumina scaffolding benchmarks that the short-read aligners with higher read recall produced the worst scaffolding results. Additionally, <sc>Fast</sc>-SG was designed to enable construction of the scaffolding graph from uniquely mapped read pairs (<sc>Fast</sc>-SG index). It thus discards any repetitive sequences as they are not useful for building the scaffolding graph. ONT is a fast-evolving technology, and current use of the new 1<italic>D</italic><sup>2</sup> chemistry or improvement in the base callers are two alternatives that could lead to an increased base accuracy of the ONT reads.</p></sec></sec></sec><sec sec-type="conclusions" id="sec2"><title>Conclusions</title><p>Here, we introduced a new method, <sc>Fast</sc>-SG, that enables the construction of a scaffolding graph from either short or long reads, allowing for accurate construction of the scaffold sequences as well as for software reuse.</p><p>We showed that near-perfect synthetic libraries are obtained with <sc>Fast</sc>-SG from either corrected or uncorrected PacBio and Nanopore long reads. The insert size is restricted to the actual long-read size. However, using ultralong Nanopore reads,<sc>Fast</sc>-SG is able to extract synthetic libraries of even bacterial artificial chromosome clone sizes with insert sizes of 150&#x02013;180 kb. Those kinds of libraries were crucial to reach the high continuity of the current human reference genome&#x000a0;[<xref rid="bib40" ref-type="bibr">40</xref>]. An estimation of the gap size with the existing long-range mate-pair technologies (10X genomics and DOVETAIL genomics) is more challenging than with the synthetic libraries due to the fact that in such technologies, the linking information comes from a range of insert sizes and the relative orientation of the read pairs may not be known (DOVETAIL genomics).</p><p>Clearly, the synthetic libraries eliminate the bottleneck of sequencing a combination of mate-pair libraries, which were typically required to obtain long-range assemblies&#x000a0;[<xref rid="bib2" ref-type="bibr">2</xref>, <xref rid="bib23" ref-type="bibr">23</xref>, <xref rid="bib24" ref-type="bibr">24</xref>]. We further showed that short-read scaffolders are able to produce accurate scaffolds when they are fed with the synthetic libraries extracted by <sc>Fast</sc>-SG, thus leading to results that are superior to or match those obtained by <sc>Links</sc>, a scaffolder specifically designed for hybrid long-read scaffolding. Futhermore, we showed that <sc>Fast</sc>-SG is faster than the current state-of-the-art short-read aligners and that better results are achieved by the scaffolding tools when they are coupled with <sc>Fast</sc>-SG on illumina mate-pair data.</p><p>Finally, we demonstrated that <sc>Fast</sc>-SG in conjunction with efficient algorithms designed for Illumina data can be used to perform a full hybrid assembly of large genomes. The resulting assemblies are superior or comparable to the current state-of-the-art long-read assembly pipelines. Additionally, the modular hybrid pipelines are faster and remarkably efficient at shallow long-read coverage (5X&#x02013;10X). The scalability to large genomes, moderate computational resources, and the shallow long-read coverage required by the proposed solution represent significant improvements over the current hybrid assembly methods.</p><p>Overall, we believe that <sc>Fast</sc>-SG opens the door to achieve accurate hybrid long-range reconstructions of large genomes with low effort, high portability, and low cost.</p></sec><sec id="sec3"><title>Availability of supporting data</title><p>Code snapshots and test data for demonstration of sequence assembly tools are available in the GigaScience GigaDB repository&#x000a0;[<xref rid="bib47" ref-type="bibr">47</xref>].</p></sec><sec id="sec4"><title>Availability and requirements</title><p>
<list list-type="bullet"><list-item><p>Project name: Fast-SG</p></list-item><list-item><p>RRID (Research Resource Identification Initiative ID) : SCR_015934</p></list-item><list-item><p>Project home page: <ext-link ext-link-type="uri" xlink:href="https://github.com/adigenova/fast-sg">https://github.com/adigenova/fast-sg</ext-link></p></list-item><list-item><p>Operating system(s): Unix, Linux and Mac OSX</p></list-item><list-item><p>Programming language: C++ and PERL</p></list-item><list-item><p>Other requirements:&#x000a0;Compilation was tested with g++ version 5.3 (Linux) and clang version 4.2 (Mac OSX)</p></list-item><list-item><p>License: MIT</p></list-item><list-item><p>Any restrictions to use by non-academics: none</p></list-item></list>
</p></sec><sec id="sec5"><title>Additional files</title><p>
<bold>Additional file 1:</bold> The Supplementary-Material.pdf file contains the following Sections, Tables and Figures: <bold>Sections</bold>: Supplementary Material 1: <italic>Software and datasets</italic>. Supplementary Material 2: <italic>Long read scaffolding benchmark</italic>. Supplementary Material 3: <italic>Arabidopsis thaliana (Ler-0) and human (NA12878) hybrid genome assemblies</italic>. Supplementary Material 4: <italic>Illumina alignment benchmark</italic>. Supplementary Material 5: <italic>Illumina scaffolding benchmark</italic>. <bold>Tables</bold>: Supplementary Table S8 : <sc>Fast</sc>-SG<italic>recall at k-mer and read level on synthetic mate-pair libraries extracted from corrected or uncorrected long reads using the E. coli K12 dataset</italic>. Supplementary Table S9 : <italic>Long read datasets used for comparison against</italic><sc>Links</sc>. Supplementary Table S10: <italic>Number of k-mer pairs and read pairs extracted from raw long reads by</italic><sc>Links</sc><italic>and</italic><sc>Fast</sc>-SG. Supplementary Table S11 : <italic>Long read scaffolding benchmark results for E. coli K12 and S. cerevisiae W303</italic>. Supplementary Table&#x000a0;12 : <italic>Number of synthetic read pairs aligned to the</italic><sc>DiscovarDeNovo</sc><italic>assembly of Arabidopsis thaliana (Ler-0)</italic>. Supplementary Table&#x000a0;13 : <italic>Number of synthetic read pairs aligned to the human (NA12878)</italic><sc>DiscovarDeNovo</sc><italic>assembly</italic>. Supplementary Table S14 : <italic>Example (blue rows) of short contig skipped in chromosome 6</italic>. Supplementary Table S15 : <italic>Example (blue rows) of chimeric contigs in chromosome 6 from the</italic><sc>Canu</sc><italic>and</italic><sc>MaSuRCA</sc><italic>assemblies</italic>. Supplementary Table S16 : Short read alignment benchmark. <bold>Figures</bold>: Supplementary Fig. S1: <italic>Boxplot of synthetic libraries extracted by</italic><sc>Fast</sc>-SG<italic>(K21) from the PacBio reads to scaffold the Arabidopsis thaliana (Ler-0) genome</italic>. Supplementary Fig. S2: <italic>Boxplot of synthetic libraries extracted by</italic><sc>Fast</sc>-SG<italic>(K22) from the ONT ultra-long reads to scaffold the human (NA12878) genome</italic>. Supplementary Fig. S3: <italic>Amount of bases involved in structural errors by type in the Arabidopsis thaliana (Ler-0) assemblies</italic>. Supplementary Fig. S4: <sc>Nucmer</sc><italic>plots of the human (NA12878) assemblies</italic>. Supplementary Fig. S5: <italic>Percentage of paired-end reads aligned by</italic><sc>Fast</sc>-SG<italic>and the short read aligners for each Illumina dataset</italic>. Supplementary Fig. S6: <italic>Pairwise contig read coverage correlation between the short read aligners and</italic><sc>Fast</sc>-SG. (PDF 2.5 Mb).</p><p>
<bold>Additional file 2:</bold> The Supplementary_Table_S17.xlsx file contains the Illumina scaffolding benchmark results for <italic>S. aureus</italic> using the <sc>ScaffMatch</sc>, <sc>Opera</sc>-LG, <sc>Besst2</sc> and <sc>Boss</sc> scaffolders. (XLSX 56 Kb).</p><p>
<bold>Additional file 3:</bold> The Supplementary_Table_S18.xlsx file contains the Illumina scaffolding benchmark results for <italic>R. sphaeroides</italic> using the <sc>ScaffMatch</sc>, <sc>Opera</sc>-LG, <sc>Besst2</sc> and <sc>Boss</sc> scaffolders. (XLSX 85 Kb).</p><p>
<bold>Additional file 4:</bold> The Supplementary_Table_S19.xlsx file contains the Illumina scaffolding benchmark results for <italic>P. falciparum</italic> using the <sc>ScaffMatch</sc>, <sc>Opera</sc>-LG, <sc>Besst2</sc> and <sc>Boss</sc> scaffolders. (XLSX 132 Kb).</p><p>
<bold>Additional file 5:</bold> The Supplementary_Table_S20.xlsx file contains the Illumina scaffolding benchmark results for <italic>H. sapiens</italic> using the <sc>ScaffMatch</sc>, <sc>Opera</sc>-LG, <sc>Besst2</sc> and <sc>Boss</sc> scaffolders. (XLSX 101 Kb).</p></sec><sec id="sec6"><title>Abbreviations</title><p>CPU: central processing unit; DFS: DiscovarDeNovo+Fast-SG+ScaffMatch; MPHF: minimal perfect hash function; ONT: Oxford Nanopore; PacBio: Pacific Biosciences; PD: probabilistic dictionary; SAM: sequence alignment/map; BAC: bacterial artificial chromosome; PCR: polymerase chain reaction; SRA: Sequence Read Archive; ENA: European Nucleotide Archive.</p></sec><sec id="sec7"><title>Competing interests</title><p>The authors declare that they have no competing interests.</p></sec><sec id="sec8"><title>Funding</title><p>This work was supported by the Conicyt-PIA Concurso AFB 170001, Fondap 150900007, MAIA STIC-AmSud and CONICYT PFCHA/BECA DOCTORADO NACIONAL 2014/FOLIO 21140124 granted to A.D.G. This research was partially supported by the supercomputing infrastructure of the NLHPC (ECM-02) and ANR-16-CE23-0001 (ASTER) project.</p></sec><sec id="sec9"><title>Author Contributions</title><p>M.F.S. proposed the scaffolding problem. A.D.G. devised the original ideas for <sc>Fast</sc>-SG. A.D.G. developed, implemented, and tested <sc>Fast</sc>-SG. M.F.S., G.R.A., and A.M. provided helpful discussions and guidance for the project. A.D.G. wrote the initial version of the manuscript. M.F.S. improved the initial version of the manuscript. M.F.S., G.R.A., and A.M. revised the manuscript. All authors read the paper and approved the final version.</p></sec><sec sec-type="supplementary-material"><title>Supplementary Material</title><supplementary-material content-type="local-data" id="sup1"><label>GIGA-D-17-00335_Original_Submission.pdf</label><media xlink:href="giy048_giga-d-17-00335_original_submission.pdf"><caption><p>Click here for additional data file.</p></caption></media></supplementary-material><supplementary-material content-type="local-data" id="sup2"><label>GIGA-D-17-00335_Revision-1.pdf</label><media xlink:href="giy048_giga-d-17-00335_revision-1.pdf"><caption><p>Click here for additional data file.</p></caption></media></supplementary-material><supplementary-material content-type="local-data" id="sup3"><label>GIGA-D-17-00335_Revision-2.pdf</label><media xlink:href="giy048_giga-d-17-00335_revision-2.pdf"><caption><p>Click here for additional data file.</p></caption></media></supplementary-material><supplementary-material content-type="local-data" id="sup4"><label>Response-to-Reviewer-Comments_Original-Submission.pdf</label><media xlink:href="giy048_response-to-reviewer-comments_original-submission.pdf"><caption><p>Click here for additional data file.</p></caption></media></supplementary-material><supplementary-material content-type="local-data" id="sup5"><label>Response-to-Reviewer-Comments_Revision-1.pdf</label><media xlink:href="giy048_response-to-reviewer-comments_revision-1.pdf"><caption><p>Click here for additional data file.</p></caption></media></supplementary-material><supplementary-material content-type="local-data" id="sup6"><label>Reviewer-1-Report-(Original-Submission) -- Sagar Utturkar</label><caption><p>21 Dec 2017 Reviewed</p></caption><media xlink:href="giy048_reviewer-1-report-(original-submission).pdf"><caption><p>Click here for additional data file.</p></caption></media></supplementary-material><supplementary-material content-type="local-data" id="sup7"><label>Reviewer-1-Report-(Revision-1) -- Sagar Utturkar</label><caption><p>15 Mar 2018 Reviewed</p></caption><media xlink:href="giy048_reviewer-1-report-(revision-1).pdf"><caption><p>Click here for additional data file.</p></caption></media></supplementary-material><supplementary-material content-type="local-data" id="sup8"><label>Reviewer-2-Report-(Original-Submission) -- Daniela Puiu</label><caption><p>25 Dec 2017 Reviewed</p></caption><media xlink:href="giy048_reviewer-2-report-(original-submission).pdf"><caption><p>Click here for additional data file.</p></caption></media></supplementary-material><supplementary-material content-type="local-data" id="sup9"><label>Supplement materials</label><media xlink:href="giy048_supp.zip"><caption><p>Click here for additional data file.</p></caption></media></supplementary-material></sec></body><back><ref-list><title>References</title><ref id="bib1"><label>1.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Pop</surname><given-names>M</given-names></name></person-group>
<article-title>Genome assembly reborn: recent computational challenges</article-title>. <source>Briefings in Bioinformatics</source>. <year>2009</year>;<volume>10</volume>(<issue>4</issue>):<fpage>354</fpage>&#x02013;<lpage>366</lpage>.<pub-id pub-id-type="pmid">19482960</pub-id></mixed-citation></ref><ref id="bib2"><label>2.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Treangen</surname><given-names>TJ</given-names></name>, <name name-style="western"><surname>Salzberg</surname><given-names>SL</given-names></name></person-group>
<article-title>Repetitive DNA and next-generation sequencing: computational challenges and solutions</article-title>. <source>Nat Rev Genetics</source>. <year>2011</year>;<volume>13</volume>(<issue>1</issue>):<fpage>36</fpage>&#x02013;<lpage>46</lpage>.<pub-id pub-id-type="pmid">22124482</pub-id></mixed-citation></ref><ref id="bib3"><label>3.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Hunt</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Newbold</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Berriman</surname><given-names>M</given-names></name>, <etal/></person-group>
<article-title>A comprehensive evaluation of assembly scaffolding tools</article-title>. <source>Genome Biology</source>. <year>2014</year>;<volume>15</volume>:<fpage>R42</fpage>.<pub-id pub-id-type="pmid">24581555</pub-id></mixed-citation></ref><ref id="bib4"><label>4.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Koren</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Walenz</surname><given-names>BP</given-names></name>, <name name-style="western"><surname>Berlin</surname><given-names>K</given-names></name>, <etal/></person-group>
<article-title>Canu: scalable and accurate long-read assembly via adaptive k-mer weighting and repeat separation</article-title>. <source>Genome Res</source>. <year>2017</year>;<volume>27</volume>(<issue>5</issue>):<fpage>722</fpage>&#x02013;<lpage>736</lpage>.<pub-id pub-id-type="pmid">28298431</pub-id></mixed-citation></ref><ref id="bib5"><label>5.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Kececioglu</surname><given-names>JD</given-names></name>, <name name-style="western"><surname>Myers</surname><given-names>EW</given-names></name></person-group>
<article-title>Combinatorial algorithms for DNA sequence assembly</article-title>. <source>Algorithmica</source>. <year>1995</year>;<volume>13</volume>(<issue>1-2</issue>):<fpage>7</fpage>.</mixed-citation></ref><ref id="bib6"><label>6.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Pevzner</surname><given-names>PA</given-names></name>, <name name-style="western"><surname>Tang</surname><given-names>H</given-names></name>, <name name-style="western"><surname>Waterman</surname><given-names>MS</given-names></name></person-group>
<article-title>An Eulerian path approach to DNA fragment assembly</article-title>. <source>Proc Nat Acad Sci</source>. <year>2001</year>;<volume>98</volume>(<issue>17</issue>):<fpage>9748</fpage>&#x02013;<lpage>9753</lpage>.<pub-id pub-id-type="pmid">11504945</pub-id></mixed-citation></ref><ref id="bib7"><label>7.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Huson</surname><given-names>DH</given-names></name>, <name name-style="western"><surname>Reinert</surname><given-names>K</given-names></name>, <name name-style="western"><surname>Myers</surname><given-names>EW</given-names></name></person-group>
<article-title>The greedy path-merging algorithm for contig scaffolding</article-title>. <source>J ACM</source>. <year>2002</year>;<volume>49</volume>(<issue>5</issue>):<fpage>603</fpage>&#x02013;<lpage>615</lpage>.</mixed-citation></ref><ref id="bib8"><label>8.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Langmead</surname><given-names>B</given-names></name>, <name name-style="western"><surname>Trapnell</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Pop</surname><given-names>M</given-names></name>, <etal/></person-group>
<article-title>Ultrafast and memory-efficient alignment of short DNA sequences to the human genome</article-title>. <source>Genome Biology</source>. <year>2009</year>;<volume>10</volume>:<fpage>R25</fpage>.<pub-id pub-id-type="pmid">19261174</pub-id></mixed-citation></ref><ref id="bib9"><label>9.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Li</surname><given-names>H</given-names></name>, <name name-style="western"><surname>Durbin</surname><given-names>R</given-names></name></person-group>
<article-title>Fast and accurate short read alignment with Burrows-Wheeler transform</article-title>. <source>Bioinformatics (Oxford, England)</source>. <year>2009</year>;<volume>25</volume>(<issue>14</issue>):<fpage>1754</fpage>&#x02013;<lpage>1760</lpage>.</mixed-citation></ref><ref id="bib10"><label>10.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Langmead</surname><given-names>B</given-names></name>, <name name-style="western"><surname>Salzberg</surname><given-names>SL</given-names></name></person-group>
<article-title>Fast gapped-read alignment with Bowtie 2</article-title>. <source>Nat Methods</source>. <year>2012</year>;<volume>9</volume>(<issue>4</issue>):<fpage>357</fpage>&#x02013;<lpage>359</lpage>.<pub-id pub-id-type="pmid">22388286</pub-id></mixed-citation></ref><ref id="bib11"><label>11.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Gao</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Bertrand</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Chia</surname><given-names>BKH</given-names></name>, <name name-style="western"><surname>Nagarajan</surname><given-names>N</given-names></name></person-group>
<article-title>OPERA-LG: efficient and exact scaffolding of large, repeat-rich eukaryotic genomes with performance guarantees</article-title>. <source>Genome Biology</source>. <year>2016</year>;<volume>17</volume>:<fpage>102</fpage>.<pub-id pub-id-type="pmid">27169502</pub-id></mixed-citation></ref><ref id="bib12"><label>12.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Sahlin</surname><given-names>K</given-names></name>, <name name-style="western"><surname>Chikhi</surname><given-names>R</given-names></name>, <name name-style="western"><surname>Arvestad</surname><given-names>L</given-names></name></person-group>
<article-title>Assembly scaffolding with PE-contaminated mate-pair libraries</article-title>. <source>Bioinformatics (Oxford, England)</source>. <year>2016</year>;<volume>32</volume>(<issue>13)</issue>:<fpage>1925</fpage>&#x02013;<lpage>1932</lpage>.</mixed-citation></ref><ref id="bib13"><label>13.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Mandric</surname><given-names>I</given-names></name>, <name name-style="western"><surname>Zelikovsky</surname><given-names>A</given-names></name></person-group>
<article-title>ScaffMatch: scaffolding algorithm based on maximum weight matching</article-title>. <source>Bioinformatics (Oxford, England)</source>. <year>2015</year>;<volume>31</volume>(<issue>16</issue>):<fpage>2632</fpage>&#x02013;<lpage>2638</lpage>.</mixed-citation></ref><ref id="bib14"><label>14.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Luo</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Wang</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Zhang</surname><given-names>Z</given-names></name><etal/></person-group>
<article-title>BOSS: a novel scaffolding algorithm based on an optimized scaffold graph</article-title>. <source>Bioinformatics (Oxford, England)</source>. <year>2017</year>;<volume>33</volume>(<issue>2</issue>):<fpage>169</fpage>&#x02013;<lpage>176</lpage>.</mixed-citation></ref><ref id="bib15"><label>15.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Roberts</surname><given-names>RJ</given-names></name>, <name name-style="western"><surname>Carneiro</surname><given-names>MO</given-names></name>, <name name-style="western"><surname>Schatz</surname><given-names>MC</given-names></name></person-group>
<article-title>The advantages of SMRT sequencing</article-title>. <source>Genome Biology</source>. <year>2013</year>;<volume>14</volume>(<issue>7</issue>):<fpage>405</fpage>.<pub-id pub-id-type="pmid">23822731</pub-id></mixed-citation></ref><ref id="bib16"><label>16.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Chin</surname><given-names>CS</given-names></name>, <name name-style="western"><surname>Alexander</surname><given-names>DH</given-names></name>, <name name-style="western"><surname>Marks</surname><given-names>P</given-names></name>, <etal/></person-group>
<article-title>Nonhybrid, finished microbial genome assemblies from long-read SMRT sequencing data</article-title>. <source>Nat Met</source>. <year>2013</year>;<volume>10</volume>(<issue>6</issue>):<fpage>563</fpage>&#x02013;<lpage>569</lpage>.</mixed-citation></ref><ref id="bib17"><label>17.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Jain</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Koren</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Quick</surname><given-names>J</given-names></name>, <etal/></person-group>
<article-title>Nanopore sequencing and assembly of a human genome with ultra-long reads</article-title>. <source>Nature Biotechnology</source>. <year>2018</year>;.</mixed-citation></ref><ref id="bib18"><label>18.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Jarvis</surname><given-names>DE</given-names></name>, <name name-style="western"><surname>Ho</surname><given-names>YS</given-names></name>, <name name-style="western"><surname>Lightfoot</surname><given-names>DJ</given-names></name><etal/></person-group>
<article-title>The genome of <italic>Chenopodium quinoa</italic></article-title>. <source>Nature</source>. <year>2017</year>;<volume>542</volume>(<issue>7641</issue>):<fpage>307</fpage>&#x02013;<lpage>312</lpage>.<pub-id pub-id-type="pmid">28178233</pub-id></mixed-citation></ref><ref id="bib19"><label>19.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Seo</surname><given-names>JS</given-names></name>, <name name-style="western"><surname>Rhie</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Kim</surname><given-names>J</given-names></name>, <etal/></person-group>
<article-title>De novo assembly and phasing of a Korean human genome</article-title>. <source>Nature</source>. <year>2016</year>;<volume>538</volume>(<issue>7624</issue>):<fpage>243</fpage>&#x02013;<lpage>247</lpage>.<pub-id pub-id-type="pmid">27706134</pub-id></mixed-citation></ref><ref id="bib20"><label>20.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Putnam</surname><given-names>NH</given-names></name>, <name name-style="western"><surname>O&#x02019;Connell</surname><given-names>BL</given-names></name>, <name name-style="western"><surname>Stites</surname><given-names>JC</given-names></name><etal/></person-group>
<article-title>Chromosome-scale shotgun assembly using an in vitro method for long-range linkage</article-title>. <source>Genome Res</source>. <year>2016</year>, <volume>26</volume>, <issue>3</issue>, <fpage>342</fpage>&#x02013;<lpage>350</lpage>.<pub-id pub-id-type="pmid">26848124</pub-id></mixed-citation></ref><ref id="bib21"><label>21.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Zheng</surname><given-names>GXY</given-names></name>, <name name-style="western"><surname>Lau</surname><given-names>BT</given-names></name>, <name name-style="western"><surname>Schnall-Levin</surname><given-names>M</given-names></name>, <etal/></person-group>
<article-title>Haplotyping germline and cancer genomes with high-throughput linked-read sequencing</article-title>. <source>Nat Biotechnology</source>. <year>2016</year>;<volume>34</volume>(<issue>3</issue>):<fpage>303</fpage>&#x02013;<lpage>311</lpage>.</mixed-citation></ref><ref id="bib22"><label>22.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Weisenfeld</surname><given-names>NI</given-names></name>, <name name-style="western"><surname>Kumar</surname><given-names>V</given-names></name>, <name name-style="western"><surname>Shah</surname><given-names>P</given-names></name><etal/></person-group>
<article-title>Direct determination of diploid genome sequences</article-title>. <source>Genome Res</source>. <year>2017</year>, <volume>27</volume>, <issue>(5)</issue>, <fpage>757</fpage>&#x02013;<lpage>767</lpage>.<pub-id pub-id-type="pmid">28381613</pub-id></mixed-citation></ref><ref id="bib23"><label>23.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Williams</surname><given-names>LJS</given-names></name>, <name name-style="western"><surname>Tabbaa</surname><given-names>DG</given-names></name>, <name name-style="western"><surname>Li</surname><given-names>N</given-names></name><etal/></person-group>
<article-title>Paired-end sequencing of Fosmid libraries by Illumina</article-title>. <source>Genome Res</source>. <year>2012</year>;<volume>22</volume>(<issue>11</issue>):<fpage>2241</fpage>&#x02013;<lpage>2249</lpage>.<pub-id pub-id-type="pmid">22800726</pub-id></mixed-citation></ref><ref id="bib24"><label>24.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Wu</surname><given-names>CC</given-names></name>, <name name-style="western"><surname>Ye</surname><given-names>R</given-names></name>, <name name-style="western"><surname>Jasinovica</surname><given-names>S</given-names></name>, <etal/></person-group>
<article-title>Long-span, mate-pair scaffolding and other methods for faster next-generation sequencing library creation</article-title>. <source>Nat Met</source>. <year>2012</year>;<volume>9</volume>(<issue>9</issue>).</mixed-citation></ref><ref id="bib25"><label>25.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Vinga</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Almeida</surname><given-names>J</given-names></name></person-group>
<article-title>Alignment-free sequence comparison-a review</article-title>. <source>Bioinformatics</source>. <year>2003</year>;<volume>19</volume>(<issue>4</issue>):<fpage>513</fpage>&#x02013;<lpage>523</lpage>.<pub-id pub-id-type="pmid">12611807</pub-id></mixed-citation></ref><ref id="bib26"><label>26.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Salzberg</surname><given-names>SL</given-names></name>, <name name-style="western"><surname>Phillippy</surname><given-names>AM</given-names></name>, <name name-style="western"><surname>Zimin</surname><given-names>A</given-names></name><etal/></person-group>
<article-title>GAGE: a critical evaluation of genome assemblies and assembly algorithms</article-title>. <source>Genome Res</source>. <year>2011</year> Dec.</mixed-citation></ref><ref id="bib27"><label>27.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Limasset</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Rizk</surname><given-names>G</given-names></name>, <name name-style="western"><surname>Chikhi</surname><given-names>R</given-names></name>, <etal/></person-group>
<source>Fast and scalable minimal perfect hashing for massive key sets</source>. <comment>arXiv:170203154 [cs]</comment>
<year>2017</year> Feb;<comment>ArXiv: 1702.03154</comment>.</mixed-citation></ref><ref id="bib28"><label>28.</label><mixed-citation publication-type="other">
<person-group person-group-type="author"><name name-style="western"><surname>Marchet</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Lecompte</surname><given-names>L</given-names></name>, <name name-style="western"><surname>Limasset</surname><given-names>A</given-names></name>, <etal/></person-group>
<source>A resource-frugal probabilistic dictionary and applications in bioinformatics</source>. <comment>arXiv:170300667 [cs, q-bio]</comment>
<year>2017</year> Mar;<comment>ArXiv: 1703.00667</comment>.</mixed-citation></ref><ref id="bib29"><label>29.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Kokot</surname><given-names>M</given-names></name>, <name name-style="western"><surname>D&#x00142;ugosz</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Deorowicz</surname><given-names>S</given-names></name></person-group>
<article-title>KMC 3: counting and manipulating k-mer statistics</article-title>. <source>Bioinformatics</source>. <year>2017</year>, <volume>33</volume>, <issue>17</issue>, <fpage>2759</fpage>&#x02013;<lpage>2761</lpage>.<pub-id pub-id-type="pmid">28472236</pub-id></mixed-citation></ref><ref id="bib30"><label>30.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Karp</surname><given-names>RM</given-names></name>, <name name-style="western"><surname>Rabin</surname><given-names>MO</given-names></name></person-group>
<article-title>Efficient randomized pattern-matching algorithms</article-title>. <source>IBM Journal of Research and Development</source>. <year>1987</year>;<volume>31</volume>(<issue>2</issue>):<fpage>249</fpage>&#x02013;<lpage>260</lpage>.</mixed-citation></ref><ref id="bib31"><label>31.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Mohamadi</surname><given-names>H</given-names></name>, <name name-style="western"><surname>Chu</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Vandervalk</surname><given-names>BP</given-names></name><etal/></person-group>
<article-title>ntHash: recursive nucleotide hashing</article-title>. <source>Bioinformatics</source>. <year>2016</year>;<volume>32</volume>(<issue>22</issue>):<fpage>3492</fpage>&#x02013;<lpage>3494</lpage>.<pub-id pub-id-type="pmid">27423894</pub-id></mixed-citation></ref><ref id="bib32"><label>32.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Ning</surname><given-names>Z</given-names></name>, <name name-style="western"><surname>Cox</surname><given-names>AJ</given-names></name>, <name name-style="western"><surname>Mullikin</surname><given-names>JC</given-names></name></person-group>
<article-title>SSAHA: a fast search method for large DNA databases</article-title>. <source>Genome Res</source>. <year>2001</year>;<volume>11</volume>(<issue>10</issue>):<fpage>1725</fpage>&#x02013;<lpage>1729</lpage>.<pub-id pub-id-type="pmid">11591649</pub-id></mixed-citation></ref><ref id="bib33"><label>33.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Salmela</surname><given-names>L</given-names></name>, <name name-style="western"><surname>Rivals</surname><given-names>E</given-names></name></person-group>
<article-title>LoRDEC: accurate and efficient long read error correction</article-title>. <source>Bioinformatics</source>. <year>2014</year>;<volume>30</volume>(<issue>24</issue>):<fpage>3506</fpage>&#x02013;<lpage>3514</lpage>.<pub-id pub-id-type="pmid">25165095</pub-id></mixed-citation></ref><ref id="bib34"><label>34.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Zimin</surname><given-names>AV</given-names></name>, <name name-style="western"><surname>Puiu</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Luo</surname><given-names>MC</given-names></name><etal/></person-group>
<article-title>Hybrid assembly of the large and highly repetitive genome of <italic>Aegilops tauschii</italic>, a progenitor of bread wheat, with the mega-reads algorithm</article-title>. <source>Genome Res</source>. <year>2017</year>;<comment>gr.213405.116</comment>.</mixed-citation></ref><ref id="bib35"><label>35.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Li</surname><given-names>H</given-names></name>, <name name-style="western"><surname>Handsaker</surname><given-names>B</given-names></name>, <name name-style="western"><surname>Wysoker</surname><given-names>A</given-names></name><etal/></person-group>
<article-title>The Sequence Alignment/Map format and SAMtools</article-title>. <source>Bioinformatics (Oxford, England)</source>. <year>2009</year>;<volume>25</volume>(<issue>16</issue>):<fpage>2078</fpage>&#x02013;<lpage>2079</lpage>.</mixed-citation></ref><ref id="bib36"><label>36.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Li</surname><given-names>H</given-names></name></person-group>
<article-title>Aligning sequence reads, clone sequences and assembly contigs with BWA-MEM</article-title>. <comment>arXiv:13033997 [q-bio]</comment>
<year>2013</year> Mar;<comment>ArXiv: 1303.3997</comment>.</mixed-citation></ref><ref id="bib37"><label>37.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Weisenfeld</surname><given-names>NI</given-names></name>, <name name-style="western"><surname>Yin</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Sharpe</surname><given-names>T</given-names></name>, <etal/></person-group>
<article-title>Comprehensive variation discovery in single human genomes</article-title>. <source>Nat Genetics</source>. <year>2014</year>;<volume>46</volume>(<issue>12</issue>):<fpage>1350</fpage>&#x02013;<lpage>1355</lpage>.<pub-id pub-id-type="pmid">25326702</pub-id></mixed-citation></ref><ref id="bib38"><label>38.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Kurtz</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Phillippy</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Delcher</surname><given-names>AL</given-names></name>, <etal/></person-group>
<article-title>Versatile and open software for comparing large genomes</article-title>. <source>Genome Biology</source>. <year>2004</year>;<volume>5</volume>(<issue>2</issue>):<comment>R12</comment>.</mixed-citation></ref><ref id="bib39"><label>39.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Warren</surname><given-names>RL</given-names></name>, <name name-style="western"><surname>Yang</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Vandervalk</surname><given-names>BP</given-names></name>, <etal/></person-group>
<article-title>LINKS: scalable, alignment-free scaffolding of draft genomes with long reads</article-title>. <source>GigaScience</source>. <year>2015</year>; <volume>4</volume>:<fpage>35</fpage>.<pub-id pub-id-type="pmid">26244089</pub-id></mixed-citation></ref><ref id="bib40"><label>40.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Schneider</surname><given-names>VA</given-names></name>, <name name-style="western"><surname>Graves-Lindsay</surname><given-names>T</given-names></name>, <name name-style="western"><surname>Howe</surname><given-names>K</given-names></name>, <etal/></person-group>
<article-title>Evaluation of GRCh38 and de novo haploid genome assemblies demonstrates the enduring quality of the reference assembly</article-title>. <source>Genome Res</source>. <year>2017</year>;<volume>27</volume>(<issue>5</issue>):<fpage>849</fpage>&#x02013;<lpage>864</lpage>.<pub-id pub-id-type="pmid">28396521</pub-id></mixed-citation></ref><ref id="bib41"><label>41.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Bankevich</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Nurk</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Antipov</surname><given-names>D</given-names></name><etal/></person-group>
<article-title>SPAdes: a new genome assembly algorithm and its applications to single-cell sequencing</article-title>. <source>Journal of Computational Biology</source>. <year>2012</year>; <volume>19</volume>(<issue>5</issue>):<fpage>455</fpage>&#x02013;<lpage>477</lpage>.<pub-id pub-id-type="pmid">22506599</pub-id></mixed-citation></ref><ref id="bib42"><label>42.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Jackman</surname><given-names>SD</given-names></name>, <name name-style="western"><surname>Vandervalk</surname><given-names>BP</given-names></name>, <name name-style="western"><surname>Mohamadi</surname><given-names>H</given-names></name><etal/></person-group>
<article-title>ABySS 2.0: resource-efficient assembly of large genomes using a Bloom filter</article-title>. <source>Genome Res</source>. <year>2017</year>; <volume>27</volume>(<issue>5</issue>):<fpage>768</fpage>&#x02013;<lpage>777</lpage>.<pub-id pub-id-type="pmid">28232478</pub-id></mixed-citation></ref><ref id="bib43"><label>43.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Myers</surname><given-names>EW</given-names></name>, <name name-style="western"><surname>Sutton</surname><given-names>GG</given-names></name>, <name name-style="western"><surname>Delcher</surname><given-names>AL</given-names></name><etal/></person-group>
<article-title>A whole-genome assembly of Drosophila</article-title>. <source>Science</source>. <year>2000</year>; <volume>287</volume>(<issue>5461</issue>):<fpage>2196</fpage>&#x02013;<lpage>2204</lpage>.<pub-id pub-id-type="pmid">10731133</pub-id></mixed-citation></ref><ref id="bib44"><label>44.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Gnerre</surname><given-names>S</given-names></name>, <name name-style="western"><surname>MacCallum</surname><given-names>I</given-names></name>, <name name-style="western"><surname>Przybylski</surname><given-names>D</given-names></name>, <etal/></person-group>
<article-title>High-quality draft assemblies of mammalian genomes from massively parallel sequence data</article-title>. <source>Proc Nat Acad Sci</source>. <year>2011</year>; <volume>108</volume>(<issue>4</issue>):<fpage>1513</fpage>&#x02013;<lpage>1518</lpage>.<pub-id pub-id-type="pmid">21187386</pub-id></mixed-citation></ref><ref id="bib45"><label>45.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>&#x00160;o&#x00161;i&#x00107;</surname><given-names>M</given-names></name>, <name name-style="western"><surname>&#x00160;iki&#x00107;</surname><given-names>M</given-names></name></person-group>
<article-title>Edlib: a C/C++ library for fast, exact sequence alignment using edit distance</article-title>. <source>Bioinformatics (Oxford, England)</source>. <year>2017</year>, <volume>33</volume>, (<issue>9</issue>), <fpage>1394</fpage>&#x02013;<lpage>1395</lpage>.</mixed-citation></ref><ref id="bib46"><label>46.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Lee</surname><given-names>C</given-names></name></person-group>
<article-title>Generating consensus sequences from partial order multiple sequence alignment graphs</article-title>. <source>Bioinformatics</source>. <year>2003</year>;<volume>19</volume>(<issue>8</issue>):<fpage>999</fpage>&#x02013;<lpage>1008</lpage>.<pub-id pub-id-type="pmid">12761063</pub-id></mixed-citation></ref><ref id="bib47"><label>47.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Di&#x000a0;Genova</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Ruz</surname><given-names>GA</given-names></name>, <name name-style="western"><surname>Sagot</surname><given-names>MF</given-names></name><etal/></person-group>
<article-title>Software and supporting data for &#x0201d;Fast-SG: An alignment-free algorithm for hybrid assembly&#x0201d;</article-title>. <source>GigaScience Database</source>, <year>2018</year>;<comment><ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.5524/100437">http://dx.doi.org/10.5524/100437</ext-link></comment>.</mixed-citation></ref><ref id="bib48"><label>48.</label><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Walker</surname><given-names>BJ</given-names></name>, <name name-style="western"><surname>Abeel</surname><given-names>T</given-names></name>, <name name-style="western"><surname>Shea</surname><given-names>T</given-names></name>, <etal/></person-group>
<article-title>Pilon: an integrated tool for comprehensive microbial variant detection and genome assembly improvement</article-title>. <source>PLoS ONE</source>. <year>2014</year>;<volume>9</volume>(<issue>11</issue>).</mixed-citation></ref><ref id="bib49_752_1527067309568"><label>49</label><mixed-citation publication-type="journal">
<source>The MaSurCA Genome Assembler</source>, <comment><ext-link ext-link-type="uri" xlink:href="http://masurca.blogspot.cl/2017/06/masurca-assembly-of-na12878-low.html">http://masurca.blogspot.cl/2017/06/masurca-assembly-of-na12878-low.html</ext-link></comment>, <comment>Accessed 12 July 2017.</comment></mixed-citation></ref><ref id="bib50_901_1527068360664"><label>50</label><mixed-citation publication-type="journal">
<source>The Fast-SG wiki</source>, <comment><ext-link ext-link-type="uri" xlink:href="https://github.com/adigenova/fast-sg/wiki/Hybrid-scaffolding-of-NA12878">https://github.com/adigenova/fast-sg/wiki/Hybrid-scaffolding-of-NA12878</ext-link></comment>, <comment>Accessed 16 December 2017</comment>.</mixed-citation></ref></ref-list></back></article>