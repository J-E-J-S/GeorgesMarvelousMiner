<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD with MathML3 v1.2 20190208//EN" "JATS-archivearticle1-mathml3.dtd"> 
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article"><?properties open_access?><?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?><?DTDIdentifier.IdentifierType public?><?SourceDTD.DTDName A++V2.4.dtd?><?SourceDTD.Version 2.4?><?ConverterInfo.XSLTName springer2nlmx2.xsl?><?ConverterInfo.Version 1?><front><journal-meta><journal-id journal-id-type="nlm-ta">Sci Rep</journal-id><journal-id journal-id-type="iso-abbrev">Sci Rep</journal-id><journal-title-group><journal-title>Scientific Reports</journal-title></journal-title-group><issn pub-type="epub">2045-2322</issn><publisher><publisher-name>Nature Publishing Group UK</publisher-name><publisher-loc>London</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmcid">6884647</article-id><article-id pub-id-type="publisher-id">54405</article-id><article-id pub-id-type="doi">10.1038/s41598-019-54405-6</article-id><article-categories><subj-group subj-group-type="heading"><subject>Article</subject></subj-group></article-categories><title-group><article-title>NNTox: Gene Ontology-Based Protein Toxicity Prediction Using Neural Network</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Jain</surname><given-names>Aashish</given-names></name><xref ref-type="aff" rid="Aff1">1</xref></contrib><contrib contrib-type="author" corresp="yes"><contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-4091-6614</contrib-id><name><surname>Kihara</surname><given-names>Daisuke</given-names></name><address><email>dkihara@purdue.edu</email></address><xref ref-type="aff" rid="Aff1">1</xref><xref ref-type="aff" rid="Aff2">2</xref><xref ref-type="aff" rid="Aff3">3</xref></contrib><aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 1937 2197</institution-id><institution-id institution-id-type="GRID">grid.169077.e</institution-id><institution>Department of Computer Science, </institution><institution>Purdue University, </institution></institution-wrap>West Lafayette, IN 47907 USA </aff><aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 1937 2197</institution-id><institution-id institution-id-type="GRID">grid.169077.e</institution-id><institution>Department of Biological Sciences, </institution><institution>Purdue University, </institution></institution-wrap>West Lafayette, IN 47907 USA </aff><aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 2179 9593</institution-id><institution-id institution-id-type="GRID">grid.24827.3b</institution-id><institution>Department of Pediatrics, </institution><institution>University of Cincinnati, </institution></institution-wrap>Cincinnati, OH 45229 USA </aff></contrib-group><pub-date pub-type="epub"><day>29</day><month>11</month><year>2019</year></pub-date><pub-date pub-type="pmc-release"><day>29</day><month>11</month><year>2019</year></pub-date><pub-date pub-type="collection"><year>2019</year></pub-date><volume>9</volume><elocation-id>17923</elocation-id><history><date date-type="received"><day>8</day><month>7</month><year>2019</year></date><date date-type="accepted"><day>13</day><month>11</month><year>2019</year></date></history><permissions><copyright-statement>&#x000a9; The Author(s) 2019</copyright-statement><license license-type="OpenAccess"><license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The images or other third party material in this article are included in the article&#x02019;s Creative Commons license, unless indicated otherwise in a credit line to the material. If material is not included in the article&#x02019;s Creative Commons license and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this license, visit <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>.</license-p></license></permissions><abstract id="Abs1"><p id="Par1">With advancements in synthetic biology, the cost and the time needed for designing and synthesizing customized gene products have been steadily decreasing. Many research laboratories in academia as well as industry routinely create genetically engineered proteins as a part of their research activities. However, manipulation of protein sequences could result in unintentional production of toxic proteins. Therefore, being able to identify the toxicity of a protein before the synthesis would reduce the risk of potential hazards. Existing methods are too specific, which limits their application. Here, we extended general function prediction methods for predicting the toxicity of proteins. Protein function prediction methods have been actively studied in the bioinformatics community and have shown significant improvement over the last decade. We have previously developed successful function prediction methods, which were shown to be among top-performing methods in the community-wide functional annotation experiment, CAFA. Based on our function prediction method, we developed a neural network model, named NNTox, which uses predicted GO terms for a target protein to further predict the possibility of the protein being toxic. We have also developed a multi-label model, which can predict the specific toxicity type of the query sequence. Together, this work analyses the relationship between GO terms and protein toxicity and builds predictor models of protein toxicity.</p></abstract><kwd-group kwd-group-type="npg-subject"><title>Subject terms</title><kwd>Protein function predictions</kwd><kwd>Sequence annotation</kwd></kwd-group><funding-group><award-group><funding-source><institution-wrap><institution-id institution-id-type="FundRef">https://doi.org/10.13039/100000002</institution-id><institution>U.S. Department of Health &#x00026; Human Services | National Institutes of Health (NIH)</institution></institution-wrap></funding-source><award-id>R01GM123055</award-id><principal-award-recipient><name><surname>Kihara</surname><given-names>Daisuke</given-names></name></principal-award-recipient></award-group></funding-group><funding-group><award-group><funding-source><institution-wrap><institution-id institution-id-type="FundRef">https://doi.org/10.13039/100000001</institution-id><institution>National Science Foundation (NSF)</institution></institution-wrap></funding-source><award-id>DMS1614777</award-id><award-id>CMMI1825941</award-id><principal-award-recipient><name><surname>Kihara</surname><given-names>Daisuke</given-names></name></principal-award-recipient></award-group></funding-group><funding-group><award-group><funding-source><institution-wrap><institution-id institution-id-type="FundRef">https://doi.org/10.13039/100011039</institution-id><institution>ODNI | Intelligence Advanced Research Projects Activity (IARPA)</institution></institution-wrap></funding-source><award-id>W911NF-17-2-0105</award-id><principal-award-recipient><name><surname>Kihara</surname><given-names>Daisuke</given-names></name></principal-award-recipient></award-group></funding-group><custom-meta-group><custom-meta><meta-name>issue-copyright-statement</meta-name><meta-value>&#x000a9; The Author(s) 2019</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="Sec1" sec-type="introduction"><title>Introduction</title><p id="Par2">Proteins carry out various functions in a cell, forming functional networks and signaling pathways that are essential to sustain life. Understanding the function of component proteins in the networks is a fundamental step to obtain critical insights into complex cellular mechanisms. As a means to elucidate the function of a protein and the relationship between the function and the sequence or the structure of the protein, experimentally, it is common to construct mutants of the protein and test their function <italic>in vitro</italic> and <italic>in vivo</italic>. Advancements in synthetic biology<sup><xref ref-type="bibr" rid="CR1">1</xref>,<xref ref-type="bibr" rid="CR2">2</xref></sup> as well as protein design<sup><xref ref-type="bibr" rid="CR3">3</xref></sup> have made it now possible to construct artificial proteins that fold and assemble into desired structures and achieve specific tasks in a cell. Artificial protein synthesis has also revolutionized the biotechnology industry, where the technique has been used to program microbes to produce drugs at reduced production cost, to create disease-resistant crops that improve the yield, or to design new vaccines and therapeutic antibodies to cure diseases<sup><xref ref-type="bibr" rid="CR4">4</xref>&#x02013;<xref ref-type="bibr" rid="CR6">6</xref></sup>.</p><p id="Par3">While there are many applications of constructing desired artificial peptides and proteins, a potential problem is the production of harmful or toxic proteins. There are two scenarios where toxic proteins may be constructed: One situation would be that a newly designed protein happens to have an unexpected harmful function. There are many aspects of cell function that are still unclear, thus, foreseeing such side effects when designing a new protein may be very difficult. The second possible case would be an intentional design or release of toxic proteins for biological attack<sup><xref ref-type="bibr" rid="CR7">7</xref></sup>. To prevent release of toxic proteins, there are ongoing efforts to build systems and devices that collect unknown proteins or organisms together that identify proteins with potential harm<sup><xref ref-type="bibr" rid="CR8">8</xref>&#x02013;<xref ref-type="bibr" rid="CR11">11</xref></sup>. There is a strong demand for such systems for lab facilities of gene synthesis, places where many people gather, e.g. airports, and war zones where biological attack might occur.</p><p id="Par4">A computational algorithm for detecting toxic proteins should take a protein or DNA sequence as input and alerts if the protein can be harmful. ThreatSEQ developed by Battelle Memorial Institute identifies sequences of concern by comparing them with a curated database of known toxic proteins<sup><xref ref-type="bibr" rid="CR12">12</xref></sup>. ToxinPred<sup><xref ref-type="bibr" rid="CR13">13</xref></sup> and other series of methods developed by the Raghava group target detection of toxic bacterial peptides using machine learning methods based on sequence information<sup><xref ref-type="bibr" rid="CR14">14</xref>,<xref ref-type="bibr" rid="CR15">15</xref></sup>. ClanTox uses a machine learning method that was trained on known peptide ion-channel inhibitors<sup><xref ref-type="bibr" rid="CR16">16</xref></sup>. These methods are similar in approach in that they use sequence information. Moreover, the methods except for ThreatSEQ have a limited application to peptide toxins.</p><p id="Par5">In this paper, we present a new method, NNTox (Neural Network-based protein Toxicity prediction), which can predict the toxicity of a query protein sequence based on the protein&#x02019;s Gene Ontology (GO) annotation<sup><xref ref-type="bibr" rid="CR17">17</xref></sup>. GO is a controlled vocabulary of function of proteins and has been widely used for function annotation and prediction. Previously, our lab has developed a series of function prediction methods<sup><xref ref-type="bibr" rid="CR18">18</xref>,<xref ref-type="bibr" rid="CR19">19</xref></sup> including PFP<sup><xref ref-type="bibr" rid="CR20">20</xref>&#x02013;<xref ref-type="bibr" rid="CR22">22</xref></sup> and Phylo-PFP<sup><xref ref-type="bibr" rid="CR19">19</xref></sup>, which have been shown to be among the top-performing function prediction methods in the community-wide automatic function prediction experiment, Critical Assessment of protein Function Annotation (CAFA)<sup><xref ref-type="bibr" rid="CR23">23</xref>,<xref ref-type="bibr" rid="CR24">24</xref></sup>. Here, we show that the toxicity of proteins can be well predicted from GO terms that are predicted by PFP. First, we examined the distribution of GO terms in annotations of toxic proteins and showed that GO terms are promising features for predicting toxicity. Next, we developed a neural network for predicting protein&#x02019;s toxicity from their GO term annotations. Finally, we further extended the method to predict&#x000a0;the mode of action of toxicity of a protein.</p></sec><sec id="Sec2"><title>Methods</title><p id="Par6">First, we will describe the datasets used in this study. Then, we explain the neural network model of NNTox.</p><sec id="Sec3"><title>Toxic protein dataset</title><p id="Par7">Toxin proteins were collected from the UniProtKB-SwissProt database<sup><xref ref-type="bibr" rid="CR25">25</xref></sup> using the keyword &#x0201c;Toxin&#x0201d; (UniProtKB KW-0800). A total of 6,497 toxin proteins were obtained. From the 6,497 toxin proteins, we collected a set of 1,506 unique GO terms that were included in their GO annotations. The GO term of &#x0201c;toxin activity&#x0201d; (GO:0090729) was removed from the collection because this term obviously related to toxicity and can bias prediction if it is included in the annotation of proteins in the training and testing set for the toxicity prediction. From this toxin protein set, we removed proteins that were redundant to other proteins in terms of their GO term annotations. We did not use sequence similarity for the redundancy criterion because the input to our model is GO terms. The non-redundant dataset contained 488 toxin proteins.</p><p id="Par8">Non-toxin proteins were also collected from UniProtKB SwissProt using the following two conditions: (1), they are not tagged with the keyword &#x0201c;Toxin&#x0201d;. (2), 95% of GO terms annotating the protein belong to the toxin GO term set. The second criterion makes most of the GO term annotation of toxin and non-toxin proteins very similar. Using this approach 82,583 non-toxin proteins were obtained. Then, as was done for the toxin protein dataset, proteins with redundant GO annotations were removed, which resulted in 6,594 non-toxin GO proteins.</p><p id="Par9">The Toxin keyword had 11 sub-classes, which were cardiotoxin (134/8), enterotoxin (94/12), neurotoxin (2744/100), ion channel impairing toxin (2429/74), myotoxin (121/22), dermonecrotic toxin (148/4), hemostasis impairing toxin (865/95), G-protein coupled receptor impairing toxin (186/33), complement system impairing toxin (160/6), cell adhesion impairing toxin (207/18), and viral exotoxin (9/4). The first number in the parentheses is the total number of proteins in the sub-class downloaded from UniProtKB-SwissProt while the second number is those in the non-redundant toxin proteins. Using this information, we compiled a dataset of the mode of action of the toxin proteins. Out of the 488 non-redundant toxin proteins, 270 proteins had information of the mode of action. A protein is assigned to multiple classes if it belongs to more than one sub-class keywords. Out of the 270 proteins, 173 proteins belong only to one sub-class, 88 proteins have two assigned sub-classes, and 9 have three sub-classes.</p></sec><sec id="Sec4"><title>Feature vector representing a protein</title><p id="Par10">A protein in the dataset is represented by a vector of 2,596 binary (1 or 0) values (except for the last position), which indicates existence of the particular GO term in its GO annotation. 2595 GO terms represents all the GO terms found in toxin proteins as well as general GO terms that frequently appear in UniProtKB database (concretely, all GO terms that annotate more than 1000 proteins). The last position of the vector represents the number of GO terms that are associated with the protein but are not present among the above 2,595 GO terms. Using only toxin GO terms in the feature vector limits the scope of GO terms that the network can see and using all (&#x0003e;35,000) will lead to spare features. As a middle ground, we added top background GO term in the feature vector as well.</p></sec><sec id="Sec5"><title>Neural network models</title><p id="Par11">We used a five-layer fully connected feedforward neural network for the toxin/non-toxin prediction (Fig.&#x000a0;<xref rid="Fig1" ref-type="fig">1</xref>). The input layer has 2,596 neurons representing the GO term feature vector. The input layer is connected to three hidden layers, each of which has 200 neurons. The last layer uses the softmax nonlinearity to convert the output into class probability, toxin and non-toxin. Neurons are connected with a sigmoidal activation function. The code is available at <ext-link ext-link-type="uri" xlink:href="http://www.github.com/kiharalab/NNTox">http://www.github.com/kiharalab/NNTox</ext-link>.<fig id="Fig1"><label>Figure 1</label><caption><p>The network architecture of NNTox for toxin/non-toxin binary prediction.</p></caption><graphic xlink:href="41598_2019_54405_Fig1_HTML" id="d29e376"/></fig></p><p id="Par12">Predicting the mode of action of toxin proteins is a multi-label classification problem, where one toxin could have more than one mode of action. For example, conotoxin, a snail toxin, is both a neuro-toxin and an ion channel inhibitor toxin. Thus, classes are not mutually exclusive. We modified the neural network described above to perform multi-label prediction, by replacing softmax in the last layer with computing the sigmoid cross-entropy loss. In the sigmoid cross-entropy loss, the loss calculated for every label is independent of the loss in other labels, and thus allows for multiple labels to be predicted.</p><p id="Par13">The sub-classes of toxins are imbalanced, e.g. neurotoxin and ion channel inhibiting toxin have more proteins than other sub-classes. This can cause bias in the network while training towards highly represented classes. To overcome this problem, we added a weight to each correct class prediction in the multi-label neural network, where the weight is inversely proportional to the number of the times that class is present in the training set. For a protein, v&#x02009;=&#x02009;[v<sub>1</sub>, v<sub>2</sub>, &#x02026; v<sub>11</sub>] is the label vector, where v<sub>i</sub>&#x02009;=&#x02009;1 represents that the protein has the mode of action i. For each mode of action i, we calculated the positive count (i), i.e., the number of times v<sub>i</sub>&#x02009;=&#x02009;1 and the negative count (i), i.e., the number of times v<sub>i</sub>&#x02009;=&#x02009;0 in the training dataset. The weight w<sub>i</sub> given to a mode of action/class i is w<sub>i</sub>&#x02009;=&#x02009;(negative count (i))/(positive count (i)). Thus, the weight is 1 if the number of positive and negative counts is equal while giving more weight as the positive count decreases.</p></sec><sec id="Sec6"><title>Training and validation with nested cross-validation</title><p id="Par14">Training was performed with backpropagation using the ADAM optimizer, implemented in TensorFlow<sup><xref ref-type="bibr" rid="CR26">26</xref></sup> We performed a five-fold nested cross validation to tune four hyper-parameters: the number of neurons in hidden layer [10, 50, 100, 200, 500], the regularization strength [10, 1, 0.1, 0.01, 0.001], the learning rate [10, 1, 0.1, 0.01, 0.001] and the number of epochs [100, 500, 1000, 2000, 5000]. Shown in the parentheses are the values tested for each hyper-parameter.</p><p id="Par15">Nested cross-validation provides robust and unbiased training and testing using the full data available from the dataset. In the nested cross-validation there were two cross validation loops. In the outer loop, the dataset was divided into k (=5) subsets, where one subset was considered as the test set and the rest are used for training &#x00026; validation set, and the test set was changed for k times. Furthermore, the inner loop was to perform a cross-validation on the training &#x00026; validation set, i.e. the set was divided into k (=5) pieces again and one of them was considered as the validation set. Each different combinations of hyper-parameters were trained on the training set and tested on the validation set. This was performed for k times by changing the validation set. Then, the best hyper-parameter was chosen based on the average error on the k validation set, and the model trained using the hyper-parameter set on all training and validation set was applied to the testing set. This is repeated for k times, and the final result was the average performance on the k test sets.</p></sec><sec id="Sec7"><title>Protein function prediction with PFP</title><p id="Par16">We examined the performance of NNTox using two sets of GO terms for proteins. First, we tested NNTox using the GO annotations of proteins obtained from UniProtKB-SwissProt. This is to test the performance of the architecture of NNTox in the best possible cases when all the correct GO terms are known. Second, we used a GO-term prediction method, PFP, to predict GO terms of each protein and trained NNTox on the predicted GO terms. This is to simulate the situation when true GO terms for a query protein are not present.</p><p id="Par17">PFP was developed in our group and has been successful in the Critical Assessment of protein Function Annotation algorithms (CAFA). PFP uses PSI-BLAST<sup><xref ref-type="bibr" rid="CR27">27</xref></sup> to retrieve similar sequences from a database to a query sequence and obtains GO-term annotations from the sequences with an E-value of up to 125. Then, each GO term will be assigned with a score that reflects the E-value of sequences that have the GO term in their annotation as well as the conditional probability that the GO term occurs given other GO terms are observed. For the sequence database, we used UniProtKB Swiss-Prot downloaded in March 2018. To avoid retrieving GO terms from the query protein itself, sequences retrieved with an E-value of 0 were discarded.</p><p id="Par18">PFP provides a confidence score to each GO term predicted that ranges from 0.0 to 1.0 with 1.0 for the highest confidence (Supplementary Table&#x000a0;<xref rid="MOESM1" ref-type="media">S1</xref>). Using PFP, we devised a simple baseline strategy to predict if a protein is toxin or not directly from assigned GO terms. If PFP predictions include the &#x0201c;toxin activity&#x0201d; GO term (GO:0090729) with high confidence (&#x0003e;=0.9) then we label the protein as a toxin. We also trained NNTox network with PFP-predicted GO terms. Only predicted terms were used for this training, i.e. known GO term annotations were not considered to simulate the situation that query proteins do not have any known annotations. We removed the &#x0201c;toxin activity&#x0201d; GO term from the PFP predictions as having this GO term would bias the model and make the toxin prediction easy.</p></sec><sec id="Sec8"><title>Additional baseline method</title><p id="Par19">To evaluate the performance of NNTox, we developed a na&#x000ef;ve GO term based baseline approach. In this approach, a protein is classified as toxin if all the GO terms associated with it are present in the Toxin GO term set. This approach reflects the idea that if a set of GO terms are already known to be associated with a toxin, we classify a new protein associated with those GO terms as toxin as well. For baseline method, the non-redundant toxin protein dataset was split into a 70:30 train:test ratio, where 70% of the dataset was used to create the Toxin GO term set. The method was tested with 30% of the toxin test dataset and all the non-redundant non-toxin proteins.</p></sec><sec id="Sec9"><title>Prediction evaluation</title><p id="Par20">Prediction accuracy was evaluated with the F1 score. The precision P, recall R and F1 score was calculated as<disp-formula id="Equa"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{array}{rcl}P &#x00026; = &#x00026; \frac{TP}{TP+FP}\\ R &#x00026; = &#x00026; \frac{TP}{TP+FN}\\ F1 &#x00026; = &#x00026; \frac{2\,\ast \,P\ast \,R}{(P+R)}\end{array}$$\end{document}</tex-math><mml:math id="M2" display="block"><mml:mtable columnalign="left"><mml:mtr columnalign="left"><mml:mtd columnalign="right"><mml:mi>P</mml:mi></mml:mtd><mml:mtd columnalign="center"><mml:mo>=</mml:mo></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mfrac><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mo>+</mml:mo><mml:mi>F</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="right"><mml:mi>R</mml:mi></mml:mtd><mml:mtd columnalign="center"><mml:mo>=</mml:mo></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mfrac><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mo>+</mml:mo><mml:mi>F</mml:mi><mml:mi>N</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="right"><mml:mrow><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd columnalign="center"><mml:mo>=</mml:mo></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mfrac><mml:mrow><mml:mn>2</mml:mn><mml:mspace width=".25em"/><mml:mo>&#x02217;</mml:mo><mml:mspace width=".25em"/><mml:mi>P</mml:mi><mml:mo>&#x02217;</mml:mo><mml:mspace width=".25em"/><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>P</mml:mi><mml:mo>+</mml:mo><mml:mi>R</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="41598_2019_54405_Article_Equa.gif" position="anchor"/></alternatives></disp-formula>where TP is the total number of proteins that are toxin and were predicted correctly as toxin, FP is the total number of proteins that are non-toxin but predicted as toxin, and FN is the total number of proteins which are toxin but predicted as non-toxin.</p></sec></sec><sec id="Sec10" sec-type="results"><title>Results</title><sec id="Sec11"><title>GO term specificity for toxin proteins</title><p id="Par21">To begin with, we examined if any GO terms have a specific association with the toxicity of proteins. We computed the specificity of GO terms for toxin proteins, which was defined as the fraction of the toxin proteins that are annotated with the specific GO term among all proteins in UniProtKB-SwissProt with the GO term annotation. Table&#x000a0;<xref rid="Tab1" ref-type="table">1</xref> lists top 20 GO terms with the highest toxin specificity. Supplementary Table&#x000a0;<xref rid="MOESM2" ref-type="media">S2</xref> provides a complete list of GO terms associated with toxin keywords. Besides GO terms that are apparently related to toxins, e.g. those with the word &#x0201c;inhibitor&#x0201d; in their description, there are highly toxin-specific terms that do not directly indicate toxicity.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Toxin specific GO terms.</p></caption><table frame="hsides" rules="groups"><thead><tr><th>GO ID</th><th>Function</th><th>Toxin Spec. (%)<sup>a</sup></th></tr></thead><tbody><tr><td>0035792</td><td>other organism postsynaptic membrane</td><td>100.00 (554)</td></tr><tr><td>0072556</td><td>other organism presynaptic membrane</td><td>98.14 (317)</td></tr><tr><td>0042151</td><td>nematocyst</td><td>91.64 (252)</td></tr><tr><td>0030550</td><td>acetylcholine receptor inhibitor activity</td><td>91.11 (123)</td></tr><tr><td>0019871</td><td>sodium channel inhibitor activity</td><td>89.89 (169)</td></tr><tr><td>0008200</td><td>ion channel inhibitor activity</td><td>87.89 (1415)</td></tr><tr><td>0016248</td><td>channel inhibitor activity</td><td>87.56 (1415)</td></tr><tr><td>0099602</td><td>neurotransmitter receptor regulator activity</td><td>75.46 (123)</td></tr><tr><td>0034548</td><td>acetylcholine receptor regulator activity</td><td>75.46 (123)</td></tr><tr><td>0070290</td><td>N-APE-PLD D activity<sup>b</sup></td><td>75.35 (214)</td></tr><tr><td>0004630</td><td>phospholipase D activity</td><td>75.09 (214)</td></tr><tr><td>0016247</td><td>channel regulator activity</td><td>71.72 (1415)</td></tr><tr><td>0030547</td><td>receptor inhibitor activity</td><td>69.44 (125)</td></tr><tr><td>0009405</td><td>pathogenesis</td><td>66.26 (6497)</td></tr><tr><td>0102568</td><td>phospholipase A2 activity (12-DOPE)<sup>c</sup></td><td>59.51 (319)</td></tr><tr><td>0102567</td><td>phospholipase A2 activity (12- DPPtdCho)<sup>d</sup></td><td>59.51 (319)</td></tr><tr><td>1903963</td><td>arachidonate transport</td><td>59.48 (342)</td></tr><tr><td>0050482</td><td>arachidonic acid secretion</td><td>59.47 (342)</td></tr><tr><td>0017080</td><td>sodium channel regulator activity</td><td>59.31 (172)</td></tr><tr><td>0004623</td><td>phospholipase A2 activity</td><td>58.41 (375)</td></tr></tbody></table><table-wrap-foot><p><sup>a</sup>The number of toxin proteins with the GO term is shown in the parenthesis. <sup>b</sup>N-acylphosphatidylethanolamine-specific phospholipase D activity. <sup>c</sup>Phospho-lipase A2 activity consuming 12-dioleoylphosphatidylethanolamine. <sup>d</sup>Phospho-lipase A2 activity (consuming 12-dipalmitoylphosphatidylcholine).</p></table-wrap-foot></table-wrap></p><p id="Par22">The first GO term in the table, &#x0201c;Other organism postsynaptic membrane&#x0201d; (GO: 0035792) has 100% of the toxin specificity. Proteins with this GO term are indeed toxins, e.g. alpha-conotoxin in a sea snail (Uni-Prot ID: CDKA_CONVX) and cobrotoxin in Chinese cobra (UniProt ID: 3S1CB_NAJAT). These toxins bind to nicotinic acetylcholine receptors, inhibiting them, and impairing neuromuscular transmission. Thus, it is involved in neurotoxicity and ion channel impairing toxicity. &#x0201c;N-acylphosphatidylethanolamine-specific phospholipase D (NAPE-PLD) activity&#x0201d; (GO: 0070290, example proteins: UniProt ID: A1lB1_LOXIN) has a high toxin specificity of 75.35%. Phospholipid D catalyzes the hydrolysis of sphingomyelin and induces complement-dependent hemolysis, dermonecrosis, blood vessel permeability, and platelet aggregation. Thus, it is involved in dermonecrotic and complement system toxicity. It is possessed by recluse spiders and causes necrotic damage. &#x0201c;Phospholipase A2 activity&#x0201d; (GO:0004623), the last one in the table, has a toxin specificity of 58.41% with neurotoxin specificity of 22%, myotoxin specificity of 14%, and hemostasis impairing toxin specificity of 23%. Phospholipase A2 catalyzes the calcium-dependent hydrolysis of the 2-acyl groups in 3-sn-phosphoglycerides. It affects neuromuscular transmission by blocking acetylcholine release from the nerve termini. It also has anticoagulant activity and weakly inhibits ADP-induced platelet aggregation. The protein with this activity exists in venomous snakes, e.g. Chinese krait (UniProt ID: PA2B1_BUNMU) and Nikolsky&#x02019;s Viper (UniProt ID: PA2B2_VIPBN). Overall the results show GO terms are promising features for predicting protein toxicity.</p></sec><sec id="Sec12"><title>Performance of toxin prediction</title><p id="Par23">In this section we discuss the performance of our NNTox on distinguishing toxin and non-toxin proteins. We compare the performance with the baseline methods. Table&#x000a0;<xref rid="Tab2" ref-type="table">2</xref> summarizes the results. The table shows precision, recall, and the F1 score, which was defined as the harmonic mean of precision and recall of toxin protein prediction.<table-wrap id="Tab2"><label>Table 2</label><caption><p>Summary of the toxin prediction.</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Method</th><th>Precision</th><th>Recall</th><th>F1 score</th></tr></thead><tbody><tr><td colspan="4"><bold>With GO annotation</bold></td></tr><tr><td>Baseline exact</td><td>0.029</td><td>0.626</td><td>0.055</td></tr><tr><td>Baseline 1 mismatch</td><td>0.023</td><td>0.714</td><td>0.044</td></tr><tr><td>Baseline 2 mismatches</td><td>0.021</td><td>0.769</td><td>0.041</td></tr><tr><td>NNTox (GO Annotation)</td><td>0.903</td><td>0.898</td><td>0.900</td></tr><tr><td colspan="4"><bold>With PFP prediction</bold></td></tr><tr><td>Baseline exact</td><td>0.110</td><td>0.156</td><td>0.129</td></tr><tr><td>Baseline 1 mismatch</td><td>0.102</td><td>0.184</td><td>0.131</td></tr><tr><td>Baseline 2 mismatches</td><td>0.115</td><td>0.259</td><td>0.159</td></tr><tr><td>PFP</td><td>0.873</td><td>0.535</td><td>0.663</td></tr><tr><td>NNTox (PFP)</td><td>0.801</td><td>0.750</td><td>0.775</td></tr><tr><td>PFP&#x02009;+&#x02009;NNTox(PFP)</td><td>0.807</td><td>0.781</td><td>0.794</td></tr></tbody></table></table-wrap></p><p id="Par24">The baseline method is explained in Methods. NNTox (GO Annotation) used the GO annotations of proteins from UniProtKB-SwissProt. &#x0201c;PFP&#x0201d; checked if the &#x0201c;toxin activity&#x0201d; GO term was predicted with 0.9 or a higher confidence score. NNTox (PFP) uses predicted GO terms by PFP using 0.1 as the prediction confidence cutoff value (Fig.&#x000a0;<xref rid="Fig2" ref-type="fig">2</xref>). PFP&#x02009;+&#x02009;NNTox(PFP) is a two-step prediction using first PFP and then to apply NNTox(PFP) for proteins that are not identified as toxin by PFP.<fig id="Fig2"><label>Figure 2</label><caption><p>F1 score, precision, and recall of toxin prediction for different PFP&#x02019;s GO prediction confidence levels.</p></caption><graphic xlink:href="41598_2019_54405_Fig2_HTML" id="d29e993"/></fig></p><p id="Par25">In the first three rows of Table&#x000a0;<xref rid="Tab2" ref-type="table">2</xref>, we showed the prediction performance one can obtain by simply comparing GO annotation of a target protein with known proteins in the reference database (the baseline method). When the exact match of GO terms was counted, recall for toxin proteins was 0.626. When the condition was relaxed, allowing 1 or 2 miss matches of GO terms, the recall for toxin proteins naturally increased to 0.714 by sacrificing the precision. This is intuitive because with 1 mismatch allowed, proteins which had only one GO term not present in the toxin GO set were now predicted as toxins as well but with the cost of false positives. F1 scores of the baseline method were as low as 0.055 due to low precision values that were caused by a large number of false positives (i.e. non-toxin proteins predicted as toxins).</p><p id="Par26">In contrast, prediction by NNTox performed substantially better than the baseline method. The precision and recall for detecting toxin proteins was 0.903 and 0.898, respectively, indicating that the predictions made for toxin and non-toxin proteins were well balanced. The NNTox F1 score was 0.900, which is a clear contrast compared to baseline method that showed substantially lower F1 score.</p><p id="Par27">The second half of Table&#x000a0;<xref rid="Tab2" ref-type="table">2</xref> shows results using PFP predicted GO terms. Using predicted GO terms, the baseline method showed lower recall as compared with results using GO annotations. This is because predicted GO terms for a protein have a low random chance to perfectly agree with toxin GO terms. As another baseline, PFP prediction was also directly used to determine if a protein is toxin by checking if the prediction included &#x0201c;toxin activity&#x0201d; GO term with a high confidence (&#x0003e;=0.9). This approach performed better than the baseline method showing an F1 score of 0.663 and a recall of 0.535. Thus, about half of the toxin proteins were identified correctly by the PFP baseline. NNTox performed better than the baseline methods and the PFP baseline with an F1 score of 0.775, although the performance was worse than the cases with correct GO annotation. For NNTox, we used predicted GO terms with PFP&#x02019;s confidence score of over 0.1, since that gave the best performance (Fig.&#x000a0;<xref rid="Fig2" ref-type="fig">2</xref>). We also tested a two-step prediction process where PFP and NNTox with PFP predicted GO terms were combined (the last row in Table&#x000a0;<xref rid="Tab2" ref-type="table">2</xref>). First, the protein was determined to be toxin based on direct PFP predictions. Then, if the protein is not predicted to be toxin, then NNTox was applied. This procedure further improved NNTox in all the evaluation metrics. The F1 score increased from 0.775 to 0.794. Looking closely, the first step of the PFP application filtered 261 toxin proteins correctly (i.e. true positives), then additional 120 toxin proteins were selected by the NNTox.</p><p id="Par28">In Fig.&#x000a0;<xref rid="Fig3" ref-type="fig">3</xref>, we analyzed the importance of each GO term in distinguishing toxin and non-toxin proteins. For each GO term&#x000a0;in the feature vector, we computed the mutual information&#x000a0;relative to the toxin classification. As shown, a large specificity of a GO term does not necessarily mean a large mutual information for the classification. Such cases happen for GO terms that are highly specific for toxins but only appear in annotation of a small number of proteins, thus not much helpful for the classification for many proteins in the dataset. The top three GO terms were pathogenesis (GO:0009405), interspecies interaction between organisms (GO:0044419) and multi-organism process (GO:0051704), which is not surprising as these terms highly indicative of a protein being toxin.<fig id="Fig3"><label>Figure 3</label><caption><p>Mutual information and toxin specificity of GO terms for toxin/non-toxin classification.</p></caption><graphic xlink:href="41598_2019_54405_Fig3_HTML" id="d29e1025"/></fig></p></sec><sec id="Sec13"><title>Neural network visualization</title><p id="Par29">In Fig.&#x000a0;<xref rid="Fig4" ref-type="fig">4</xref> we visualized the network to illustrate how the neural network model separated the toxin and non-toxin proteins using the principal component analysis (PCA). For each protein in the non-redundant tox-in/non-toxin set, we ran the trained network and calculated the output of each of the three hidden layers and passed it through the sigmoid activation function. The top figure shows that toxin proteins (red) mostly overlapped with non-toxin proteins in the PCA space. The distinction between the two classes became substantially clearer in the second layer (the middle panel), and further improved in the third layer. Thus, as the network went deeper and the model complexity increased, the model was able to separate the two classes better.<fig id="Fig4"><label>Figure 4</label><caption><p>Separations of toxin and non-toxin proteins in the neural network layers.</p></caption><graphic xlink:href="41598_2019_54405_Fig4_HTML" id="d29e1042"/></fig></p><p id="Par30">Outputs from each of the three hidden layers of the neural network for toxin (red) and non-toxin (green) proteins are visualized by PCA. The x- and the y-axis are the first and the second principal components of the output values of the layer through the sigmoid activation function.</p></sec><sec id="Sec14"><title>Prediction of toxin mode action</title><p id="Par31">Next, we developed a multi-label neural network model, which predicts the mode of action of a toxin protein. The input to the model is the same feature vector of GO terms and the output is a binary vector for the 11 modes of action. Multiple action predictions are also allowed for a protein, which makes the prediction task more complex. To evaluate the prediction performance of the model, we computed the elementwise accuracy of the predicted vector (Table&#x000a0;<xref rid="Tab3" ref-type="table">3</xref>) as usually used for multi-label classification<sup><xref ref-type="bibr" rid="CR28">28</xref></sup>, where the number of correctly predicted modes for each of the target proteins was counted. NNTox (Mode of action) showed good performance with an accuracy of over 0.8, even when predicted GO terms were used. The high accuracy indicates that the method was overall successful in not only for pointing out the correct mode of the toxin proteins but also in avoiding over predicting incorrect modes.<table-wrap id="Tab3"><label>Table 3</label><caption><p>Summary of the mode of action prediction accuracy.</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Input GO terms</th><th>Accuracy</th></tr></thead><tbody><tr><td>UniProtKB</td><td>0.879</td></tr><tr><td>Prediction by PFP</td><td>0.825</td></tr></tbody></table></table-wrap></p><p id="Par32">The values are the average for test sets in the five-fold nested cross-validation. In this multi-class prediction, a prediction output for a protein is a binary vector of 11 values, where 1 indicates the class is predicted and 0 for a negative prediction for the class. The accuracy was computed by counting the agreement of the predicted binary class for each toxin mode of action in all the proteins.</p><p id="Par33">11 modes shown on the x-axis are: C, cardiotoxin; EN, enterotoxin; N, neurotoxin; IC, ion channel impairing toxin; M, myotoxin; D, dermonecrotic toxin; H, hemostasis impairing toxin; GCR, G-protein coupled receptor impairing toxin; CS, complement system impairing toxin; CA, cell adhesion impairing toxin; V, viral toxin. In the parentheses, the number of proteins of the mode is shown. 173 toxin proteins that have only one mode of action were analyzed. Black bars, predictions using GO annotations from UniProtKB; gray bars, predictions using PFP&#x02019;s GO term predictions.</p><p id="Par34">Figure&#x000a0;<xref rid="Fig5" ref-type="fig">5</xref> shows the F1 score of each mode of action separately for toxin proteins with a single action mode. Precision and recall values are provided in Supplementary Tables&#x000a0;<xref rid="MOESM1" ref-type="media">S3</xref> and <xref rid="MOESM1" ref-type="media">S4</xref>. Naturally, F1 scores correlated strongly with the number of data available for modes, which is shown in the parentheses of the mode labels on the x-axis. A relatively high F1 score was observed for modes that have more data, but low scores were resulted in for modes with small data size. Thus, the data availability of the current database limits the prediction performance for several toxin modes, nevertheless, the results indicate that in principle the model is reasonable and will only improve by the increase of toxin data to be available in the future.<fig id="Fig5"><label>Figure 5</label><caption><p>F1 scores of single-mode toxin proteins of 11different modes of action.</p></caption><graphic xlink:href="41598_2019_54405_Fig5_HTML" id="d29e1113"/></fig></p><p id="Par35">Among the toxin protein dataset with the mode of action, there are 88 proteins that have two mode labels. Here we examine predictions made to the two largest toxin groups with two labels. 54 out of 88 proteins are labeled as neurotoxin (N) and Ion channel impairing toxin (IC). Out of them, 30 (55.6%) had the exactly correct predictions, i.e. correct positive predictions for the two labels and correct negative predictions to the other modes. For 9 other cases, the two labels, N and IC, were correctly predicted but with other false positive predictions. Finally, 48 of them (88.9%) had at least 1 mode, either N or IC, correctly predicted. The second-largest group with two modes were with hemostasis impairing toxin (H) and cell adhesion impairing toxin (CA), with 16 proteins. For this group, five of them have the exact correct prediction, and another protein was counted if we include the prediction with the two correct modes and one more over-predicted mode (37.5%). The number of proteins with at least one correctly predicted mode, H or CA, was 12 (75.0%). Thus, overall, NNTox (Mode of action) was able to capture the dual labels of the proteins reasonably well.</p></sec></sec><sec id="Sec15" sec-type="discussion"><title>Discussion</title><p id="Par36">Here, we developed NNTox, which predicts the toxicity of proteins via GO term annotation. In contrast to existing methods that compare a query protein sequence to known toxin proteins, NNTox&#x02019;s approach is less dependent on the known similar toxin proteins because prediction is made via GO terms. This approach exploits the success of general function predictors that have constantly been improving in the past years. We used PFP for the current development because it was developed by our lab and is one of the top-performing methods in the field. As the function prediction method improves, the toxin prediction by NNTox will also improve. Performance is also expected to improve by using additional input features, such as protein local structure information, e.g. protein main-chain conformation<sup><xref ref-type="bibr" rid="CR29">29</xref></sup>, which can be predicted with a stable accuracy.</p><p id="Par37">The multi-label classification performed for toxin action mode prediction showed high elementwise accuracy (Table&#x000a0;<xref rid="Tab3" ref-type="table">3</xref>). Naturally, the accuracy for each mode was correlated to the data size of the category, which indicates that the architecture of the model is appropriate for this task and will further improve as more data become available.</p><p id="Par38">In this work, we trained the network model so that the overall F1 score was maximized. The method can also be trained differently, for example, in a way to increase the sensitivity of toxin detection (allowing more false positives), considering that missing life-threatening toxins can cause a catastrophic outcome.</p></sec><sec sec-type="supplementary-material"><title>Supplementary information</title><sec id="Sec16"><p>
<supplementary-material content-type="local-data" id="MOESM1"><media xlink:href="41598_2019_54405_MOESM1_ESM.docx"><caption><p>Supplementary Table S1, S3, S4</p></caption></media></supplementary-material>
<supplementary-material content-type="local-data" id="MOESM2"><media xlink:href="41598_2019_54405_MOESM2_ESM.xlsx"><caption><p>Supplementary Table S2</p></caption></media></supplementary-material>
</p></sec></sec></body><back><fn-group><fn><p><bold>Publisher&#x02019;s note</bold> Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p></fn></fn-group><sec><title>Supplementary information</title><p>is available for this paper at 10.1038/s41598-019-54405-6.</p></sec><ack><title>Acknowledgements</title><p>The authors acknowledge the Integrative Genomics Approach to Computational Assessment of Threats (IGACAT) team (<ext-link ext-link-type="uri" xlink:href="https://igacat.github.io/">https://igacat.github.io/</ext-link>) for providing the statistics of the background frequency of GO terms and for fruitful scientific discussion. The authors are grateful to Charles Christoffer for proofreading the manuscript. This study was sponsored by the Office of the Director of National Intelligence (ODNI), Intelligence Advanced Research Projects Activity (IARPA), via the Army Research Office (ARO) under cooperative Agreement Number W911NF-17-2-0105. DK also acknowledges support from the National Institute of General Medical Sciences of the NIH (R01GM123055) and the National Science Foundation (DMS1614777, CMMI1825941).</p></ack><notes notes-type="author-contribution"><title>Author contributions</title><p>D.K. conceived the study. A.J. designed the network, datasets, and performed the experiments. A.J. and D.K. analyzed the data. A.J. drafted the manuscript. D.K. supervised and completed the writing. D.K. agrees to serve as the author responsible for contact and ensures communication.</p></notes><notes notes-type="data-availability"><title>Data availability</title><p>The code and the dataset used in this study are made available at <ext-link ext-link-type="uri" xlink:href="http://www.github.com/kiharalab/NNTox">http://www.github.com/kiharalab/NNTox</ext-link> and <ext-link ext-link-type="uri" xlink:href="http://kiharalab.org/nntox_dataset/">http://kiharalab.org/nntox_dataset/</ext-link>.</p></notes><notes notes-type="COI-statement"><title>Competing interests</title><p id="Par39">The authors declare no competing interests.</p></notes><ref-list id="Bib1"><title>References</title><ref id="CR1"><label>1.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ma</surname><given-names>S</given-names></name><name><surname>Tang</surname><given-names>N</given-names></name><name><surname>Tian</surname><given-names>J</given-names></name></person-group><article-title>DNA synthesis, assembly and applications in synthetic biology</article-title><source>Curr Opin Chem Biol</source><year>2012</year><volume>16</volume><fpage>260</fpage><lpage>267</lpage><pub-id pub-id-type="doi">10.1016/j.cbpa.2012.05.001</pub-id><?supplied-pmid 22633067?><pub-id pub-id-type="pmid">22633067</pub-id></element-citation></ref><ref id="CR2"><label>2.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hughes</surname><given-names>Randall A.</given-names></name><name><surname>Ellington</surname><given-names>Andrew D.</given-names></name></person-group><article-title>Synthetic DNA Synthesis and Assembly: Putting the Synthetic in Synthetic Biology</article-title><source>Cold Spring Harbor Perspectives in Biology</source><year>2017</year><volume>9</volume><issue>1</issue><fpage>a023812</fpage><pub-id pub-id-type="doi">10.1101/cshperspect.a023812</pub-id><pub-id pub-id-type="pmid">28049645</pub-id></element-citation></ref><ref id="CR3"><label>3.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Huang</surname><given-names>PS</given-names></name><name><surname>Boyken</surname><given-names>SE</given-names></name><name><surname>Baker</surname><given-names>D</given-names></name></person-group><article-title>The coming of age of de novo protein design</article-title><source>Nature</source><year>2016</year><volume>537</volume><fpage>320</fpage><lpage>327</lpage><pub-id pub-id-type="doi">10.1038/nature19946</pub-id><?supplied-pmid 27629638?><pub-id pub-id-type="pmid">27629638</pub-id></element-citation></ref><ref id="CR4"><label>4.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gupta</surname><given-names>SK</given-names></name><name><surname>Shukla</surname><given-names>P</given-names></name></person-group><article-title>Microbial platform technology for recombinant antibody fragment production: A review</article-title><source>Crit Rev Microbiol</source><year>2017</year><volume>43</volume><fpage>31</fpage><lpage>42</lpage><pub-id pub-id-type="doi">10.3109/1040841X.2016.1150959</pub-id><?supplied-pmid 27387055?><pub-id pub-id-type="pmid">27387055</pub-id></element-citation></ref><ref id="CR5"><label>5.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Borobova</surname><given-names>EA</given-names></name><etal/></person-group><article-title>Design of Artificial Immunogens Containing Melanoma-associated T-cell Epitopes</article-title><source>Curr Gene Ther</source><year>2018</year><volume>18</volume><fpage>375</fpage><lpage>385</lpage><pub-id pub-id-type="doi">10.2174/1566523218666181113112829</pub-id><?supplied-pmid 30421674?><pub-id pub-id-type="pmid">30421674</pub-id></element-citation></ref><ref id="CR6"><label>6.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Imran</surname><given-names>M</given-names></name><etal/></person-group><article-title>Genetically transformed tobacco plants expressing synthetic EPSPS gene confer tolerance against glyphosate herbicide</article-title><source>Physiol Mol Biol Plants</source><year>2017</year><volume>23</volume><fpage>453</fpage><lpage>460</lpage><pub-id pub-id-type="doi">10.1007/s12298-017-0424-0</pub-id><?supplied-pmid 28461732?><pub-id pub-id-type="pmid">28461732</pub-id></element-citation></ref><ref id="CR7"><label>7.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Berger</surname><given-names>T</given-names></name><etal/></person-group><article-title>Toxins as biological weapons for terror-characteristics, challenges and medical countermeasures: a mini-review</article-title><source>Disaster and military medicine</source><year>2016</year><volume>2</volume><fpage>7</fpage><pub-id pub-id-type="doi">10.1186/s40696-016-0017-4</pub-id><?supplied-pmid 28265441?><pub-id pub-id-type="pmid">28265441</pub-id></element-citation></ref><ref id="CR8"><label>8.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Taitt</surname><given-names>CR</given-names></name><etal/></person-group><article-title>Discrimination between biothreat agents and &#x02018;near neighbor&#x02019; species using a resequencing array</article-title><source>FEMS immunology and medical microbiology</source><year>2008</year><volume>54</volume><fpage>356</fpage><lpage>364</lpage><pub-id pub-id-type="doi">10.1111/j.1574-695X.2008.00486.x</pub-id><?supplied-pmid 19049648?><pub-id pub-id-type="pmid">19049648</pub-id></element-citation></ref><ref id="CR9"><label>9.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Duracova</surname><given-names>Miloslava</given-names></name><name><surname>Klimentova</surname><given-names>Jana</given-names></name><name><surname>Fucikova</surname><given-names>Alena</given-names></name><name><surname>Dresler</surname><given-names>Jiri</given-names></name></person-group><article-title>Proteomic Methods of Detection and Quantification of Protein Toxins</article-title><source>Toxins</source><year>2018</year><volume>10</volume><issue>3</issue><fpage>99</fpage><pub-id pub-id-type="doi">10.3390/toxins10030099</pub-id></element-citation></ref><ref id="CR10"><label>10.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Walper</surname><given-names>SA</given-names></name><etal/></person-group><article-title>Detecting Biothreat Agents: From Current Diagnostics to Developing Sensor Technologies</article-title><source>ACS sensors</source><year>2018</year><volume>3</volume><fpage>1894</fpage><lpage>2024</lpage><pub-id pub-id-type="doi">10.1021/acssensors.8b00420</pub-id><?supplied-pmid 30080029?><pub-id pub-id-type="pmid">30080029</pub-id></element-citation></ref><ref id="CR11"><label>11.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Dunbar</surname><given-names>J</given-names></name><etal/></person-group><article-title>Perspective on Improving Environmental Monitoring of Biothreats</article-title><source>Frontiers in bioengineering and biotechnology</source><year>2018</year><volume>6</volume><fpage>147</fpage><pub-id pub-id-type="doi">10.3389/fbioe.2018.00147</pub-id><?supplied-pmid 30406093?><pub-id pub-id-type="pmid">30406093</pub-id></element-citation></ref><ref id="CR12"><label>12.</label><mixed-citation publication-type="other">Rudraraju, S., Petrel, T. &#x00026; Tabbaa, O. P. ThreatSEQ Web Service, a Flexible Web-Deployed DNA Screening Platform for Wide-Spread and Cost-Effective Threat Detection and Interpretation. <italic>ASM Biothreats</italic> (2019).</mixed-citation></ref><ref id="CR13"><label>13.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gupta</surname><given-names>S</given-names></name><etal/></person-group><article-title>In silico approach for predicting toxicity of peptides and proteins</article-title><source>PloS one</source><year>2013</year><volume>8</volume><fpage>e73957</fpage><pub-id pub-id-type="doi">10.1371/journal.pone.0073957</pub-id><?supplied-pmid 24058508?><pub-id pub-id-type="pmid">24058508</pub-id></element-citation></ref><ref id="CR14"><label>14.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Agrawal</surname><given-names>P</given-names></name><etal/></person-group><article-title><italic>In Silico</italic> Approach for Prediction of Antifungal</article-title><source>Peptides. Frontiers in microbiology</source><year>2018</year><volume>9</volume><fpage>323</fpage><pub-id pub-id-type="doi">10.3389/fmicb.2018.00323</pub-id><?supplied-pmid 29535692?><pub-id pub-id-type="pmid">29535692</pub-id></element-citation></ref><ref id="CR15"><label>15.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Saha</surname><given-names>S</given-names></name><name><surname>Raghava</surname><given-names>GP</given-names></name></person-group><article-title>BTXpred: prediction of bacterial toxins</article-title><source>In silico biology</source><year>2007</year><volume>7</volume><fpage>405</fpage><lpage>412</lpage><?supplied-pmid 18391233?><pub-id pub-id-type="pmid">18391233</pub-id></element-citation></ref><ref id="CR16"><label>16.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Naamati</surname><given-names>G</given-names></name><name><surname>Askenazi</surname><given-names>M</given-names></name><name><surname>Linial</surname><given-names>M</given-names></name></person-group><article-title>ClanTox: a classifier of short animal toxins</article-title><source>Nucleic acids research</source><year>2009</year><volume>37</volume><fpage>W363</fpage><lpage>368</lpage><pub-id pub-id-type="doi">10.1093/nar/gkp299</pub-id><?supplied-pmid 19429697?><pub-id pub-id-type="pmid">19429697</pub-id></element-citation></ref><ref id="CR17"><label>17.</label><element-citation publication-type="journal"><person-group person-group-type="author"><collab>Gene Ontology Consortium</collab></person-group><article-title>Gene Ontology Consortium: going forward</article-title><source>Nucleic acids research</source><year>2015</year><volume>43</volume><fpage>D1049</fpage><lpage>1056</lpage><pub-id pub-id-type="doi">10.1093/nar/gku1179</pub-id><pub-id pub-id-type="pmid">25428369</pub-id></element-citation></ref><ref id="CR18"><label>18.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Khan</surname><given-names>IK</given-names></name><name><surname>Wei</surname><given-names>Q</given-names></name><name><surname>Chitale</surname><given-names>M</given-names></name><name><surname>Kihara</surname><given-names>D</given-names></name></person-group><article-title>PFP/ESG: automated protein function prediction servers enhanced with Gene Ontology visualization tool</article-title><source>Bioinformatics</source><year>2015</year><volume>31</volume><fpage>271</fpage><lpage>272</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btu646</pub-id><?supplied-pmid 25273111?><pub-id pub-id-type="pmid">25273111</pub-id></element-citation></ref><ref id="CR19"><label>19.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Jain</surname><given-names>A</given-names></name><name><surname>Kihara</surname><given-names>D</given-names></name></person-group><article-title>Phylo-PFP: improved automated protein function prediction using phylogenetic distance of distantly related sequences</article-title><source>Bioinformatics</source><year>2019</year><volume>35</volume><fpage>753</fpage><lpage>759</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/bty704</pub-id><?supplied-pmid 30165572?><pub-id pub-id-type="pmid">30165572</pub-id></element-citation></ref><ref id="CR20"><label>20.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hawkins</surname><given-names>T</given-names></name><name><surname>Chitale</surname><given-names>M</given-names></name><name><surname>Luban</surname><given-names>S</given-names></name><name><surname>Kihara</surname><given-names>D</given-names></name></person-group><article-title>PFP: Automated prediction of gene ontology functional annotations with confidence scores using protein sequence data</article-title><source>Proteins</source><year>2009</year><volume>74</volume><fpage>566</fpage><lpage>582</lpage><pub-id pub-id-type="doi">10.1002/prot.22172</pub-id><pub-id pub-id-type="pmid">18655063</pub-id></element-citation></ref><ref id="CR21"><label>21.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wei</surname><given-names>Q</given-names></name><name><surname>McGraw</surname><given-names>J</given-names></name><name><surname>Khan</surname><given-names>I</given-names></name><name><surname>Kihara</surname><given-names>D</given-names></name></person-group><article-title>Using PFP and ESG Protein Function Prediction Web Servers</article-title><source>Methods Mol Biol</source><year>2017</year><volume>1611</volume><fpage>1</fpage><lpage>14</lpage><pub-id pub-id-type="doi">10.1007/978-1-4939-7015-5_1</pub-id><?supplied-pmid 28451967?><pub-id pub-id-type="pmid">28451967</pub-id></element-citation></ref><ref id="CR22"><label>22.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Khan</surname><given-names>IK</given-names></name><name><surname>Wei</surname><given-names>Q</given-names></name><name><surname>Chapman</surname><given-names>S</given-names></name><name><surname>Kc</surname><given-names>DB</given-names></name><name><surname>Kihara</surname><given-names>D</given-names></name></person-group><article-title>The PFP and ESG protein function prediction methods in 2014: effect of database updates and ensemble approaches</article-title><source>GigaScience</source><year>2015</year><volume>4</volume><fpage>43</fpage><pub-id pub-id-type="doi">10.1186/s13742-015-0083-4</pub-id><?supplied-pmid 26380077?><pub-id pub-id-type="pmid">26380077</pub-id></element-citation></ref><ref id="CR23"><label>23.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Jiang</surname><given-names>Y</given-names></name><etal/></person-group><article-title>An expanded evaluation of protein function prediction methods shows an improvement in accuracy</article-title><source>Genome biology</source><year>2016</year><volume>17</volume><fpage>184</fpage><pub-id pub-id-type="doi">10.1186/s13059-016-1037-6</pub-id><?supplied-pmid 27604469?><pub-id pub-id-type="pmid">27604469</pub-id></element-citation></ref><ref id="CR24"><label>24.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Radivojac</surname><given-names>P</given-names></name><etal/></person-group><article-title>A large-scale evaluation of computational protein function prediction</article-title><source>Nature methods</source><year>2013</year><volume>10</volume><fpage>221</fpage><lpage>227</lpage><pub-id pub-id-type="doi">10.1038/nmeth.2340</pub-id><?supplied-pmid 23353650?><pub-id pub-id-type="pmid">23353650</pub-id></element-citation></ref><ref id="CR25"><label>25.</label><element-citation publication-type="journal"><person-group person-group-type="author"><collab>UniProt Consortium, T.</collab></person-group><article-title>UniProt: the universal protein knowledgebase</article-title><source>Nucleic acids research</source><year>2018</year><volume>46</volume><fpage>2699</fpage><pub-id pub-id-type="doi">10.1093/nar/gky092</pub-id><pub-id pub-id-type="pmid">29425356</pub-id></element-citation></ref><ref id="CR26"><label>26.</label><mixed-citation publication-type="other">Google Research. <italic>Tensorflow</italic>, <ext-link ext-link-type="uri" xlink:href="https://www.tensorflow.org/">https://www.tensorflow.org/</ext-link> (2019).</mixed-citation></ref><ref id="CR27"><label>27.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Altschul</surname><given-names>SF</given-names></name><etal/></person-group><article-title>Gapped BLAST and PSI-BLAST: a new generation of protein database search programs</article-title><source>Nucleic acids research</source><year>1997</year><volume>25</volume><fpage>3389</fpage><lpage>3402</lpage><pub-id pub-id-type="doi">10.1093/nar/25.17.3389</pub-id><pub-id pub-id-type="pmid">9254694</pub-id></element-citation></ref><ref id="CR28"><label>28.</label><mixed-citation publication-type="other">Zhang, M.-L. &#x00026; Zhang, K. Multi-Label Learning by Exploiting Label Dependency,&#x000a0;<italic>Proceedings of the</italic><italic>16th ACM SIGKDD international conference on Knowledge discovery and data mining</italic>. 999&#x02013;108 (2010).</mixed-citation></ref><ref id="CR29"><label>29.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hanson</surname><given-names>Jack</given-names></name><name><surname>Paliwal</surname><given-names>Kuldip</given-names></name><name><surname>Litfin</surname><given-names>Thomas</given-names></name><name><surname>Yang</surname><given-names>Yuedong</given-names></name><name><surname>Zhou</surname><given-names>Yaoqi</given-names></name></person-group><article-title>Improving prediction of protein secondary structure, backbone angles, solvent accessibility and contact numbers by using predicted contact maps and an ensemble of recurrent and residual convolutional neural networks</article-title><source>Bioinformatics</source><year>2018</year><volume>35</volume><issue>14</issue><fpage>2403</fpage><lpage>2410</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/bty1006</pub-id></element-citation></ref></ref-list></back></article>