<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.1 20151215//EN" "JATS-archivearticle1.dtd"> 
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article"><?properties open_access?><?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?><?DTDIdentifier.IdentifierType public?><?SourceDTD.DTDName A++V2.4.dtd?><?SourceDTD.Version 2.4?><?ConverterInfo.XSLTName springer2nlmx2.xsl?><?ConverterInfo.Version 1?><front><journal-meta><journal-id journal-id-type="nlm-ta">Nat Commun</journal-id><journal-id journal-id-type="iso-abbrev">Nat Commun</journal-id><journal-title-group><journal-title>Nature Communications</journal-title></journal-title-group><issn pub-type="epub">2041-1723</issn><publisher><publisher-name>Nature Publishing Group UK</publisher-name><publisher-loc>London</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmcid">6399298</article-id><article-id pub-id-type="publisher-id">9027</article-id><article-id pub-id-type="doi">10.1038/s41467-019-09027-x</article-id><article-categories><subj-group subj-group-type="heading"><subject>Article</subject></subj-group></article-categories><title-group><article-title>Deep convolutional neural networks for accurate somatic mutation detection</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Sahraeian</surname><given-names>Sayed Mohammad Ebrahim</given-names></name><xref ref-type="aff" rid="Aff1">1</xref></contrib><contrib contrib-type="author"><name><surname>Liu</surname><given-names>Ruolin</given-names></name><xref ref-type="aff" rid="Aff1">1</xref></contrib><contrib contrib-type="author"><name><surname>Lau</surname><given-names>Bayo</given-names></name><xref ref-type="aff" rid="Aff1">1</xref></contrib><contrib contrib-type="author"><name><surname>Podesta</surname><given-names>Karl</given-names></name><xref ref-type="aff" rid="Aff2">2</xref></contrib><contrib contrib-type="author"><name><surname>Mohiyuddin</surname><given-names>Marghoob</given-names></name><xref ref-type="aff" rid="Aff1">1</xref></contrib><contrib contrib-type="author" corresp="yes"><name><surname>Lam</surname><given-names>Hugo Y. K.</given-names></name><address><email>hugo.lam@roche.com</email></address><xref ref-type="aff" rid="Aff1">1</xref></contrib><aff id="Aff1"><label>1</label>Roche Sequencing Solutions, Belmont, CA 94002 USA </aff><aff id="Aff2"><label>2</label>Microsoft Azure, Dublin 18, D18 P521 Ireland </aff></contrib-group><pub-date pub-type="epub"><day>4</day><month>3</month><year>2019</year></pub-date><pub-date pub-type="pmc-release"><day>4</day><month>3</month><year>2019</year></pub-date><pub-date pub-type="collection"><year>2019</year></pub-date><volume>10</volume><elocation-id>1041</elocation-id><history><date date-type="received"><day>14</day><month>11</month><year>2018</year></date><date date-type="accepted"><day>14</day><month>2</month><year>2019</year></date></history><permissions><copyright-statement>&#x000a9; The Author(s) 2019</copyright-statement><license license-type="OpenAccess"><license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The images or other third party material in this article are included in the article&#x02019;s Creative Commons license, unless indicated otherwise in a credit line to the material. If material is not included in the article&#x02019;s Creative Commons license and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this license, visit <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>.</license-p></license></permissions><abstract id="Abs1"><p id="Par1">Accurate detection of somatic mutations is still a challenge in cancer analysis. Here we present NeuSomatic, the first convolutional neural network approach for somatic mutation detection, which significantly outperforms previous methods on different sequencing platforms, sequencing strategies, and tumor purities. NeuSomatic summarizes sequence alignments into small matrices and incorporates more than a hundred features to capture mutation signals effectively. It can be used universally as a stand-alone somatic mutation detection method or with an ensemble of existing methods to achieve the highest accuracy.</p></abstract><abstract id="Abs2" abstract-type="web-summary"><p id="Par2">Somatic mutations are crucial to the understanding of cancer genesis, progression, and treatment, but are still challenging to detect. Here the authors present NeuSomatic, a convolutional neural network approach for accurate somatic mutation detection across various sequencing scenarios.</p></abstract><custom-meta-group><custom-meta><meta-name>issue-copyright-statement</meta-name><meta-value>&#x000a9; The Author(s) 2019</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="Sec1" sec-type="introduction"><title>Introduction</title><p id="Par3">Somatic mutations are critical signatures in cancer genesis, progression, and treatment. Accurate detection of somatic mutations is challenging due to tumor-normal cross contamination, tumor heterogeneity, sequencing artifacts, and coverage. In general, effectively filtering false-positive calls, which are introduced by the aforementioned issues, and precisely keeping hard-to-catch true-positive calls, which may occur with low allele-frequency (AF) or occur in low-complexity regions, are crucial for an accurate somatic mutation detection algorithm.</p><p id="Par4">To date, a range of tools have been developed to address the somatic mutation detection problem including MuTect2<sup><xref ref-type="bibr" rid="CR1">1</xref></sup>, MuSE<sup><xref ref-type="bibr" rid="CR2">2</xref></sup>, VarDict<sup><xref ref-type="bibr" rid="CR3">3</xref></sup>, VarScan2<sup><xref ref-type="bibr" rid="CR4">4</xref></sup>, Strelka2<sup><xref ref-type="bibr" rid="CR5">5</xref></sup>, and SomaticSniper<sup><xref ref-type="bibr" rid="CR6">6</xref></sup>. These tools employ different statistical and algorithmic approaches, which perform well in certain cancer or sample types for which they were designed; however, they are limited in generalization to a broader range of sample types and sequencing technologies and thus may exhibit suboptimal accuracy in such scenarios<sup><xref ref-type="bibr" rid="CR7">7</xref>&#x02013;<xref ref-type="bibr" rid="CR9">9</xref></sup>. In our earlier work, SomaticSeq<sup><xref ref-type="bibr" rid="CR10">10</xref></sup>, we used an ensemble approach to maximize the sensitivity by integrating algorithmically orthogonal methods. It also used machine learning to integrate almost a hundred features to keep the precision high, leading to an accuracy improvement over&#x000a0;all individual methods. Nevertheless, the machine-learning backbone used in SomaticSeq relies on a set of extracted features for the mutations&#x02019; locations. As a result, it cannot fully capture the raw information in the genomic contexts of the somatic mutations to further distinguish true somatic mutations from background errors, limiting its performance in challenging situations, such as low-complexity regions and low tumor purity.</p><p id="Par5">Here we address the limitation of generalizability and complexity of statistical modeling of tumor sequencing data by leveraging deep Convolutional Neural Networks (CNNs). CNNs have recently shown significant performance in classification problems from different domains including germline variant calling<sup><xref ref-type="bibr" rid="CR11">11</xref>&#x02013;<xref ref-type="bibr" rid="CR13">13</xref></sup> and skin cancer classification<sup><xref ref-type="bibr" rid="CR14">14</xref></sup>. Even so, applying CNNs to the challenging problem of somatic mutation detection has not been explored. The only previous deep learning based attempt<sup><xref ref-type="bibr" rid="CR15">15</xref></sup> was to apply a six-layer fully connected neural network to a set of manually extracted features. This approach lacks the power provided by the CNN architecture, which is to learn feature representations directly from the raw data using patterns seen in local regions. Besides, due to the complexity of fully connected networks, it has less generalizability and scalability as seen in CNNs.</p><p id="Par6">We introduce NeuSomatic, the first CNN-based approach for somatic mutation detection that can effectively leverage signals derived from sequence alignment, as well as from other methods to accurately identify somatic mutations. Unlike other deep learning based methods that are focused on germline variants, NeuSomatic is addressing a bigger unmet need in terms of accuracy due to the complexity of tumor samples. It can effectively capture important mutation signals directly from the raw data and consistently achieve high accuracy for different sequencing technologies, sample purities, and sequencing strategies such as whole-genome vs. target enrichment.</p></sec><sec id="Sec2" sec-type="results"><title>Results</title><sec id="Sec3"><title>NeuSomatic overview</title><p id="Par7">The inputs to NeuSomatic&#x02019;s network are candidate somatic mutations identified by scanning the sequence alignments for the tumor sample as well as the matched normal sample (Fig.&#x000a0;<xref rid="Fig1" ref-type="fig">1</xref>; Supplementary Figs.&#x000a0;<xref rid="MOESM1" ref-type="media">1</xref> and <xref rid="MOESM1" ref-type="media">2</xref>). Somatic mutations reported by other methods can also be included in this list of candidates. For each candidate locus, we construct a 3-dimensional feature matrix <bold>M</bold> (of size <italic>k</italic>&#x02009;&#x000d7;&#x02009;5&#x02009;&#x000d7;&#x02009;32), consisting of <italic>k</italic> channels each of size 5&#x02009;&#x000d7;&#x02009;32, to capture signals from the region centered around that locus. Each channel of the matrix <bold>M</bold> has five rows representing the four nucleotide bases as well as the gapped base (&#x02018;&#x02212;&#x02019;), and 32 columns representing the alignment columns around the candidate location.<fig id="Fig1"><label>Fig. 1</label><caption><p>NeuSomatic overview. <bold>a</bold> Toy example of input matrix preparation for a given candidate somatic SNV. Sequence alignment information in a window of seven bases around the candidate somatic mutation is extracted. The reference sequence is then augmented by adding gaps to account for insertions in the reads. The augmented alignment is then summarized into the reference matrix, the tumor count matrix, and the normal count matrix. The count matrices record the number of A/C/G/T and gap (&#x02018;-&#x02018;) characters in each column of the alignment, while the reference matrix records the reference bases in each column. The count matrices are then normalized by coverage to reflect base frequencies in each column. Separate channels are reserved to record the tumor and normal coverages. <bold>b</bold> The input 3-dimensional matrix and the proposed NeuSomatic network architecture. The input matrix consists of reference channel, tumor and normal-frequency channels, coverage and position channels, followed by several channels summarizing the alignment features. When used in ensemble mode, NeuSomatic also includes additional channels for other individual methods features. NeuSomatic network architecture consists of nine convolutional layers structured in four blocks with shortcut identity connections. We use two softmax classifiers and one regressor on the final layer to predict the mutation type, size, and position</p></caption><graphic xlink:href="41467_2019_9027_Fig1_HTML" id="d29e329"/></fig></p><p id="Par8">The first three channels, respectively, are the reference, tumor-frequency, and normal-frequency channels that summarize the reference bases around the candidate locus, as well as the frequency of different bases in that region. We augment the reference sequence around the candidate locus with gaps corresponding to the insertions in the read alignments (Fig.&#x000a0;<xref rid="Fig1" ref-type="fig">1a</xref>; Supplementary Figs.&#x000a0;<xref rid="MOESM1" ref-type="media">1</xref> and <xref rid="MOESM1" ref-type="media">2</xref>) in order to capture the insertions. Thus, each column of tumor and normal-frequency matrices represents the frequency of A/C/G/T/gap bases in the corresponding multiple sequence alignment (MSA) column of the tumor and normal samples, respectively. The remaining channels summarize other features, such as coverage, base quality, mapping quality, strand-bias, and clipping information for reads supporting different bases. If NeuSomatic is used in the ensemble mode, we also use additional channels for features reported by the individual somatic mutation detection methods. With this concise, yet comprehensive structured representation, NeuSomatic can use the necessary information in tumor, normal, and reference to differentiate difficult to catch somatic mutations with low AF from germline variants, as well as sequencing errors. This design also enables the use of convolutional filters in the CNN to capture contextual patterns in the sub-blocks of the matrix.</p><p id="Par9">To compare to other CNN approaches used in genomics problems, DeepVariant<sup><xref ref-type="bibr" rid="CR11">11</xref></sup> uses read pileup as the input for germline variant calling. In contrast, we use base frequency summary for each column as the input to our network. This simplifies the CNN structure, allowing a substantially more efficient implementation. For example, DeepVariant takes ~1000 CPU core-hours to call germline variants for a 30&#x000d7; whole-genome sample<sup><xref ref-type="bibr" rid="CR16">16</xref></sup>, whereas the stand-alone version of NeuSomatic can detect somatic mutations from 30&#x000d7; tumor-normal pair samples in ~156 CPU core-hours, despite handling two (tumor-normal) samples instead of one and looking for candidates at lower somatic AFs than germline 50 or 100% AF. Another germline variant calling method, Clairvoyante<sup><xref ref-type="bibr" rid="CR12">12</xref></sup>, uses three channels to summarize base counts for allele counts, deletions, and insertions at the center of the window. In contrast, we summarize all these events in a single base frequency matrix using the reference augmentation approach described earlier, which can clearly represent all the insertion and deletion (INDEL) events across the window.</p><p id="Par10">NeuSomatic employs a novel CNN structure that predicts the type and length of a candidate somatic mutation given the feature matrix <bold>M</bold> (Fig.&#x000a0;<xref rid="Fig1" ref-type="fig">1b</xref>). The proposed CNN consists of nine convolutional layers structured in four blocks with shortcut identity connections inspired by ResNet<sup><xref ref-type="bibr" rid="CR17">17</xref></sup> but with a different formation to adapt to the proposed input structure. We use two softmax classifiers and one regressor on the final layer. The first classifier identifies whether the candidate is a non-somatic call, SNV, insertion, or deletion. The second classifier predicts the length of the somatic mutation with four classes (0 indicating non-somatic, or lengths from 1, 2, or greater than 2), and the regressor predicts the location of the somatic mutation. Using the output of these classifiers we identify the set of somatic mutations. If the lengths of INDELs are predicted to be larger than 2, we perform a simple post-processing step on reads overlapping that position to resolve the INDEL sequence from the read alignment CIGAR string. This has been shown to perform well for data generated by Illumina sequencers. For higher error rate sequencing data, more complex local realignment post-processing is conducted to resolve the INDEL sequence.</p><p id="Par11">Since NeuSomatic can be used in stand-alone and ensemble modes, we use NeuSomatic-S to denote the stand-alone mode, while reserving NeuSomatic to denote the ensemble mode. We compared NeuSomatic and NeuSomatic-S against the state-of-the-art somatic mutation detection methods including MuTect2<sup><xref ref-type="bibr" rid="CR1">1</xref></sup>, MuSE<sup><xref ref-type="bibr" rid="CR2">2</xref></sup>, SomaticSniper<sup><xref ref-type="bibr" rid="CR6">6</xref></sup>, Strelka2<sup><xref ref-type="bibr" rid="CR5">5</xref></sup>, VarDict<sup><xref ref-type="bibr" rid="CR3">3</xref></sup>, and VarScan2<sup><xref ref-type="bibr" rid="CR4">4</xref></sup>, and against the ensemble approach, SomaticSeq<sup><xref ref-type="bibr" rid="CR10">10</xref></sup>. We compared and contrasted performance using multiple synthetic and real datasets. We report below, the synthetic datasets in increasing order of somatic mutation detection difficulty considering the AF of somatic mutation in the datasets.</p></sec><sec id="Sec4"><title>Comparison on the Platinum sample mixture dataset</title><p id="Par12">For the first synthetic dataset, as in previous studies<sup><xref ref-type="bibr" rid="CR5">5</xref>,<xref ref-type="bibr" rid="CR10">10</xref></sup> we mixed two normal Platinum Genomes<sup><xref ref-type="bibr" rid="CR18">18</xref></sup> samples, NA12877 and NA12878, at 70:30, 50:50, and 25:75 tumor purity ratios to create three tumor contamination profiles, and at 5:95 ratio to create a contaminated normal sample. We also included a test with 100% pure normal and 50% pure tumor. We used the germline variants in NA12878, which were reference calls in NA12877 as truth set for the evaluation. Both NeuSomatic-S and NeuSomatic significantly outperformed all other methods (Fig.&#x000a0;<xref rid="Fig2" ref-type="fig">2</xref> and Supplementary Table&#x000a0;<xref rid="MOESM1" ref-type="media">1</xref>). NeuSomatic&#x02019;s performance improvement over other approaches increased with lower, more challenging tumor purities (25:75 mixture). In summary, NeuSomatic yielded up to 99.6 and 97.2% F1-scores for SNVs and INDELs, respectively, overall and an improvement of up to 7.2% over the best method in the lowest sample purity for this dataset. For the sample with 50% tumor purity, reducing normal purity from 100 to 95% had minor impact on NeuSomatic&#x02019;s performance (&#x0003c;0.3%), whereas it caused ~3% decrease in SomaticSeq accuracy.<fig id="Fig2"><label>Fig. 2</label><caption><p>Performance analysis of the Platinum two sample mixture dataset. In this dataset, four tumor and normal purity scenarios (50% T:100% N, 70% T:95% N, 50% T:95% N, and 25% T:95% N) are used. <bold>a</bold> Precision-recall analysis: the confidence or quality scores are used to derive the precision-recall curves. The highest F1-score achieved by each algorithm is printed on the curve and marked with a solid circle. <bold>b</bold> Performance analysis of INDEL accuracy (F1-score) for different INDEL sizes</p></caption><graphic xlink:href="41467_2019_9027_Fig2_HTML" id="d29e434"/></fig></p></sec><sec id="Sec5"><title>Comparison on the ICGC-TCGA DREAM challenge datasets</title><p id="Par13">For the second synthetic dataset, we used the ICGC-TCGA DREAM Challenge Stage 3 and Stage 4 datasets<sup><xref ref-type="bibr" rid="CR19">19</xref></sup>, which were constructed by computationally spiking mutations into a healthy genome of a paired normal sample with different AFs (See Methods). We mixed the tumor and normal samples to create five tumor/normal purity senarios. NeuSomatic-S outperformed all other stand-alone methods for both Stage 3 and Stage 4 datasets by over 8% for SNVs and 22% for INDELs on average (Figs.&#x000a0;<xref rid="Fig3" ref-type="fig">3</xref> and <xref rid="Fig4" ref-type="fig">4</xref>; Supplementary Tables&#x000a0;<xref rid="MOESM1" ref-type="media">2</xref> and <xref rid="MOESM1" ref-type="media">3</xref>). This performance improvement increased with decreasing tumor purity. We further observed that NeuSomatic (the ensemble mode) clearly outperformed both SomaticSeq and NeuSomatic-S, even though NeuSomatic-S still outperformed SomaticSeq in more challenging scenarios, such as SNVs in the 25:75 mixture and INDELs in the 25:75 and 50:50 mixtures. In summary, NeuSomatic yielded up to 96.2 and 93.5% F1-scores for SNVs and INDELs, respectively, overall and an improvement of up to 34.6% over the best method in the lowest sample purity. For the sample with 50% tumor purity, reducing normal purity from 100 to 95% had minor impact on NeuSomatic&#x02019;s performance (~1.2% on average), whereas SomaticSeq and Strelka2 had &#x0003e;3% decrease in F1-score.<fig id="Fig3"><label>Fig. 3</label><caption><p>Performance analysis of the DREAM Stage 3 dataset. In this dataset, five tumor and normal purity scenarios (100% T:100% N, 50% T:100% N, 70% T:95% N, 50% T:95% N, and 25% T:95% N) are used. <bold>a</bold> Precision-recall analysis: the confidence or quality scores are used to derive the precision-recall curves. The highest F1-score achieved by each algorithm is printed on the curve and marked with a solid circle. <bold>b</bold> Performance analysis of INDEL accuracy (F1-score) for different INDEL sizes</p></caption><graphic xlink:href="41467_2019_9027_Fig3_HTML" id="d29e471"/></fig><fig id="Fig4"><label>Fig. 4</label><caption><p>Performance analysis of the DREAM Stage 4 dataset. In this dataset, five tumor and normal purity scenarios (100% T:100% N, 50% T:100% N, 70% T:95% N, 50% T:95% N, and 25% T:95% N) are used. <bold>a</bold> Precision-recall analysis: the confidence or quality scores are used to derive the precision-recall curves. The highest F1-score achieved by each algorithm is printed on the curve and marked with a solid circle. <bold>b</bold> Performance analysis of INDEL accuracy (F1-score) for different INDEL sizes</p></caption><graphic xlink:href="41467_2019_9027_Fig4_HTML" id="d29e486"/></fig></p></sec><sec id="Sec6"><title>Comparison on the Platinum tumor spike dataset</title><p id="Par14">For the third synthetic dataset, as in previous studies<sup><xref ref-type="bibr" rid="CR1">1</xref>,<xref ref-type="bibr" rid="CR10">10</xref></sup>, we constructed a tumor sample by spiking reads from NA12878 into NA12877 in variant positions of NA12878 with spike in frequencies sampled from a binomial distribution with means [0.05,&#x000a0;0.1,&#x000a0;0.2,&#x000a0;0.3] and used an independent set of NA12877 reads as pure normal. Note that, unlike earlier strategy, which mixed samples in fixed proportions yielding somatic mutations at fixed AFs, this mixing approach generated them at varying AFs ranging from 0.025 to 0.3. NeuSomatic yielded 80.9 and 66.7% F1-scores for SNVs and INDELs, respectively, overall and an improvement of up to 4% over the best method (Supplementary Fig.&#x000a0;<xref rid="MOESM1" ref-type="media">3</xref>; Supplementary Table&#x000a0;<xref rid="MOESM1" ref-type="media">4</xref>). For low AF somatic mutations, the performance improvement was even higher (11% improvement for AF&#x02009;=&#x02009;0.025 and 8% improvement for AF&#x02009;=&#x02009;0.05) (Supplementary Fig.&#x000a0;<xref rid="MOESM1" ref-type="media">3b</xref>).</p></sec><sec id="Sec7"><title>Comparison on the whole-exome and targeted panels</title><p id="Par15">To assess the performance of NeuSomatic on different target enrichments, we used a whole-exome and a targeted panel dataset from the Ashkenazi Jewish trio<sup><xref ref-type="bibr" rid="CR20">20</xref></sup> (Supplementary Figs.&#x000a0;<xref rid="MOESM1" ref-type="media">4</xref> and <xref rid="MOESM1" ref-type="media">5</xref>; Supplementary Tables&#x000a0;<xref rid="MOESM1" ref-type="media">5</xref> and <xref rid="MOESM1" ref-type="media">6</xref>). We trained NeuSomatic and SomaticSeq on the whole-exome dataset and applied the trained model on both the whole-exome and the panel. For whole-exome, NeuSomatic achieved up to 99.3 and 88.6% F1-scores for SNVs and INDELs, respectively. For the targeted panel, NeuSomatic and NeuSomatic-S consistently outperformed other methods with &#x0003e;99.2% F1-score for SNVs. Applying the model trained on whole-genome Platinum-mixture data on both target enrichment sets yielded similar performance, which confirmed the robustness of NeuSomatic (Supplementary Figs.&#x000a0;<xref rid="MOESM1" ref-type="media">6</xref> and <xref rid="MOESM1" ref-type="media">7</xref>). Similar to other datasets, for the sample with 50% tumor purity, reducing normal purity from 100 to 95% on whole-exome dataset could minimally reduce NeuSomatic&#x02019;s F1-score (~0.3% on average), whereas SomaticSeq and Strelka2 had &#x0003e;5% decrease in F1-score.</p></sec><sec id="Sec8"><title>Comparison on the PacBio dataset</title><p id="Par16">We further evaluated NeuSomatic&#x02019;s performance on reads with high error rates, particularly those from the long-read sequencing platforms. We used tumor-normal pair samples simulated with 20, 30, and 50% AF somatic mutations based on the raw PacBio reads (Fig.&#x000a0;<xref rid="Fig2" ref-type="fig">5</xref>, Supplementary Table&#x000a0;<xref rid="MOESM1" ref-type="media">7</xref>). NeuSomatic identified somatic SNVs and INDELs with F1-scores of up to 98.1 and 86.2%, respectively, which outperformed VarDict<sup><xref ref-type="bibr" rid="CR3">3</xref></sup> by up to 34.4% for SNVs and up to 53.2% for INDELs. This analysis confirms the capability of NeuSomatic in detecting somatic mutations even when the sequence reads have high error rate as in PacBio long raw reads.</p></sec><sec id="Sec9"><title>Comparison for different INDEL sizes</title><p id="Par17">It is worth noting that NeuSomatic consistently outperformed other methods for various INDEL sizes in different datasets (Figs.&#x000a0;<xref rid="Fig2" ref-type="fig">2</xref><xref rid="Fig2" ref-type="fig">b</xref>, <xref rid="Fig3" ref-type="fig">3</xref><xref rid="Fig3" ref-type="fig">b</xref>, <xref rid="Fig4" ref-type="fig">4</xref><xref rid="Fig4" ref-type="fig">b</xref>, <xref rid="Fig5" ref-type="fig">5b</xref>; Supplementary Figs.&#x000a0;<xref rid="MOESM1" ref-type="media">3c</xref> and <xref rid="MOESM1" ref-type="media">8</xref>). For large (&#x0003e;50 bases) INDELs, since most of the short reads with somatic INDELs are soft-clipped, the INDEL information is lost in the pileup count matrices. For such cases, NeuSomatic benefited from other methods&#x02019; predictions, since some of the methods like VarDict and MuTect2 used local assembly for their predictions.<fig id="Fig5"><label>Fig. 5</label><caption><p>Performance analysis of the PacBio dataset. In this dataset, three tumor and normal purity scenarios (70% T:95% N, 50% T:95% N, and 25% T:95% N) are used. <bold>a</bold> Precision-recall analysis: the confidence or quality scores are used to derive the precision-recall curves. The highest F1-score achieved by each algorithm is printed on the curve and marked with a solid circle. <bold>b</bold> Performance analysis of INDEL accuracy (F1-score) for different INDEL sizes</p></caption><graphic xlink:href="41467_2019_9027_Fig5_HTML" id="d29e595"/></fig></p></sec><sec id="Sec10"><title>INDEL type and position accuracy</title><p id="Par18">For all datasets discussed, we also assessed the performance of INDEL calling by different somatic mutation detection methods using the more relaxed criterion of simply predicting the positions of the somatic INDELs correctly (and ignoring the exact INDEL sequence). Again, we observed similar superiority of NeuSomatic over other schemes indicating that the main improvements are contributed by the proposed CNN structure and not the post-processing INDEL resolution steps (Supplementary Figs.&#x000a0;<xref rid="MOESM1" ref-type="media">9</xref> and <xref rid="MOESM1" ref-type="media">10</xref>).</p></sec><sec id="Sec11"><title>Read coverage analysis</title><p id="Par19">To evaluate the impact of sequence coverage on different techniques, we downsampled the whole-exome dataset to obtain samples with sequence coverages in the range of 20&#x000d7; and 100&#x000d7; (Fig.&#x000a0;<xref rid="Fig6" ref-type="fig">6</xref>, Supplementary Fig.&#x000a0;<xref rid="MOESM1" ref-type="media">11</xref>). NeuSomatic consistently outperformed other techniques for different coverages. The improvement increased as the problem became more challenging for lower coverages samples. In addition, reducing the coverage from 100&#x000d7; to 50&#x000d7; had very minimal impact (~1.5% for SNVs and ~5% for INDELS) on NeuSomatic, whereas SomaticSeq&#x02019;s F1-score dropped by ~20% for both SNVs and INDELs, and Strelka2&#x02019;s F1-score dropped by ~13% for SNVs and ~15% for INDELs. This analysis revealed both the robustness of NeuSomatic to coverage perturbations, as well as its advantage in challenging scenarios, which could be seen at lower coverages.<fig id="Fig6"><label>Fig. 6</label><caption><p>Performance analysis of the sequence coverage impact on the whole-exome sample mixture dataset. In this example, tumor has 50% purity and normal has 95% purity. <italic>Y</italic>-axis illustrates the highest F1-score achieved by each algorithm for sample alignments coverages ranging from 20&#x000d7; to 100&#x000d7;</p></caption><graphic xlink:href="41467_2019_9027_Fig6_HTML" id="d29e629"/></fig></p></sec><sec id="Sec12"><title>Training robustness</title><p id="Par20">We assessed the robustness of NeuSomatic&#x02019;s training for specific purity by training and testing on different purities for the DREAM Challenge Stage 3 datasets. Supplementary Fig.&#x000a0;<xref rid="MOESM1" ref-type="media">12</xref> shows that performance degrades only marginally even when we trained and tested on very different tumor purities. We also observed that training using data aggregated from multiple tumor purities was as good as training on the target tumor purity (Supplementary Fig.&#x000a0;<xref rid="MOESM1" ref-type="media">12</xref>). This suggests that a training set incorporating multiple tumor purities is sufficient to get a model, which is robust to tumor purity variation.</p></sec><sec id="Sec13"><title>Comparison on real data</title><p id="Par21">In the absence of a high-quality, comprehensive ground truth dataset for somatic mutations<sup><xref ref-type="bibr" rid="CR21">21</xref></sup>, like the Genome-in-a-Bottle gold set for germline variants<sup><xref ref-type="bibr" rid="CR22">22</xref></sup>, we would not be able to calculate F1 accuracy outside of synthetic data. Fortunately, there are existing datasets with validated somatic mutations we could take to estimate the accuracy performance of NeuSomatic on real data (See Methods for more details on how to extrapolate the F1-score on real data). We used two datasets: CLL1<sup><xref ref-type="bibr" rid="CR23">23</xref></sup>, a chronic lymphocytic leukemia patient whole-genome data with 961 validated somatic SNVs, and COLO-829<sup><xref ref-type="bibr" rid="CR24">24</xref>,<xref ref-type="bibr" rid="CR25">25</xref></sup>, an immortal metastatic malignant melanoma cell line-derived whole-genome dataset with 454 validated somatic SNVs. To evaluate NeuSomatic on these two real WGS samples, we used models trained on the DREAM Challenge Stage 3. As shown in Supplementary Tables&#x000a0;<xref rid="MOESM1" ref-type="media">8</xref> and <xref rid="MOESM1" ref-type="media">9</xref>, NeuSomatic achieved the highest extrapolated F1-score of 99.7 and 93.2%, respectively, for the COLO-829 malignant melanoma sample and the CLL1 chronic lymphocytic leukemia sample. We also evaluated NeuSomatic on a TCGA<sup><xref ref-type="bibr" rid="CR26">26</xref>,<xref ref-type="bibr" rid="CR27">27</xref></sup> whole-exome sequencing (WES) sample of colorectal adenocarcinoma (TCGA-AZ-6601), achieving the highest extrapolated F1-score of over 99.6%(Supplementary Table&#x000a0;<xref rid="MOESM1" ref-type="media">10</xref>).</p><p id="Par22">In order to demonstrate NeuSomatic&#x02019;s scalability and cost effectiveness on the cloud, we also processed 261 whole-exome sequenced cancer samples (Supplementary Table&#x000a0;<xref rid="MOESM1" ref-type="media">11</xref>) from TCGA on the Microsoft Azure cloud platform using both the ensemble and stand-alone modes. These samples were taken across multiple cancer types including colorectal adenocarcinoma, ovarian serus adenocarcinoma, cervical squamous cell carcinoma, and endocervical adenocarcinoma. While the cloud platform enabled us to automatically spin up compute instances on demand, it took, on average, 2.42&#x02009;hours and 0.72&#x02009;hours for ensemble and stand-alone modes, respectively, to process each sample. Using Azure&#x02019;s pre-emptible compute instances (the standard H16 instance types were used with 16 cores each) resulted in low per sample processing costs of 0.77 USD and 0.23 USD for the ensemble and stand-alone modes, respectively. We also assessed the accuracy of NeuSomatic on these samples by comparing against the 44,270 validated SNPs across these samples, which provided us with recall rates of 98.9 and 97.2% for ensemble and stand-alone modes, respectively. Thus, NeuSomatic not only can be used on different sequencing technologies or sequencing strategies but also can be run on a variety of compute platforms including a local HPC cluster and on an elastic cloud compute infrastructure.</p></sec></sec><sec id="Sec14" sec-type="discussion"><title>Discussion</title><p id="Par23">NeuSomatic is the first deep learning based framework for somatic mutation detection, which is high-performing and universal. While using the same CNN architecture, it achieves the best accuracy for varying tumor purities across multiple datasets ranging from synthetic to real, across multiple sequencing strategies ranging from whole genome to targeted as well as across multiple sequencing technologies ranging from short reads to high-error long reads. Specifically, for low tumor purities and low allelic frequencies, NeuSomatic significantly outperforms other state-of-the-art somatic mutation detection methods, thus demonstrating its capability in addressing the hard problem. NeuSomatic utilizes an efficient implementation of convolutional neural networks for solving the somatic mutation detection problem with speed and accuracy. It uses a novel summarization of tumor/normal alignment information as a set of input matrices that can effectively capture main signals in the genomic context. Training the proposed CNN architecture on these matrices enables learning feature representations directly from the raw data. The deep features, learned from observed training data, can accurately identify the important mutation signatures that can differentiate true calls from artifacts introduced by sequencing errors, cross contamination, or coverage biases. We believe NeuSomatic advances the state-of-the-art significantly by providing a very broadly applicable approach for somatic mutation detection.</p></sec><sec id="Sec15"><title>Methods</title><sec id="Sec16"><title>ICGC-TCGA DREAM Challenge data</title><p id="Par24">Stage 3 data consist of a normal sample and a tumor sample constructed by computationally spiking 7,903 SNVs and 7,604 INDELs mutations into a healthy genome of the same normal sample with three different AFs of 50, 33, and 20% to create synthetic but realistic tumoral normal pairs. Stage 4 data have similar formation, but with 16,268 SNVs and 14,194 INDELs in two subclones of 30 and 15% AF. We then constructed an impure normal by mixing 95% normal and 5% tumor reads. We also constructed four tumor mixtures by mixing tumor and normal, respectively, at 100:0, 70:30, 50:50, and 25:75 ratios. Thus, the somatic mutations across these four tumor mixture ratios have AFs ranging from 5 to 50% for Stage 3 dataset, and 3.75 to 30% for Stage 4 dataset.</p></sec><sec id="Sec17"><title>Platinum synthetic tumor data</title><p id="Par25">We downloaded 200&#x000d7; Platinum genomes samples&#x000a0;NA12878 and NA12877 and their truth germline variants (v2017-1.0)<sup><xref ref-type="bibr" rid="CR18">18</xref></sup> to construct a virtual tumor and normal pair (ENA accession number PRJEB3246). For the normal, we downsampled NA12877 to 50&#x000d7;. For tumor, we constructed three 50&#x000d7; in silico mixture samples with 70, 50, and 25% tumor purities, by independently downsampling NA12877, respectively, at 15&#x000d7;, 25&#x000d7;, and 37.5&#x000d7;, and mixing each with downsampled NA12878 at 35&#x000d7;, 25&#x000d7;, and 12.5&#x000d7;. We use the heterozygous and homozygous variants in NA12878, which are reference calls in NA12877 and are at least five bases apart from NA12877 variants and 300 base apart from each other as the truth set for the training and evaluation steps (1,103,285 SNVs and 174,754 INDELs). Thus, depending on the zygosity of the germline variants in NA12878, somatic mutations across these three tumor mixture ratios have AFs ranging from 12.5 to 70%.</p><p id="Par26">We also generated another 50&#x000d7; virtual tumor sample by randomly spiking reads from a downsampled (to 50&#x000d7; coverage) NA12878 into a downsampled (to 50&#x000d7; coverage) NA12877 data at heterozygous and homozygous variant locations in NA12878, which are reference calls in NA12877. For each variant, we randomly assigned the frequencies of spiked reads from a binomial distribution with means [0.05,&#x000a0;0.1,&#x000a0;0.2,&#x000a0;0.3]. Thus, depending on the zygosity of the variant, the mean somatic mutations AFs ranges from 2.5 to 30%. To avoid ambiguity in the truth set, we only used variants for which the relevant paired-end reads did not overlap any other variants (316,050 SNVs and 46,978 INDELs). This generated a contaminated tumor with reads from NA12878. We also used another independent downsampled (to 50&#x000d7;) data for NA12877 as the pure normal.</p><p id="Par27">For both experiments, FastQ files and truth germline variants were downloaded and aligned with BWA-MEM (v0.7.15)<sup><xref ref-type="bibr" rid="CR28">28</xref></sup> followed by Picard MarkDuplicates (v2.10.10) (<ext-link ext-link-type="uri" xlink:href="https://broadinstitute.github.io/picard">https://broadinstitute.github.io/picard</ext-link>), and GATK IndelRealigner and Base Quality Score Recalibration (v3.7)<sup><xref ref-type="bibr" rid="CR29">29</xref></sup>.</p></sec><sec id="Sec18"><title>Real tumor-normal pair data</title><p id="Par28">We used the CLL1 chronic lymphocytic leukemia dataset<sup><xref ref-type="bibr" rid="CR23">23</xref></sup> (accession: <ext-link ext-link-type="uri" xlink:href="https://www.ebi.ac.uk/ega/datasets/EGAD00001000023EGAD00001000023">https://www.ebi.ac.uk/ega/datasets/EGAD00001000023</ext-link>) and the COLO-829 immortal metastatic malignant melanoma cell line dataset<sup><xref ref-type="bibr" rid="CR24">24</xref>,<xref ref-type="bibr" rid="CR25">25</xref></sup> (accession: <ext-link ext-link-type="uri" xlink:href="https://www.ebi.ac.uk/ega/studies/EGAS00000000052EGAS00000000052">https://www.ebi.ac.uk/ega/studies/EGAS00000000052</ext-link>) to assess our approach on real tumor-normal pair data with published lists of validated somatic mutations.</p><p id="Par29">The COLO-829 dataset consists of 80&#x000d7; whole-genome sequencing tumor sample and its matched normal blood COLO-829BL sample at 60&#x000d7;, with 454 validated somatic SNVs. CLL1 has a whole-genome sequencing tumor sample and a matched normal, respectively, at 53&#x000d7; and 42&#x000d7; coverage, with 961 published somatic SNVs.</p><p id="Par30">The TCGA-AZ-6601<sup><xref ref-type="bibr" rid="CR26">26</xref>,<xref ref-type="bibr" rid="CR27">27</xref></sup> dataset is a whole-exome sequencing of a colon adenocarcinoma tumor sample and its matched normal tissue from TCGA. The tumor and normal samples were sequenced at depths of 145&#x000d7; and 165&#x000d7;, respectively. We used 952 validated SNVs in TCGA<sup><xref ref-type="bibr" rid="CR30">30</xref></sup> and COSMIC<sup><xref ref-type="bibr" rid="CR31">31</xref></sup> databases as the ground truth somatic mutations for this sample.</p><p id="Par31">For real data, we compute extrapolated precision as the percentage of predicted somatic mutations that have been called by at least two stand-alone methods, or have been reported as verified somatic mutations in at least two samples of the same cancer type in COSMIC database. We then compute extrapolated F1-score based on the harmonic mean of recall and this extrapolated precision.</p></sec><sec id="Sec19"><title>Whole-exome and targeted panel data</title><p id="Par32">To assess NeuSomatic on different target enrichment experiments we used whole-exome datasets from the Ashkenazi Jewish trio<sup><xref ref-type="bibr" rid="CR20">20</xref></sup>. We downloaded deep-sequenced (200&#x000d7; coverage) whole-exome alignment files for HG003 and HG004 (<ext-link ext-link-type="uri" xlink:href="ftp://ftp-trace.ncbi.nlm.nih.gov/giab/ftp/">ftp://ftp-trace.ncbi.nlm.nih.gov/giab/ftp/</ext-link>), along with the high-confidence germline variants (Genome-in-a-Bottle release v3.3.2). We then used mixtures of random 70&#x000d7;, 50&#x000d7;, and 25&#x000d7; downsamples of HG004 and 30&#x000d7;, 50&#x000d7;, and 75&#x000d7; downsamples of HG003, to construct 70, 50, and 25% pure tumor samples, respectively. We also constructed a 95% pure normal by mixing 95&#x000d7; HG003 and 5&#x000d7; HG004 downsampled alignments. For our analysis, we used Agilent SureSelect Human All Exon V5 BED file. The ground truth somatic mutations were identified similar to the Platinum synthetic tumor data (11,720 SNVs, 878 INDELs). Depending on the zygosity of the germline variants in HG004, somatic mutations across these three tumor mixture ratios have AFs ranging from 12.5 to 70%</p><p id="Par33">For validating the performance on the target panel, we restricted the above alignment and truth data to Illumina&#x02019;s TruSight inherited disease panel BED file (216 SNVs, 5 INDELs). We only evaluated the performance on SNVs due to the limited number of true INDELs in the target panel region.</p></sec><sec id="Sec20"><title>PacBio data</title><p id="Par34">For long-reads analysis, we downloaded the high-confidence germline variants (Genome-in-a-Bottle release v3.3.2) for HG002 sample (<ext-link ext-link-type="uri" xlink:href="ftp://ftp-trace.ncbi.nlm.nih.gov/giab/ftp/">ftp://ftp-trace.ncbi.nlm.nih.gov/giab/ftp/</ext-link>)<sup><xref ref-type="bibr" rid="CR20">20</xref></sup>. We built the long-reads error profile using the CHM1 dataset<sup><xref ref-type="bibr" rid="CR32">32</xref></sup> (SRA accession SRX533609). We then simulated a 100&#x000d7; pure normal sample using the VarSim simulation framework<sup><xref ref-type="bibr" rid="CR33">33</xref></sup> in combination with the LongISLND in silico long-reads sequencer simulator<sup><xref ref-type="bibr" rid="CR34">34</xref></sup>. Using a set of random somatic mutations, we also simulated a 100&#x000d7; pure tumor sample with the same error profile. We used NGMLR (v0.2.6)<sup><xref ref-type="bibr" rid="CR35">35</xref></sup> to align the sequences. We then mixed a 47.5&#x000d7; downsample of pure normal alignment and 2.5&#x000d7; downsample of the pure tumor alignment to form the 50&#x000d7; normal pair with 95% purity, and mixed 40&#x000d7;, 35&#x000d7;, and 25&#x000d7; independent downsamples of normal, respectively, with 10&#x000d7;, 15&#x000d7;, and 25&#x000d7; downsamples of pure tumor, to construct 50&#x000d7; tumor mixtures of 20, 30, and 50% purity. We restricted the training set to a 120 megabase region in chromosome 1 (with 39,818 truth somatic SNVs and 38,804 truth somatic INDELs), and the testing set to whole chromosome 22 (with 12,201 truth somatic SNVs and 12,185 truth somatic INDELs). Somatic mutations across the three tumor mixture ratios have AFs ranging from 20 to 50%.</p></sec><sec id="Sec21"><title>Candidate mutation preparation</title><p id="Par35">As the first step, we scan tumor read alignments to find candidate locations with evidence of mutations. Many of these positions have either germline variants or erroneous calls made due to the complexity of the genomic region, or sequencing artifacts. We apply a set of liberal filters on the set of candidate locations to make sure the number of such locations is reasonable. In general, for SNVs, we required AF &#x02265;0.03 or more than two reads supporting the SNV and Phred scaled base quality score larger than 19 (larger than 14 for real WES dataset) as the minimum requirements. For 1-base INDELs, we required AF &#x02265;0.02 or more than one read support. For INDELs larger than 1-base, we require AF &#x02265;0.03. For the ensemble approach, we also included any somatic mutation detected by other somatic mutation detection methods as input candidate. For the PacBio dataset, we used AF &#x02265;0.1 for SNVs and INDELs larger than 1-base, and AF &#x02265;0.15 for 1-base INDELs.</p><p id="Par36">For the DREAM Challenge dataset, we excluded variants existing in dbSNP<sup><xref ref-type="bibr" rid="CR36">36</xref></sup> from the input candidates. For fair comparison, we also filtered dbSNP calls for all other somatic mutation detection tools.</p></sec><sec id="Sec22"><title>Input mutation matrix</title><p id="Par37">For each candidate position, we prepare a 3-dimensional matrix <bold>M</bold> with <italic>k</italic> channels of size 5&#x02009;&#x000d7;&#x02009;32 (Fig.&#x000a0;<xref rid="Fig1" ref-type="fig">1a</xref>; Supplementary Figs.&#x000a0;<xref rid="MOESM1" ref-type="media">1</xref> and <xref rid="MOESM1" ref-type="media">2</xref>). The five rows in each channel corresponds to four DNA bases A, C, G, and T, and the gap character (&#x02018;&#x02212;&#x02019;). Each of the 32 columns of the matrix represents one column of the alignment.</p><p id="Par38">For each candidate location, we extract the tumor and normal read alignments. As shown in Fig.&#x000a0;<xref rid="Fig1" ref-type="fig">1a</xref>, we then consider the read alignments of tumor and normal sample to the reference as an MSA. To this end, we augment the reference sequence by adding gaps to the reference sequence, when there is insertion in reads. It must be noted that this process does not need any further realignment of the original read alignments of input BAM files, but only restructuring the alignments into MSA format by assigning additional columns wherever insertions has occurred. If there are multiple distinct insertions in multiple reads after a specific position, we consider them as left-aligned sequences and put them in the same set of columns (See for instance insertions of A and C bases in the nineth column of the toy example in Fig.&#x000a0;<xref rid="Fig1" ref-type="fig">1a</xref>). With this read representation, we find the frequency of A/C/G/T/- characters in each column and record separate matrices for tumor and normal samples (channels <italic>C</italic><sub>2</sub> and <italic>C</italic><sub>3</sub> in matrix M). In channel <italic>C</italic><sub>1</sub>, we record the reference base (or gap) in each column. Channels <italic>C</italic><sub><italic>i</italic></sub> (4&#x02009;&#x02264;&#x02009;<italic>i</italic>&#x02009;&#x02264;&#x02009;<italic>k</italic>) record other alignment signals in tumor and normal samples, such as coverage, base quality, mapping quality, strands, clipping information, edit distance, alignment score, and paired-end information. For instance, for the base quality channel, we have a matrix of size 5&#x02009;&#x000d7;&#x02009;32 for each sample, which records the average base quality of reads that have a given base (for a given row) in each column. As another instance, for the edit distance channel, we have a matrix of size 5&#x02009;&#x000d7;&#x02009;32 for each sample, which records the average edit distance of reads that have a given base (for a given row) in each column. One channel of matrix <bold>M</bold> is devoted to specify the column where the candidate is located in. In the current implementation, we used&#x000a0;a total of 26 channels in the stand-alone NeuSomatic-S approach.</p><p id="Par39">For the ensemble extension of NeuSomatic, we also included additional channels to capture features reported by each of the six individual methods used. In this implementation, we used 93 additional channels to represent features extracted from other methods, and alignments reported by SomaticSeq. Thus, the ensemble mode of NeuSomatic had 119 input channels for each candidate matrix.</p><p id="Par40">For each candidate location, we report the alignment information in a window of seven bases around the candidate. We reserve 32 columns to take into account the augmented alignment with insertions. In rare cases where we have a large insertion, 32 columns may not be enough to represent the alignment. For such cases, we truncate the insertions so that we can record at least three bases in the vicinity of the candidate.</p></sec><sec id="Sec23"><title>CNN architecture</title><p id="Par41">The proposed CNN (Fig.&#x000a0;<xref rid="Fig1" ref-type="fig">1b</xref>) consists of nine convolutional layers structured as follows. The input matrices are fed into the first convolution layer with 64 output channels, 1&#x02009;&#x000d7;&#x02009;3 kernel size and Relu activation followed by a batch normalization and a max-pooling layer. The output of this layer is then fed to a set of four blocks with shortcut identity connection similar to ResNet structure. These blocks consist of a convolution layer with 3&#x02009;&#x000d7;&#x02009;3 kernels followed by batch normalization and a convolution layer with 5&#x02009;&#x000d7;&#x02009;5 kernels. Between these shortcut blocks, we use batch normalization and max-pooling layers. The output of final block is fed to a fully connected layer of size 240. The resulting feature vector is then fed to two softmax classifiers and a regressor. The first classifier is a 4-way classifier that predicts the mutation type from the four classes of non-somatic, SNV, insertion, and deletion. The second classifier predicts the length of the predicted mutation from the four categories of 0, 1, 2, and &#x02265;3. Non-somatic calls are annotated as zero size mutations, SNVs and 1-base INDELs are annotated as size 1, while 2-base and &#x02265;3 size INDELs are, respectively, annotated as 2 and &#x02265;3 size mutations. The regressor predicts the column of the mutations in the matrix, to assure the prediction is targeted the right position and is optimized using a smooth L1 loss function.</p><p id="Par42">The CNN has less than 900&#x02009;K parameters, which enables us to have a highly efficient implementation by using large batch sizes. The whole-genome training process took ~8&#x02009;h on a machine with 8 Tesla K80 Nvidia GPU&#x02019;s.</p></sec><sec id="Sec24"><title>CNN training</title><p id="Par43">For DREAM Challenge, Platinum, and target enrichment datasets, we randomly split the genomic regions to 50% training and 50% testing sets. For the PacBio dataset, we trained NeuSomatic on a 120 megabase region on chromosome 1, and tested it on all of chromosome 22.</p><p id="Par44">For each dataset, we combined the generated training input matrices from all different tumor/normal purity scenarios, and used the combined set for training the network. We then applied this unified trained model to test in each individual tumor/normal purity setting.</p><p id="Par45">The DREAM Challenge dataset has 15,507 somatic mutations for Stage 3 and 30,462 somatic mutations for Stage 4. For better network training, we spiked in ~95&#x02009;K more SNVs and ~95&#x02009;K more INDELs with similar AF distributions to the original DREAM data into the tumor samples of Stages 3 and 4 using BAMSurgeon<sup><xref ref-type="bibr" rid="CR19">19</xref></sup>.</p><p id="Par46">We trained the network using a batch size of 1000 with SGD optimizer with learning rate of 0.01, and momentum of 0.9, and we multiplied the learning rate by 0.1 every 400 epochs.</p><p id="Par47">Since, in general, the input candidate locations have significantly more non-somatic (reference or germline) calls than true somatic mutations, in each epoch we use all the true somatic mutations in the training set and randomly selected non-somatic candidates with twice the number of the true somatic mutations. We used a weighted softmax classification loss function, to balance for the number of candidates in each category. For DREAM Challenge data, since we added more synthetic mutations in the training set, we boosted the weight for the non-somatic category to achieve higher precision on test set.</p><p id="Par48">For assessing synthetic target enrichment datasets, we used whole-exome and whole-genome data as the training set.</p><p id="Par49">To test on real WGS samples CLL1 and COLO-829, we used models trained on DREAM Challenge Stage 3 for SomaticSeq and NeuSomatic. For the real WES sample TCGA-AZ-6601, we prepared a training set using data from another TCGA WES dataset, TCGA-AZ-4315<sup><xref ref-type="bibr" rid="CR30">30</xref></sup>. We mixed the tumor and normal alignments from this dataset and split the mixture into two equal alignments. We then used one alignment as the pure normal and spiked in ~91&#x02009;K random SNVs and ~9&#x02009;K random INDELs into the other alignment using BAMSurgeon to generate a synthetic tumor sample for training. We used models trained on this synthetic tumor-normal WES dataset to test NeuSomatic and SomaticSeq on the real WES dataset, TCGA-AZ-6601. For the experiment on 261 real TCGA samples, we used a similar approach to prepare a training set using 12 TCGA samples. The models trained on this synthetic dataset were used to test on the 261 TCGA samples.</p></sec><sec id="Sec25"><title>Hyper-parameter tuning</title><p id="Par50">For hyper-parameter tuning, we used 10% of the genome in the DREAM Challenge Stage 3 experiment and used the derived parameters in all other experiments.</p><p id="Par51">We further explored different network architectures such as the pre-activation ResNet architecture with 4 to 16 ResNet blocks (including ResNet-18 and ResNet-34 architectures) (Supplementary Fig.&#x000a0;<xref rid="MOESM1" ref-type="media">13a&#x02013;e</xref>), as well as some variants of the proposed residual NeuSomatic architecture (Supplementary Fig.&#x000a0;<xref rid="MOESM1" ref-type="media">13f&#x02013;m</xref>). To evaluate these networks, we split the training data in the DREAM Stage 3 dataset into two halves and used one to train different architectures and the other to evaluate them in the stand-alone mode. Supplementary Table&#x000a0;<xref rid="MOESM1" ref-type="media">12</xref> compares these architectures in terms of accuracy, number of network parameters, memory usage, and speed. In general, all these networks can obtain relatively high accuracy compared to the conventional somatic mutation detection approaches. This observation revealed the importance of the proposed data summarization approach, which captures main signals in the genomic context of the candidates and facilitates efficient implementation of convolutional networks on the somatic mutation detection problem. The default ReSNet architectures with two 3&#x02009;&#x000d7;&#x02009;3 convolution filters (Supplementary Fig.&#x000a0;<xref rid="MOESM1" ref-type="media">13a&#x02013;e</xref>) have lower average accuracy compared to those with the proposed residual blocks (Supplementary Fig.&#x000a0;<xref rid="MOESM1" ref-type="media">13f&#x02013;m</xref>). In addition, networks with strided convolution (Supplementary Fig.&#x000a0;<xref rid="MOESM1" ref-type="media">13a&#x02013;g</xref>) have larger number of network parameters and run-time requirements. In summary, although each network architecture shows advantages in some of the compared aspects, we selected the proposed NeuSomatic network architecture (Fig.&#x000a0;<xref rid="Fig1" ref-type="fig">1b</xref>; Supplementary Fig.&#x000a0;<xref rid="MOESM1" ref-type="media">13k</xref>) as our default network architecture as a compromise of all these factors, while other networks can easily be adapted by users given their use-cases and time/computational constraints.</p></sec><sec id="Sec26"><title>Other somatic mutation detection algorithms</title><p id="Par52">We used Strelka2 (v2.8.4), Mutect2 (v4.0.0.0), SomaticSniper (v1.0.5.0), MuSE (v1.0rc), VarDict (v1.5.1), VarScan2 (v2.3.7), and SomaticSeq (v2.7.0) somatic mutation detection algorithms in our analysis, with their default settings.</p><p id="Par53">We used VarDict as an alternative approach to NeuSomatic on PacBio data. To enable detecting somatic mutations on high-error rate long reads, we used VarDict with &#x0201c; &#x02212;m 10000 &#x02212;Q 1 &#x02212;q 5 &#x02212;X 1 &#x02212;c 1 &#x02212;S 2 &#x02212;E 3 &#x02212;g 4 &#x02212;k 0 &#x0201c; parameter settings. Besides, as in NeuSomatic, we used AF &#x02265;0.1 for SNVs and AF &#x02265;0.15 for INDELs.</p><p id="Par54">To train SomaticSeq, we also followed the same 50% train/test region splitting as used for NeuSomatic. In addition, as in NeuSomatic, for each dataset we combined the training data from all different tumor/normal purity scenarios to train the SomaticSeq SNV and INDEL classifiers. These unified classifiers were then used to predict in each individual tumor/normal purity setting.</p><p id="Par55">For the precision-recall analysis, somatic mutations were sorted based on the confidence or quality scores assigned by each tool. For MuSE, we used the tier assignments as the sorting criterion. For VarDict, VarScan2, MuTect2, Strelka2, and SomaticSniper we, respectively, used SSF, SSC, TLOD, SomaticEVS, and SSC values reported in the VCF file for sorting. For SomaticSeq and NeuSomatic, we used the somatic mutation quality score in the QUAL field. NeuSomatic reports quality scores for the predicted somatic mutations based on the probability of predictions by CNN.</p><p id="Par56">To analyze performance on real samples, we used the PASS somatic calls from different methods (For VarDict we restricted to calls with StrongSomatic status). For NeuSomatic, we used 0.97 as the quality score threshold for WGS and 0.6 for WES.</p></sec><sec id="Sec27"><title>Computational complexity</title><p id="Par57">For whole-genome data, scanning 30&#x000d7; tumor and normal alignments to find candidates, extracting features, and preparing the input matrices can take ~3.9&#x02009;h on a dual-14 core Intel Xeon CPU E5-2680 v4 2.40&#x02009;GHz machine. The whole-genome training process can take ~8&#x02009;h on a machine with 8 Tesla K80 Nvidia GPU&#x02019;s (~90&#x02009;s per epoch of size 580,000). Depending on the cutoff AF on candidate somatic mutations, computing the network predictions for the candidate mutations on a 30&#x000d7; whole-genome data can take ~35&#x02009;min (with AF cutoff of 0.05, 3.9&#x02009;M candidates) to ~100&#x02009;min (with AF cutoff of 0.03, 11.5&#x02009;M candidates) with 8 Tesla K80 Nvidia GPUs. For 125&#x000d7; whole-exome data, the whole scanning, preparation, and computing the network predictions can take ~30&#x02009;min. The end-to-end run times for predicting somatic mutations on a 125&#x000d7; whole-exome dataset and a 30&#x000d7; whole-genome dataset using NeuSomatic ensemble and stand-alone approaches (in CPU-only mode) were compared with other somatic mutation detection techniques in Supplementary Figs.&#x000a0;<xref rid="MOESM1" ref-type="media">14</xref> and <xref rid="MOESM1" ref-type="media">15</xref>.</p></sec><sec id="Sec028"><title>Code availability</title><p id="Par058">NeuSomatic is written in Python and C++. Its deep learning framework is implemented using PyTorch 0.3.1 to enable GPU application for training/testing. The source code is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/bioinform/neusomatic">https://github.com/bioinform/neusomatic</ext-link> under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International license. The results in this paper were based on NeuSomatic v0.1.3.</p></sec><sec id="Sec28"><title>Reporting summary</title><p id="Par58">Further information on experimental design is available in the&#x000a0;<xref rid="MOESM2" ref-type="media">Nature Research Reporting Summary</xref> linked to this article.</p></sec></sec><sec sec-type="supplementary-material"><title>Supplementary information</title><sec id="Sec29"><p>
<supplementary-material content-type="local-data" id="MOESM1"><media xlink:href="41467_2019_9027_MOESM1_ESM.pdf"><caption><p>Supplementary Information</p></caption></media></supplementary-material>
<supplementary-material content-type="local-data" id="MOESM2"><media xlink:href="41467_2019_9027_MOESM2_ESM.pdf"><caption><p>Reporting Summary</p></caption></media></supplementary-material>
</p></sec></sec></body><back><fn-group><fn><p><bold>Journal peer review information</bold>: <italic>Nature Communications</italic> thanks Daniel Chow and the other anonymous reviewer(s) for their contribution to the peer review of this work.</p></fn><fn><p><bold>Publisher&#x02019;s note:</bold> Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p></fn></fn-group><sec><title>Supplementary information</title><p><bold>Supplementary Information</bold> accompanies this paper at 10.1038/s41467-019-09027-x.</p></sec><ack><title>Acknowledgements</title><p>We thank Li Tai Fang, Yunfei Guo, Lijing Yao, Betty Ulitsky, Jian Li, Anoop Grewal, Daniel Kogan, and Michael Braverman from Roche Sequencing Solutions for fruitful discussions and proofreading the manuscript.</p></ack><notes notes-type="author-contribution"><title>Author contributions</title><p>S.M.E.S., M.M., and H.Y.K.L conceived the study, reviewed the analysis, and wrote the manuscript. H.Y.K.L designed the study. M.M. and H.Y.K.L. supervised the study. S.M.E.S designed and developed the NeuSomatic algorithm and its software. R.L. and S.M.E.S developed the algorithm for scanning the genome, preparing the augmented alignments, and extracting alignment features. S.M.E.S performed the overall analysis. B.L., S.M.E.S., and M.M. performed the long-read analysis. S.M.E.S., M.M., and K.P. performed the cloud computation. All authors reviewed and edited the manuscript.</p></notes><notes notes-type="data-availability"><title>Data availability</title><p>Sequence data for this study were collected from various sources, i.e., the European Nucleotide Archive (accession: PRJEB3246; <ext-link ext-link-type="uri" xlink:href="https://www.ebi.ac.uk/ena">https://www.ebi.ac.uk/ena</ext-link>), the Sequence Read Archive (accession: SRX1026041; <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/sra">https://www.ncbi.nlm.nih.gov/sra</ext-link>), the International Cancer Genome Consortium (project: ICGC-TCGA DREAM Mutation Calling Challeng, controlled access: <ext-link ext-link-type="uri" xlink:href="https://icgc.org/">https://icgc.org/</ext-link>), The Cancer Genome Atlas (accessions: TCGA-AZ-6601, TCGA-AZ-4315; controlled access: <ext-link ext-link-type="uri" xlink:href="https://gdc.cancer.gov/">https://gdc.cancer.gov/</ext-link>), the European Genome-phenome Archive (accessions: EGAS00000000052, EGAD00001000023; controlled access: <ext-link ext-link-type="uri" xlink:href="https://www.ebi.ac.uk/ega/">https://www.ebi.ac.uk/ega/</ext-link>), and the Genome-in-a-Bottle (accessions: HG002, HG003, HG004; ftp://ftp-trace.ncbi.nlm.nih.gov/giab/ftp/). Synthetic data were generated from the above datasets using the scripts at <ext-link ext-link-type="uri" xlink:href="https://github.com/bioinform/neusomatic/blob/paper/etc/data_scripts.zip">https://github.com/bioinform/neusomatic/blob/paper/etc/data_scripts.zip</ext-link>. All other relevant data are available upon request.</p></notes><notes notes-type="COI-statement"><sec id="FPar1"><title>Competing interests</title><p>S.M.E.S, M.M., and H.Y.K.L. have filed a patent application on this invention. The remaining authors declare no competing interests.</p></sec></notes><ref-list id="Bib1"><title>References</title><ref id="CR1"><label>1.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cibulskis</surname><given-names>K</given-names></name><etal/></person-group><article-title>Sensitive detection of somatic point mutations in impure and heterogeneous cancer samples</article-title><source>Nat. Biotechnol.</source><year>2013</year><volume>31</volume><fpage>213</fpage><pub-id pub-id-type="doi">10.1038/nbt.2514</pub-id><pub-id pub-id-type="pmid">23396013</pub-id></element-citation></ref><ref id="CR2"><label>2.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fan</surname><given-names>Y</given-names></name><etal/></person-group><article-title>MuSE: accounting for tumor heterogeneity using a sample-specific error model improves sensitivity and specificity in mutation calling from sequencing data</article-title><source>Genome Biol.</source><year>2016</year><volume>17</volume><fpage>178</fpage><pub-id pub-id-type="doi">10.1186/s13059-016-1029-6</pub-id><pub-id pub-id-type="pmid">27557938</pub-id></element-citation></ref><ref id="CR3"><label>3.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lai</surname><given-names>Z</given-names></name><etal/></person-group><article-title>VarDict: a novel and versatile variant caller for next-generation sequencing in cancer research</article-title><source>Nucleic Acids Res.</source><year>2016</year><volume>44</volume><fpage>e108</fpage><lpage>e108</lpage><pub-id pub-id-type="doi">10.1093/nar/gkw227</pub-id><pub-id pub-id-type="pmid">27060149</pub-id></element-citation></ref><ref id="CR4"><label>4.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Koboldt</surname><given-names>DC</given-names></name><etal/></person-group><article-title>VarScan 2: somatic mutation and copy number alteration discovery in cancer by exome sequencing</article-title><source>Genome Res.</source><year>2012</year><volume>22</volume><fpage>568</fpage><lpage>576</lpage><pub-id pub-id-type="doi">10.1101/gr.129684.111</pub-id><pub-id pub-id-type="pmid">22300766</pub-id></element-citation></ref><ref id="CR5"><label>5.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kim</surname><given-names>S</given-names></name><etal/></person-group><article-title>Strelka2: fast and accurate calling of germline and somatic variants</article-title><source>Nat. Methods</source><year>2018</year><volume>15</volume><fpage>591</fpage><lpage>594</lpage><pub-id pub-id-type="doi">10.1038/s41592-018-0051-x</pub-id><pub-id pub-id-type="pmid">30013048</pub-id></element-citation></ref><ref id="CR6"><label>6.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Larson</surname><given-names>DE</given-names></name><etal/></person-group><article-title>SomaticSniper: identification of somatic point mutations in whole genome sequencing data</article-title><source>Bioinformatics</source><year>2011</year><volume>28</volume><fpage>311</fpage><lpage>317</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btr665</pub-id><pub-id pub-id-type="pmid">22155872</pub-id></element-citation></ref><ref id="CR7"><label>7.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wang</surname><given-names>Q</given-names></name><etal/></person-group><article-title>Detecting somatic point mutations in cancer genome sequencing data: a comparison of mutation callers</article-title><source>Genome Med.</source><year>2013</year><volume>5</volume><fpage>91</fpage><pub-id pub-id-type="doi">10.1186/gm495</pub-id><pub-id pub-id-type="pmid">24112718</pub-id></element-citation></ref><ref id="CR8"><label>8.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Alioto</surname><given-names>TS</given-names></name><etal/></person-group><article-title>A comprehensive assessment of somatic mutation detection in cancer using whole-genome sequencing</article-title><source>Nat. Commun.</source><year>2015</year><volume>6</volume><fpage>10001</fpage><pub-id pub-id-type="doi">10.1038/ncomms10001</pub-id><pub-id pub-id-type="pmid">26647970</pub-id></element-citation></ref><ref id="CR9"><label>9.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Roberts</surname><given-names>ND</given-names></name><etal/></person-group><article-title>A comparative analysis of algorithms for somatic SNV detection in cancer</article-title><source>Bioinformatics</source><year>2013</year><volume>29</volume><fpage>2223</fpage><lpage>2230</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btt375</pub-id><pub-id pub-id-type="pmid">23842810</pub-id></element-citation></ref><ref id="CR10"><label>10.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fang</surname><given-names>LT</given-names></name><etal/></person-group><article-title>An ensemble approach to accurately detect somatic mutations using SomaticSeq</article-title><source>Genome Biol.</source><year>2015</year><volume>16</volume><fpage>197</fpage><pub-id pub-id-type="doi">10.1186/s13059-015-0758-2</pub-id><pub-id pub-id-type="pmid">26381235</pub-id></element-citation></ref><ref id="CR11"><label>11.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Poplin</surname><given-names>R</given-names></name><etal/></person-group><article-title>A universal SNP and small-indel variant caller using deep neural networks</article-title><source>Nat. Biotechnol.</source><year>2018</year><volume>36</volume><fpage>983</fpage><?supplied-pmid 30247488?><pub-id pub-id-type="pmid">30247488</pub-id></element-citation></ref><ref id="CR12"><label>12.</label><mixed-citation publication-type="other">Luo, R., Sedlazeck, F. J., Lam, T.-W. &#x00026; Schatz, M. Clairvoyante: a multi-task convolutional deep neural network for variant calling in single molecule sequencing. <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/content/early/2018/04/28/310458">https://www.biorxiv.org/content/early/2018/04/28/310458</ext-link> (2018).</mixed-citation></ref><ref id="CR13"><label>13.</label><mixed-citation publication-type="other">Simple convolutional neural network for genomic variant calling with tensorflow. <ext-link ext-link-type="uri" xlink:href="https://towardsdatascience.com/simple-convolution-neural-network-for-genomic-variant-calling-with-tensorflow-c085dbc2026f">https://towardsdatascience.com/simple-convolution-neural-network-for-genomic-variant-calling-with-tensorflow-c085dbc2026f</ext-link> (2017).</mixed-citation></ref><ref id="CR14"><label>14.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Esteva</surname><given-names>A</given-names></name><etal/></person-group><article-title>Dermatologist-level classification of skin cancer with deep neural networks</article-title><source>Nature</source><year>2017</year><volume>542</volume><fpage>115</fpage><lpage>118</lpage><pub-id pub-id-type="doi">10.1038/nature21056</pub-id><pub-id pub-id-type="pmid">28117445</pub-id></element-citation></ref><ref id="CR15"><label>15.</label><mixed-citation publication-type="other">Torracinta, R. et al. Adaptive somatic mutations calls with deep learning and semi-simulated data. <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/content/early/2016/10/04/079087">https://www.biorxiv.org/content/early/2016/10/04/079087</ext-link> (2016).</mixed-citation></ref><ref id="CR16"><label>16.</label><mixed-citation publication-type="other">Running DeepVariant. <ext-link ext-link-type="uri" xlink:href="https://cloud.google.com/genomics/docs/tutorials/deepvariant">https://cloud.google.com/genomics/docs/tutorials/deepvariant</ext-link> (2018).</mixed-citation></ref><ref id="CR17"><label>17.</label><mixed-citation publication-type="other">He, K., Zhang, X., Ren, S. &#x00026; Sun, J. Deep residual learning for image recognition. <italic>Proc. IEEE conf. comput. vis. pattern recognit.</italic> 770&#x02013;778 (2016) <ext-link ext-link-type="uri" xlink:href="http://openaccess.thecvf.com/content_cvpr_2016/html/He_Deep_Residual_Learning_CVPR_2016_paper.html">http://openaccess.thecvf.com/content_cvpr_2016/html/He_Deep_Residual_Learning_CVPR_2016_paper.html</ext-link>.</mixed-citation></ref><ref id="CR18"><label>18.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Eberle</surname><given-names>MA</given-names></name><etal/></person-group><article-title>A reference data set of 5.4 million phased human variants validated by genetic inheritance from sequencing a three-generation 17-member pedigree</article-title><source>Genome Res.</source><year>2017</year><volume>27</volume><fpage>157</fpage><lpage>164</lpage><pub-id pub-id-type="doi">10.1101/gr.210500.116</pub-id><pub-id pub-id-type="pmid">27903644</pub-id></element-citation></ref><ref id="CR19"><label>19.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ewing</surname><given-names>AD</given-names></name><etal/></person-group><article-title>Combining tumor genome simulation with crowdsourcing to benchmark somatic single-nucleotide-variant detection</article-title><source>Nat. Methods</source><year>2015</year><volume>12</volume><fpage>623</fpage><pub-id pub-id-type="doi">10.1038/nmeth.3407</pub-id><pub-id pub-id-type="pmid">25984700</pub-id></element-citation></ref><ref id="CR20"><label>20.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zook</surname><given-names>JM</given-names></name><etal/></person-group><article-title>Extensive sequencing of seven human genomes to characterize benchmark reference materials</article-title><source>Sci. Data</source><year>2016</year><volume>3</volume><fpage>160025</fpage><pub-id pub-id-type="doi">10.1038/sdata.2016.25</pub-id><pub-id pub-id-type="pmid">27271295</pub-id></element-citation></ref><ref id="CR21"><label>21.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Xu</surname><given-names>C</given-names></name></person-group><article-title>A review of somatic single nucleotide variant calling algorithms for next-generation sequencing data</article-title><source>Comput. Struct. Biotechnol. J.</source><year>2018</year><volume>16</volume><fpage>15</fpage><lpage>24</lpage><pub-id pub-id-type="doi">10.1016/j.csbj.2018.01.003</pub-id><pub-id pub-id-type="pmid">29552334</pub-id></element-citation></ref><ref id="CR22"><label>22.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zook</surname><given-names>JM</given-names></name><etal/></person-group><article-title>Integrating human sequence data sets provides a resource of benchmark SNP and indel genotype calls</article-title><source>Nat. Biotechnol.</source><year>2014</year><volume>32</volume><fpage>246</fpage><pub-id pub-id-type="doi">10.1038/nbt.2835</pub-id><pub-id pub-id-type="pmid">24531798</pub-id></element-citation></ref><ref id="CR23"><label>23.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Puente</surname><given-names>XS</given-names></name><etal/></person-group><article-title>Whole-genome sequencing identifies recurrent mutations in chronic lymphocytic leukaemia</article-title><source>Nature</source><year>2011</year><volume>475</volume><fpage>101</fpage><pub-id pub-id-type="doi">10.1038/nature10113</pub-id><pub-id pub-id-type="pmid">21642962</pub-id></element-citation></ref><ref id="CR24"><label>24.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Morse</surname><given-names>HG</given-names></name><name><surname>Moore</surname><given-names>GE</given-names></name></person-group><article-title>Cytogenetic homogeneity in eight independent sites in a case of malignant melanoma</article-title><source>Cancer Genet. Cytogenet.</source><year>1993</year><volume>69</volume><fpage>108</fpage><lpage>112</lpage><pub-id pub-id-type="doi">10.1016/0165-4608(93)90083-X</pub-id><pub-id pub-id-type="pmid">8402545</pub-id></element-citation></ref><ref id="CR25"><label>25.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pleasance</surname><given-names>ED</given-names></name><etal/></person-group><article-title>A comprehensive catalogue of somatic mutations from a human cancer genome</article-title><source>Nature</source><year>2010</year><volume>463</volume><fpage>191</fpage><pub-id pub-id-type="doi">10.1038/nature08658</pub-id><pub-id pub-id-type="pmid">20016485</pub-id></element-citation></ref><ref id="CR26"><label>26.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Network</surname><given-names>CGA</given-names></name><etal/></person-group><article-title>Comprehensive molecular characterization of human colon and rectal cancer</article-title><source>Nature</source><year>2012</year><volume>487</volume><fpage>330</fpage><pub-id pub-id-type="doi">10.1038/nature11252</pub-id><pub-id pub-id-type="pmid">22810696</pub-id></element-citation></ref><ref id="CR27"><label>27.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Grasso</surname><given-names>CS</given-names></name><etal/></person-group><article-title>Genetic mechanisms of immune evasion in colorectal cancer</article-title><source>Cancer Discov.</source><year>2018</year><volume>8</volume><fpage>730</fpage><lpage>749</lpage><pub-id pub-id-type="doi">10.1158/2159-8290.CD-17-1327</pub-id><pub-id pub-id-type="pmid">29510987</pub-id></element-citation></ref><ref id="CR28"><label>28.</label><mixed-citation publication-type="other">Li, H. Aligning sequence reads, clone sequences and assembly contigs with BWA-MEM. <ext-link ext-link-type="uri" xlink:href="https://arxiv.org/abs/1303.3997">https://arxiv.org/abs/1303.3997</ext-link> (2013).</mixed-citation></ref><ref id="CR29"><label>29.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Van der Auwera</surname><given-names>GA</given-names></name><etal/></person-group><article-title>From FastQ data to high-confidence variant calls: the genome analysis toolkit best practices pipeline</article-title><source>Curr. Protoc. Bioinforma.</source><year>2013</year><volume>43</volume><fpage>10</fpage><lpage>11</lpage></element-citation></ref><ref id="CR30"><label>30.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Grossman</surname><given-names>RL</given-names></name><etal/></person-group><article-title>Toward a shared vision for cancer genomic data</article-title><source>N. Engl. J. Med.</source><year>2016</year><volume>375</volume><fpage>1109</fpage><lpage>1112</lpage><pub-id pub-id-type="doi">10.1056/NEJMp1607591</pub-id><pub-id pub-id-type="pmid">27653561</pub-id></element-citation></ref><ref id="CR31"><label>31.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Forbes</surname><given-names>SA</given-names></name><etal/></person-group><article-title>COSMIC: somatic cancer genetics at high-resolution</article-title><source>Nucleic Acids Res.</source><year>2016</year><volume>45</volume><fpage>D777</fpage><lpage>D783</lpage><pub-id pub-id-type="doi">10.1093/nar/gkw1121</pub-id><pub-id pub-id-type="pmid">27899578</pub-id></element-citation></ref><ref id="CR32"><label>32.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chaisson</surname><given-names>MJ</given-names></name><etal/></person-group><article-title>Resolving the complexity of the human genome using single-molecule sequencing</article-title><source>Nature</source><year>2015</year><volume>517</volume><fpage>608</fpage><pub-id pub-id-type="doi">10.1038/nature13907</pub-id><pub-id pub-id-type="pmid">25383537</pub-id></element-citation></ref><ref id="CR33"><label>33.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mu</surname><given-names>JC</given-names></name><etal/></person-group><article-title>VarSim: a high-fidelity simulation and validation framework for high-throughput genome sequencing with cancer applications</article-title><source>Bioinformatics</source><year>2014</year><volume>31</volume><fpage>1469</fpage><lpage>1471</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btu828</pub-id><pub-id pub-id-type="pmid">25524895</pub-id></element-citation></ref><ref id="CR34"><label>34.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lau</surname><given-names>B</given-names></name><etal/></person-group><article-title>LongISLND: in silico sequencing of lengthy and noisy datatypes</article-title><source>Bioinformatics</source><year>2016</year><volume>32</volume><fpage>3829</fpage><lpage>3832</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btw602</pub-id><pub-id pub-id-type="pmid">27667791</pub-id></element-citation></ref><ref id="CR35"><label>35.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sedlazeck</surname><given-names>FJ</given-names></name><etal/></person-group><article-title>Accurate detection of complex structural variations using single-molecule sequencing</article-title><source>Nat. Methods</source><year>2018</year><volume>15</volume><fpage>461</fpage><lpage>468</lpage><pub-id pub-id-type="doi">10.1038/s41592-018-0001-7</pub-id><pub-id pub-id-type="pmid">29713083</pub-id></element-citation></ref><ref id="CR36"><label>36.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sherry</surname><given-names>ST</given-names></name><etal/></person-group><article-title>dbSNP: the NCBI database of genetic variation</article-title><source>Nucleic Acids Res.</source><year>2001</year><volume>29</volume><fpage>308</fpage><lpage>311</lpage><pub-id pub-id-type="doi">10.1093/nar/29.1.308</pub-id><pub-id pub-id-type="pmid">11125122</pub-id></element-citation></ref></ref-list></back></article>